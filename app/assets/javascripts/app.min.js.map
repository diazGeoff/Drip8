{"version":3,"sources":["app.js","auth._.js","bucket._.js","dashboard._.js","drip-list._.js","drip-modal-bucket._.js","drip._.js","feature._.js","profile-service._.js","profile._.js","to._.js","ui-template._.js","video-dashboard._.js","video-link._.js","video._.js"],"names":["drip8","angular","module","window","fbAsyncInit","FB","init","appId","status","xfbml","version","directive","restrict","scope","link","element","attributeSet","login","location","$rootScope","$http","profileService","dripListService","elemenet","profileData","buckets","newDrip","id","bucketName","$broadcast","getDrip","post","user_id","dripbucket_id","success","response","console","log","newBucket","bucket","$","modal","name","state","reload","getAllBucket","profile","setProfile","splice","rename","drip","target","createAsyncTask","taskArray","setting","tasks","forEach","e","push","callback","drip_id","drips","dripList","setDripList","list","asyncTasks","async","parallel","err","taskResponse","deleteDrip","settingDropdown","$on","evt","JSON","parse","localStorage","userProfile","lastId","get","index","count","length","passProfile","setItem","stringify","seeBucket","loadMore","last","idLoad","service","credentials","Video","ids","split","dripFilter","array","newDripArray","dripListing","linkUri","video_id","ampersandPosition","indexOf","substring","thumbnail","videoSource","showVideo","atrributeSet","data","directDrip","dripBucketDetails","comments","dripbucket","thumb","changeVideo","react","comment","user","fbId","profile_picture","facebook_id","body","dripComment","dripDetails","addDrip","bucketId","dripState","feature","bind","compile","pre","profileName","undefined","getUserInfo","trustUrl","featured","featuredVideo","$watch","newValue","oldValue","to","templateUrl","ngTemplate","videoSrc","on","$apply","src","factory","$sce","this","youtubeId","trustAsResourceUrl"],"mappings":"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","file":"app.min.js","sourcesContent":["var drip8 = angular.module( \"Drip8\" , [ 'angular-flexslider' , 'infinite-scroll' ] );\n\nwindow.fbAsyncInit = function ( ) {\n\tFB.init( {\n\t\t\"appId\"    \t : \"719176184895882\",\n\t    \"status\"     : true,\n\t    \"xfbml\"      : true,\n\t    \"version\"    : 'v2.3' // or v2.0, v2.1, v2.0\n\t} );\n};","drip8\n\t.directive( \"auth\" , [\t\t\n\t\tfunction directive ( ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"A\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"link\": function onLink ( scope , element , attributeSet ) {\n\t\t\t\t\tscope.login = function login ( ) {\n\t\t\t\t\t\twindow.location = \"/auth/facebook\";\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );","drip8\n\t.directive( \"bucket\" , [\n\t\t\"$rootScope\",\n\t\t\"$http\",\n\t\t'profileService',\n\t\t'dripListService',\n\t\tfunction directive ( $rootScope , $http , profileService , dripListService ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"A\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"link\": function onLink ( scope , elemenet , attributeSet ) {\n\t\t\t\t\tscope.profileData = { };\n\n\t\t\t\t\tscope.buckets = [ ];\n\t\t\t\t\t//console.log( localStorage.userProfile );\n\t\t\t\t\tscope.newDrip = function newDrip ( id , bucketName ) {\n\t\t\t\t\t\t$rootScope.$broadcast( \"drip-new\" , id , bucketName );\n\t\t\t\t\t};\n\n\t\t\t\t\tscope.getDrip = function getDrip ( id ) {\n\t\t\t\t\t\t$http.post( \"/api/read_drips_by_bucket_and_user\" , {\n\t\t\t\t\t\t\t\"user_id\": scope.profileData.id,\n\t\t\t\t\t\t\t\"dripbucket_id\": id\n\t\t\t\t\t\t} )\n\t\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\t\tconsole.log( response );\n\t\t\t\t\t\t} );\n\t\t\t\t\t};\n\n\t\t\t\t\t\n\t\t\t\t\tscope.newBucket = function newBucket ( bucket ) {\n\t\t\t\t\t\t$( \"#createDripBoardBox\" ).modal( \"hide\" );\n\t\t\t\t\t\t$http.post( \"/api/add_bucket\" , {\n\t\t\t\t\t\t\t\"bucket\": {\n\t\t\t\t\t\t\t\t\"user_id\": scope.profileData.id,\n\t\t\t\t\t\t\t\t\"name\": bucket.name,\n\t\t\t\t\t\t\t\t\"state\": bucket.state\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} ).success( function ( response ) {\t\t\t\t\t\t\t\n\t\t\t\t\t\t\twindow.location.reload( );\n\t\t\t\t\t\t} );\n\t\t\t\t\t};\n\n\t\t\t\t\tscope.getAllBucket = function getAllBucket ( ) {\t\t\t\t\t\t\n\t\t\t\t\t\t$http.post( \"/api/read_all_bucket_by_user\" , {\n\t\t\t\t\t\t\t\"user_id\": scope.profileData.id\n\t\t\t\t\t\t} )\n\t\t\t\t\t\t.success( function ( response ) {\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tscope.buckets = response.buckets;\n\t\t\t\t\t\t\tvar profile = profileService.setProfile();\n\t\t\t\t\t\t\tif( scope.profileData.id == '1' || profile.id == '1' ){\n\t\t\t\t\t\t\t\tscope.buckets.splice( 0 , 3 );\n\t\t\t\t\t\t\t\t//console.log( scope.buckets );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} );\n\t\t\t\t\t};\n\t\t\t\t\tscope.rename = function rename ( drip , target ) {\t\t\t\t\t\t\n\t\t\t\t\t\t//console.log( drip , target );\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tvar createAsyncTask = function createAsyncTask ( taskArray , setting ) {\n\t\t\t\t\t\tvar tasks = [ ];\n\n\t\t\t\t\t\ttaskArray.forEach( function ( e ) {\n\t\t\t\t\t\t\tconsole.log( e )\n\t\t\t\t\t\t\tif( setting == 'public' ){\n\t\t\t\t\t\t\t\tsetting = e.state\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tsetting = 'profile only'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttasks.push( function ( callback ) {\n\t\t\t\t\t\t\t\t$http.post( \"/api/update_drip_state\" , { \n\t\t\t\t\t\t\t\t\t\"drip_id\": e.id,\n\t\t\t\t\t\t\t\t\t\"state\": setting  \n\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\t\t\t\tcallback( null , response );\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} );\n\t\t\t\t\t\treturn tasks;\n\t\t\t\t\t};\n\n\t\t\t\t\tscope.setting = function setting ( drips , setting , target , id ) {\t\t\t\t\t\t\n\t\t\t\t\t\t//console.log( drips , setting , target );\n\n\t\t\t\t\t\tswitch( target ){\n\n\t\t\t\t\t\t\tcase 'drip':\n\t\t\t\t\t\t\t\t$http.post( '/api/update_drip_state' , {\n\t\t\t\t\t\t\t\t\t\"drip_id\": drips.id,\n\t\t\t\t\t\t\t\t\t\"state\": setting \n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t.success( function( response ){\n\t\t\t\t\t\t\t\t\t//console.log( \"New\" , response );\n\t\t\t\t\t\t\t\t\tscope.$broadcast( \"drips-reload\" );\n\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'bucket':\n\t\t\t\t\t\t\t\tconsole.log( id );\n\t\t\t\t\t\t\t\tvar dripList = dripListService.setDripList();\n\t\t\t\t\t\t\t\tvar list = dripList[ id ];\n\n\t\t\t\t\t\t\t\tvar asyncTasks = createAsyncTask( list , setting );\n\t\t\t\t\t\t\t\tasync\n\t\t\t\t\t\t\t\t\t.parallel( asyncTasks , function ( err , taskResponse ) {\n\t\t\t\t\t\t\t\t\t\tconsole.log( taskResponse );\n\t\t\t\t\t\t\t\t\t\tscope.$broadcast( \"drips-reload\" );\n\t\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t};\n\t\t\t\t\tscope.deleteDrip = function deleteDrip ( drip , target ) {\t\t\t\t\t\t\n\t\t\t\t\t\tconsole.log( drip , target );\n\t\t\t\t\t};\t\t\t\t\n\n\t\t\t\t\tscope.settingDropdown = function settingDropdown( name ){\n\t\t\t\t\t\tvar profile = profileService.setProfile() // actual profile\n\t\t\t\t\t\tif( scope.profileData.id != profile.id ){\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tswitch( name ){\n\n\t\t\t\t\t\t\t\tcase 'who I am':\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase 'what I do':\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase 'what I am proud of':\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\n\t\t\t\t\tscope.$on( \"profile-data\" , \n\t\t\t\t\t\tfunction ( evt , profile ) {\n\t\t\t\t\t\t\tscope.profileData = JSON.parse( localStorage.userProfile );// visited profile \n\t\t\t\t\t\t\tconsole.log( \"profile data below\" )\n\t\t\t\t\t\t\tconsole.log( scope.profileData )\n\t\t\t\t\t\t\tscope.getAllBucket( );\n\t\t\t\t\t\t} );\t\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );","drip8\n\t.directive( \"dripDashboard\" , [\n\t\t\"$http\",\n\t\t'$rootScope',\n\t\tfunction directive ( $http , $rootScope ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"A\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"link\": function onLink ( scope , element , attributeSet ) {\n\t\t\t\t\tscope.drips = [ ];\n\t\t\t\t\tscope.lastId = \"dont stop\";\n\t\t\t\t\t$http.get( \"/api/drip_length\" )\n\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\tvar taskArray = [ ];\n\t\t\t\t\t\t\n\t\t\t\t\t\tfor ( var index = response.count  ; index >= ( response.count - 3 ) ; index -- ) {\n\t\t\t\t\t\t\ttaskArray.push( index );\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar asyncTasks = createAsyncTask( taskArray );\n\t\t\t\t\t\tasync\n\t\t\t\t\t\t\t.parallel( asyncTasks , function ( err , taskResponse ) {\n\t\t\t\t\t\t\t\tfor( var index = 0 ; index < taskResponse.length ; index++ ){\n\t\t\t\t\t\t\t\t\tif( taskResponse[ index ].drip == null || taskResponse[ index ].drip.state != 'public' || taskResponse[ index ].drip.state == 'deleted' ){\n\t\t\t\t\t\t\t\t\t\tconsole.log( \"***************************deleted\" , taskResponse[ index ].drip );\n\t\t\t\t\t\t\t\t\t\ttaskResponse.splice( index , 1 );\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tconsole.log( taskResponse[ index ].drip );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tscope.drips = taskResponse;\n\t\t\t\t\t\t\t\tconsole.log( taskResponse );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t} );\n\t\t\t\t\tscope.passProfile = function passProfile( profile ){\n\t\t\t\t\t\tlocalStorage.setItem(\"userProfile\", JSON.stringify( profile ) );\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tvar createAsyncTask = function createAsyncTask ( taskArray ) {\n\t\t\t\t\t\tvar tasks = [ ];\n\t\t\t\t\t\ttaskArray.forEach( function ( e ) {\n\t\t\t\t\t\t\tconsole.log( e )\n\t\t\t\t\t\t\ttasks.push( function ( callback ) {\n\t\t\t\t\t\t\t\t$http.post( \"/api/drip_each\" , { \"drip_id\": e } )\n\t\t\t\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\t\t\t\tcallback( null , response );\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} );\n\t\t\t\t\t\treturn tasks;\n\t\t\t\t\t};\n\t\t\t\t\tscope.seeBucket = function seeBucket( drip ){\n\t\t\t\t\t\tconsole.log( \"see Bucket\" );\n\t\t\t\t\t\t$rootScope.$broadcast( 'see-bucket' , drip );\n\t\t\t\t\t};\n\n\t\t\t\t\tscope.loadMore = function loadMore() {\n\t\t\t\t\t\tconsole.log( \" ***************  \" )\n\t\t\t\t\t\tconsole.log( scope.drips );\n\t\t\t\t\t\tconsole.log( scope.drips[scope.drips.length - 1] );\n\t\t\t\t\t    var last = scope.drips[scope.drips.length - 1];\n\t\t\t\t\t    if( last != null ){\n\t\t\t\t\t    \tvar lastId = last.drip.id;\n\t\t\t\t\t\t    var idLoad = lastId - 1;\n\t\t\t\t\t\t    if( lastId >= 0 && scope.lastId != 'stop' ){\n\t\t\t\t\t\t    \tconsole.log( scope.lastId );\n\t\t\t\t\t\t    \t$http.post( \"/api/drip_each\" , { \"drip_id\": idLoad } )\n\t\t\t\t\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\t\t\t\t\t//callback( null , response );\n\t\t\t\t\t\t\t\t\t\tconsole.log( response );\n\t\t\t\t\t\t\t\t\t\tif( response.drip != null && response.drip.state == 'public' ){\n\t\t\t\t\t\t\t\t\t\t\tscope.drips.push( response );\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tif( lastId == 0 ){\n\t\t\t\t\t\t\t\t\t\t\tscope.lastId = 'stop';\n\t\t\t\t\t\t\t\t\t\t\tconsole.log( scope.lastId );\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t    }\n\t\t\t\t\t    }\n\t\t\t\t\t};\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );\n\n\n// async\n// \t.parallel( [\n// \t\tfunction ( callback ) {\n\n// \t\t},\n// \t\tfunction ( callback ) {\n\n// \t\t}, \n// \t] , function doSomething ( err , arr ) {\n\n// \t} );","drip8\n\t.service( \"dripListService\" , [\n\t\t\tfunction(){\n\t\t\t\tvar dripList = [];\n\n\t\t\t\treturn {\n\t\t\t\t\t// takes id of dripBucket and sets drips in\n\t\t\t\t\tsetDripList: function setDripList( id , credentials ){\n\t\t\t\t\t\tif( credentials ){\n\t\t\t\t\t\t\tdripList[ id ] = credentials;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\treturn dripList\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t] );\n\ndrip8\n\t.directive( \"dripList\" , [\n\t\t\"$http\",\n\t\t\"Video\",\n\t\t\"$rootScope\",\n\t\t'dripListService',\n\t\tfunction directive ( $http , Video , $rootScope , dripListService ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"A\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"link\": function onLink ( scope , element , attributeSet ) {\n\n\t\t\t\t\tvar ids = attributeSet.dripList.split( \"-\" );\n\t\t\t\t\tconsole.log( ids[ 2 ] );\n\t\t\t\t\tscope.drips = [ ];\n\n\t\t\t\t\tvar dripFilter = function dripFilter ( array ){\n\t\t\t\t\t\tvar newDripArray = [];\n\n\t\t\t\t\t\tarray.forEach( function( e ) {\n\t\t\t\t\t\t\tif( e.state != 'deleted' ){\n\t\t\t\t\t\t\t\tnewDripArray.push( e );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} );\n\t\t\t\t\t\treturn newDripArray;\n\t\t\t\t\t};\n\n\t\t\t\t\tscope.dripListing = function dripListing ( ) {\n\t\t\t\t\t\t$http.post( \"/api/read_drips_by_bucket_and_user\" , {\n\t\t\t\t\t\t\t\"dripbucket_id\": ids[0],\n\t\t\t\t\t\t\t\"user_id\": ids[1]\n\t\t\t\t\t\t} )\n\t\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\t\tscope.drips = response.drips;\n\t\t\t\t\t\t\tdripListService.setDripList( ids[ 2 ] , scope.drips );\n\t\t\t\t\t\t\tconsole.log( scope.drips );\n\n\t\t\t\t\t\t\tscope.drips = dripFilter( scope.drips );\n\t\t\t\t\t\t} );\n\t\t\t\t\t};\n\n\t\t\t\t\tscope.linkUri = function linkUri ( link , service ) {\n\t\t\t\t\t\tvar video_id = link.split( 'v=' )[1];\n\t\t\t\t\t\tvar ampersandPosition = video_id.indexOf( '&' );\n\t\t\t\t\t\tif ( ampersandPosition != -1 ) {\n\t\t\t\t\t\t  video_id = video_id.substring( 0 , ampersandPosition );\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( service == \"thumb\" ) {\n\t\t\t\t\t\t\treturn Video.thumbnail( video_id );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn Video.videoSource( video_id );\n\t\t\t\t\t\t}\t\n\t\t\t\t\t};\n\n\t\t\t\t\tscope.showVideo = function showVideo ( link , id ) {\n\t\t\t\t\t\t$( \"#videoLink\" ).modal( \"show\" );\n\t\t\t\t\t\t$rootScope.$broadcast( \"video-source\" , link , id );\n\t\t\t\t\t};\n\n\t\t\t\t\tscope.dripListing( );\n\n\t\t\t\t\tscope.$on( \"drips-reload\" , \n\t\t\t\t\t\tfunction ( ) {\n\t\t\t\t\t\t\tscope.dripListing( );\n\t\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );","drip8\n\t.directive( \"dripModalBucket\" , [\n\t\t\"$http\",\n\t\t\"$rootScope\",\n\t\t'Video',\n\t\t'profileService',\n\t\tfunction directive ( $http , $rootScope , Video , profileService ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"A\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"link\": function onLink ( scope , element , atrributeSet ) {\n\t\t\t\t\tconsole.log( \"drip-modal-bucket\" );\n\t\t\t\t\t$rootScope.$on( 'see-bucket' , function( evt , data ){\n\t\t\t\t\t\tscope.directDrip = Video.videoSource( data.drip.link.split( \"v=\" )[1] );\n\t\t\t\t\t\tscope.dripBucketDetails = data;\n\t\t\t\t\t\tscope.comments = scope.dripBucketDetails.drip.comments;\n\t\t\t\t\t\tfor( var index = 0 ; index <= data.drip.dripbucket.drips.length-1 ; index++ ){\n\t\t\t\t\t\t\tvar video_id = scope.dripBucketDetails.drip.dripbucket.drips[ index ].link.split( \"v=\" )[1];\n\t\t\t\t\t\t\tconsole.log( video_id );\n\t\t\t\t\t\t\tscope.dripBucketDetails.drip.dripbucket.drips[ index ].thumb = Video.thumbnail( video_id );\n\t\t\t\t\t\t\tconsole.log( scope.dripBucketDetails.drip.dripbucket.drips[ index ].thumb );\n\t\t\t\t\t\t\tconsole.log( scope.dripBucketDetails.drip.dripbucket.drips[ index ].link );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconsole.log( scope.dripBucketDetails );\n\t\t\t\t\t\tscope.drip = scope.dripBucketDetails.drip;\n\t\t\t\t\t} );\n\n\n\t\t\t\t\tscope.changeVideo = function changeVideo( data ){\n\t\t\t\t\t\tscope.$broadcast( 'change-video' , data )\n\t\t\t\t\t};\n\n\t\t\t\t\tscope.$on( 'change-video' , function( evt , data ){\n\t\t\t\t\t\tscope.directDrip = Video.videoSource( data.link.split( \"v=\" )[1] );\n\t\t\t\t\t\tscope.comments = data.comments;\n\t\t\t\t\t\tscope.drip = data;\n\t\t\t\t\t\tconsole.log( data );\n\t\t\t\t\t} );\n\n\t\t\t\t\tscope.passProfile = function passProfile( profile ){\n\t\t\t\t\t\tlocalStorage.setItem(\"userProfile\", JSON.stringify( profile ) );\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tscope.react = function react( comment ){\n\t\t\t\t\t\tvar user = profileService.setProfile();\n\t\t\t\t\t\tvar fbId = user.profile_picture.split( \"/\" )[3];\n\t\t\t\t\t\tconsole.log( scope.dripBucketDetails );\n\t\t\t\t\t\tconsole.log( user.profile_picture.split( \"/\" ) )\n\t\t\t\t\t\t\n\t\t\t\t\t\t$http.post( \"/api/create_comment\" , {\n\t\t\t\t\t\t\t\t\"comment\":{\n\t\t\t\t\t\t\t\t\t\"user_id\"\t\t: user.id ,\n\t\t\t\t\t\t\t\t\t\"drip_id\"\t\t: scope.drip.id ,\n\t\t\t\t\t\t\t\t\t\"dripbucket_id\"\t: \"\" ,\n\t\t\t\t\t\t\t\t\t\"facebook_id\"\t: fbId ,\n\t\t\t\t\t\t\t\t\t\"body\"\t\t\t: comment\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\t\t\t\tvar comment = response.comment;\n\t\t\t\t\t\t\t\t\tcomment.user = user;\n\t\t\t\t\t\t\t\t\tscope.comments.push( comment );\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\tscope.dripComment = \"\";\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );","drip8\n\t.directive( \"drip\" , [\n\t\t\"$http\",\n\t\t\"$rootScope\",\n\t\tfunction directive ( $http , $rootScope ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"A\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"link\": function onLink ( scope , element , atrributeSet ) {\n\t\t\t\t\tscope.dripDetails = { \n\t\t\t\t\t\t\"state\": \"profile only\"\n\t\t\t\t\t};\n\n\t\t\t\t\tscope.profileData = { };\n\n\t\t\t\t\tscope.addDrip = function addDrip ( ) {\t\t\t\t\t\t\n\t\t\t\t\t\t$( \"#addADrip\" ).modal( \"hide\" );\n\t\t\t\t\t\tscope.dripDetails.user_id = scope.profileData.id;\n\t\t\t\t\t\t//console.log( scope.dripDetails.link.split( \":\" ) )\n\t\t\t\t\t\t$http.post( \"/api/add_drip\" , {\n\t\t\t\t\t\t\t\"drip\": scope.dripDetails\n\t\t\t\t\t\t} )\n\t\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\t\t$rootScope.$broadcast( \"drips-reload\" );\n\t\t\t\t\t\t\tscope.dripDetails = { \n\t\t\t\t\t\t\t\t\"state\": \"public\"\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t} );\t\t\t\t\t\t\n\t\t\t\t\t};\n\t\t\t\t\t/**\n\t\t\t\t\t\t * JavaScript function to match (and return) the video Id \n\t\t\t\t\t\t * of any valid Youtube Url, given as input string.\n\t\t\t\t\t\t * @author: Stephan Schmitz <eyecatchup@gmail.com>\n\t\t\t\t\t\t * @url: http://stackoverflow.com/a/10315969/624466\n\t\t\t\t\t\t ng-pattern\n\t\t\t\t\t\t /^(?:https?:\\/\\/)?(?:www\\.)?(?:youtu\\.be\\/|youtube\\.com\\/(?:embed\\/|v\\/|watch\\?v=|watch\\?.+&v=))((\\w|-){11})(?:\\S+)?$/;\n\t\t\t\t\t*/\n\n\t\t\t\t\tscope.$on( \"drip-new\" , \n\t\t\t\t\t\tfunction ( evt , bucketId , bucketName ) {\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tscope.dripDetails.dripbucket_id = bucketId;\n\t\t\t\t\t\t\tscope.bucketName = bucketName;\n\t\t\t\t\t\t\tscope.dripState = function dripState(){\n\t\t\t\t\t\t\t\tif( scope.bucketName == 'who I am' || scope.bucketName == 'what I do' || scope.bucketName == 'what I am proud of' ){\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\t\t\n\t\t\t\t\t\t} );\n\n\t\t\t\t\tscope.$on( \"profile-data\" , \n\t\t\t\t\t\tfunction ( evt , profile ) {\n\t\t\t\t\t\t\tscope.profileData = profile;\n\t\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );","drip8\n\t.directive( \"feature\" , [\n\t\t\"$http\",\n\t\tfunction directive ( $http ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"A\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"link\": function onLink ( scope , element , attributeSet ) {\t\t\t\t\t\n\n\t\t\t\t\tvar ids = attributeSet.feature.split( \"-\" );\n\n\t\t\t\t\telement.bind( \"click\" , \n\t\t\t\t\t\tfunction ( ) {\n\t\t\t\t\t\t\t$http.post( \"/api/new_featured\" , {\n\t\t\t\t\t\t\t\t\"user_id\": ids[0],\n\t\t\t\t\t\t\t\t\"drip_id\": ids[1]\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\t\t\twindow.location.reload( );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );","drip8\n\t.service( 'profileService' , [\n\t\tfunction(){\n\t\t\tvar profile = {};\n\t\t\treturn{\n\t\t\t\tsetProfile: function setProfile( credentials ){\n\t\t\t\t\tif( credentials ){\n\t\t\t\t\t\tprofile = credentials;\n\t\t\t\t\t\t//console.log( profile );\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn profile;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] )","drip8\n\t.directive( \"profile\" , [\n\t\t\"$http\",\n\t\t\"Video\",\n\t\t\"$rootScope\",\n\t\t'profileService',\n\t\tfunction directive ( $http , Video , $rootScope , profileService ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"A\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"compile\": function compile ( element , attributeSet ){\n\t\t\t\t\treturn{\n\n\t\t\t\t\t\tpre: function pre( scope , element , attributeSet ){\n\t\t\t\t\t\t\tscope.count = 0;\n\t\t\t\t\t\t\tscope.profileName = function profileName( name ){\n\t\t\t\t\t\t\t\tif( name != undefined ){\n\t\t\t\t\t\t\t\t\tscope.count += 1;\n\t\t\t\t\t\t\t\t\tif( scope.count == 1 ){\n\t\t\t\t\t\t\t\t\t\tvar name = name.split( \" \" );\n\t\t\t\t\t\t\t\t\t\tconsole.log( scope.count );\n\t\t\t\t\t\t\t\t\t\tconsole.log( name );\n\t\t\t\t\t\t\t\t\t\treturn name[ 0 ];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t},\n\n\t\t\t\t\t\tpost: function post( scope , element , attributeSet ){\n\t\t\t\t\t\t\t//console.log( \"profile\" );\n\t\t\t\t\t\t\tscope.profile = { };\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tscope.getUserInfo = function getUserInfo ( ) {\n\t\t\t\t\t\t\t\t$http.get( \"/api/user\" )\n\t\t\t\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\t\t\t\tscope.profile = response.data;\n\t\t\t\t\t\t\t\t\tscope.trustUrl( );\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tscope.passProfile = function passProfile( profile ){\n\t\t\t\t\t\t\t\tlocalStorage.setItem(\"userProfile\", JSON.stringify( profile ) );\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tscope.trustUrl = function trustUrl ( ) {\n\t\t\t\t\t\t\t\tvar video_id = \"\";\n\t\t\t\t\t\t\t\t$http.post( \"/api/video_featured\" , {\n\t\t\t\t\t\t\t\t\t\"user_id\": scope.profile.id\n\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\t\t\t\tif ( response.link ) {\n\t\t\t\t\t\t\t\t\t\tvideo_id = response.link.split( 'v=' )[1];\n\t\t\t\t\t\t\t\t\t\tvar ampersandPosition = video_id.indexOf( '&' );\n\t\t\t\t\t\t\t\t\t\tif ( ampersandPosition != -1 ) {\n\t\t\t\t\t\t\t\t\t\t  video_id = video_id.substring( 0 , ampersandPosition );\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tscope.profile.featured = response.link;\n\t\t\t\t\t\t\t\t\t$rootScope.$broadcast( \"profile-data\" , scope.profile );\n\t\t\t\t\t\t\t\t\tscope.profile.featuredVideo = Video.videoSource( video_id );\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tscope.$watch( 'profile' , function( newValue , oldValue ){\n\t\t\t\t\t\t\t\tif( newValue != oldValue ){\n\t\t\t\t\t\t\t\t\tscope.profile.newValue;\n\t\t\t\t\t\t\t\t\tconsole.log( \"Profile****\" , scope.profile );\n\t\t\t\t\t\t\t\t\tprofileService.setProfile( scope.profile );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\tscope.getUserInfo( );\t\n\t\t\t\t\t\t\tscope.profileData = JSON.parse( localStorage.userProfile );\n\t\t\t\t\t\t\tconsole.log( scope.profileData );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );","drip8\n\t.directive( \"to\" , [\n\t\tfunction directive ( ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"A\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"link\": function onLink ( scope , element , attributeSet ) {\n\n\t\t\t\t\telement.bind( \"click\" , \n\t\t\t\t\t\tfunction ( ) {\n\t\t\t\t\t\t\twindow.location = attributeSet.to;\n\t\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );","drip8\n\t.directive( \"uiTemplate\" , [\n\t\tfunction directive ( ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"E\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"templateUrl\": function onTemplateLoad ( element , attributeSet ) {\n\t\t\t\t\treturn \"/api/template?template=\" + attributeSet.ngTemplate;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );","drip8\n\t.directive( \"videoDashboard\" , [\n\t\t\"$http\",\n\t\t\"Video\",\t\t\n\t\tfunction directive ( $http , Video ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"A\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"link\": function onLink ( scope , element , attributeSet ) {\n\t\t\t\t\tscope.videoSrc = Video.videoSource( attributeSet.videoSource.split( \"v=\" )[1] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );","drip8\n\t.directive( \"videoLink\" , [\n\t\t'$http',\n\t\t'profileService',\n\t\tfunction  directive ( $http , profileService ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"A\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"link\": function onLink ( scope , element , attributeSet ) {\n\t\t\t\t\tscope.videoSource;\n\n\t\t\t\t\t$( \"#videoLink\" ).on( \"hidden.bs.modal\" , \n\t\t\t\t\t\tfunction ( ) {\n\t\t\t\t\t\t\tscope.$apply( function ( ) {\n\t\t\t\t\t\t\t\tscope.videoSource = \"\";\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} );\n\n\t\t\t\t\tscope.$on( \"video-source\" , \n\t\t\t\t\t\tfunction ( evt , src , id ) {\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tscope.videoSource = src;\n\t\t\t\t\t\t\t$http.post( \"/api/drip_each\" , { \"drip_id\": id } )\n\t\t\t\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\t\t\t\tconsole.log( response );\n\t\t\t\t\t\t\t\t\tscope.comments = response.drip.comments;\n\t\t\t\t\t\t\t\t\tscope.drip = response.drip;\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} );\n\t\t\t\t\tscope.react = function react( comment ){\n\t\t\t\t\t\tvar user = profileService.setProfile();\n\t\t\t\t\t\tvar fbId = user.profile_picture.split( \"/\" )[3];\n\t\t\t\t\t\tconsole.log( scope.dripBucketDetails );\n\t\t\t\t\t\tconsole.log( user.profile_picture.split( \"/\" ) )\n\t\t\t\t\t\t\n\t\t\t\t\t\t$http.post( \"/api/create_comment\" , {\n\t\t\t\t\t\t\t\t\"comment\":{\n\t\t\t\t\t\t\t\t\t\"user_id\"\t\t: user.id ,\n\t\t\t\t\t\t\t\t\t\"drip_id\"\t\t: scope.drip.id ,\n\t\t\t\t\t\t\t\t\t\"dripbucket_id\"\t: \"\" ,\n\t\t\t\t\t\t\t\t\t\"facebook_id\"\t: fbId ,\n\t\t\t\t\t\t\t\t\t\"body\"\t\t\t: comment\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\t\t\t\tvar comment = response.comment;\n\t\t\t\t\t\t\t\t\tcomment.user = user;\n\t\t\t\t\t\t\t\t\tscope.comments.push( comment );\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\tscope.dripComment = \"\";\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );","drip8\n\t.factory( \"Video\" , [\n\t\t\"$sce\",\n\t\tfunction factory ( $sce ) {\n\t\t\tthis.thumbnail = function thumbnail ( youtubeId ) {\n\t\t\t\treturn $sce.trustAsResourceUrl( \"http://img.youtube.com/vi/\" + youtubeId + \"/0.jpg\" );\n\t\t\t};\n\n\t\t\tthis.videoSource = function videoSource ( youtubeId ) {\n\t\t\t\treturn $sce.trustAsResourceUrl( \"http://www.youtube.com/embed/\" + youtubeId + \"?rel=0&nologo=1&showinfo=0&modestbranding=1&iv_load_policy=3\" );\n\t\t\t};\n\n\t\t\treturn this;\n\t\t}\n\t] );"],"sourceRoot":"/source/"}