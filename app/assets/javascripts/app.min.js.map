{"version":3,"sources":["app.js","auth._.js","bucket._.js","dashboard._.js","drip-list._.js","drip-modal-bucket._.js","drip._.js","feature._.js","profile-service._.js","profile._.js","to._.js","ui-template._.js","video-dashboard._.js","video-link._.js","video._.js"],"names":["drip8","angular","module","window","fbAsyncInit","FB","init","appId","status","xfbml","version","directive","restrict","scope","link","element","attributeSet","login","location","$rootScope","$http","profileService","elemenet","profileData","buckets","newDrip","id","bucketName","$broadcast","getDrip","post","user_id","dripbucket_id","success","response","console","log","newBucket","bucket","$","modal","name","state","reload","getAllBucket","profile","setProfile","splice","rename","drip","target","setting","drips","drip_id","deleteDrip","settingDropdown","$on","evt","JSON","parse","localStorage","userProfile","lastId","get","taskArray","index","count","push","asyncTasks","createAsyncTask","async","parallel","err","taskResponse","length","passProfile","setItem","stringify","tasks","forEach","e","callback","seeBucket","loadMore","last","idLoad","Video","ids","dripList","split","dripListing","linkUri","service","video_id","ampersandPosition","indexOf","substring","thumbnail","videoSource","showVideo","atrributeSet","data","directDrip","dripBucketDetails","comments","dripbucket","thumb","changeVideo","react","comment","user","fbId","profile_picture","facebook_id","body","dripComment","dripDetails","addDrip","bucketId","feature","bind","credentials","getUserInfo","trustUrl","featured","featuredVideo","$watch","newValue","oldValue","to","templateUrl","ngTemplate","videoSrc","on","$apply","src","factory","$sce","this","youtubeId","trustAsResourceUrl"],"mappings":"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","file":"app.min.js","sourcesContent":["var drip8 = angular.module( \"Drip8\" , [ 'angular-flexslider' , 'infinite-scroll' ] );\n\nwindow.fbAsyncInit = function ( ) {\n\tFB.init( {\n\t\t\"appId\"    \t : \"719176184895882\",\n\t    \"status\"     : true,\n\t    \"xfbml\"      : true,\n\t    \"version\"    : 'v2.3' // or v2.0, v2.1, v2.0\n\t} );\n};","drip8\n\t.directive( \"auth\" , [\t\t\n\t\tfunction directive ( ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"A\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"link\": function onLink ( scope , element , attributeSet ) {\n\t\t\t\t\tscope.login = function login ( ) {\n\t\t\t\t\t\twindow.location = \"/auth/facebook\";\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );","drip8\n\t.directive( \"bucket\" , [\n\t\t\"$rootScope\",\n\t\t\"$http\",\n\t\t'profileService',\n\t\tfunction directive ( $rootScope , $http , profileService ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"A\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"link\": function onLink ( scope , elemenet , attributeSet ) {\n\t\t\t\t\tscope.profileData = { };\n\n\t\t\t\t\tscope.buckets = [ ];\n\t\t\t\t\t//console.log( localStorage.userProfile );\n\t\t\t\t\tscope.newDrip = function newDrip ( id , bucketName ) {\n\t\t\t\t\t\t$rootScope.$broadcast( \"drip-new\" , id , bucketName );\n\t\t\t\t\t};\n\n\t\t\t\t\tscope.getDrip = function getDrip ( id ) {\n\t\t\t\t\t\t$http.post( \"/api/read_drips_by_bucket_and_user\" , {\n\t\t\t\t\t\t\t\"user_id\": scope.profileData.id,\n\t\t\t\t\t\t\t\"dripbucket_id\": id\n\t\t\t\t\t\t} )\n\t\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\t\tconsole.log( response );\n\t\t\t\t\t\t} );\n\t\t\t\t\t};\n\n\t\t\t\t\tscope.newBucket = function newBucket ( bucket ) {\n\t\t\t\t\t\t$( \"#createDripBoardBox\" ).modal( \"hide\" );\n\t\t\t\t\t\t$http.post( \"/api/add_bucket\" , {\n\t\t\t\t\t\t\t\"bucket\": {\n\t\t\t\t\t\t\t\t\"user_id\": scope.profileData.id,\n\t\t\t\t\t\t\t\t\"name\": bucket.name,\n\t\t\t\t\t\t\t\t\"state\": bucket.state\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} ).success( function ( response ) {\t\t\t\t\t\t\t\n\t\t\t\t\t\t\twindow.location.reload( );\n\t\t\t\t\t\t} );\n\t\t\t\t\t};\n\n\t\t\t\t\tscope.getAllBucket = function getAllBucket ( ) {\t\t\t\t\t\t\n\t\t\t\t\t\t$http.post( \"/api/read_all_bucket_by_user\" , {\n\t\t\t\t\t\t\t\"user_id\": scope.profileData.id\n\t\t\t\t\t\t} )\n\t\t\t\t\t\t.success( function ( response ) {\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tscope.buckets = response.buckets;\n\t\t\t\t\t\t\tvar profile = profileService.setProfile();\n\t\t\t\t\t\t\tif( scope.profileData.id == '1' || profile.id == '1' ){\n\t\t\t\t\t\t\t\tscope.buckets.splice( 0 , 3 );\n\t\t\t\t\t\t\t\t//console.log( scope.buckets );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} );\n\t\t\t\t\t};\n\t\t\t\t\tscope.rename = function rename ( drip , target ) {\t\t\t\t\t\t\n\t\t\t\t\t\t//console.log( drip , target );\n\t\t\t\t\t};\n\t\t\t\t\tscope.setting = function setting ( drips , setting , target ) {\t\t\t\t\t\t\n\t\t\t\t\t\tconsole.log( drips , setting , target );\n\n\t\t\t\t\t\tswitch( target ){\n\n\t\t\t\t\t\t\tcase 'drip':\n\t\t\t\t\t\t\t\t$http.post( '/api/update_drip_state' , {\n\t\t\t\t\t\t\t\t\t\"drip_id\": drip.id,\n\t\t\t\t\t\t\t\t\t\"state\": setting \n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t.success( function( response ){\n\t\t\t\t\t\t\t\t\tconsole.log( drips );\n\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'bucket':\n\t\t\t\t\t\t\t\tconsole.log( scope.drips );\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t};\n\t\t\t\t\tscope.deleteDrip = function deleteDrip ( drip , target ) {\t\t\t\t\t\t\n\t\t\t\t\t\tconsole.log( drip , target );\n\t\t\t\t\t};\t\t\t\t\n\n\t\t\t\t\tscope.settingDropdown = function settingDropdown( name ){\n\t\t\t\t\t\tvar profile = profileService.setProfile() // actual profile\n\t\t\t\t\t\tif( scope.profileData.id != profile.id ){\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tswitch( name ){\n\n\t\t\t\t\t\t\t\tcase 'who I am':\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase 'what I do':\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase 'what I am proud of':\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\n\t\t\t\t\tscope.$on( \"profile-data\" , \n\t\t\t\t\t\tfunction ( evt , profile ) {\n\t\t\t\t\t\t\tscope.profileData = JSON.parse( localStorage.userProfile );// visited profile \n\t\t\t\t\t\t\tconsole.log( \"profile data below\" )\n\t\t\t\t\t\t\tconsole.log( scope.profileData )\n\t\t\t\t\t\t\tscope.getAllBucket( );\n\t\t\t\t\t\t} );\t\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );","drip8\n\t.directive( \"dripDashboard\" , [\n\t\t\"$http\",\n\t\t'$rootScope',\n\t\tfunction directive ( $http , $rootScope ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"A\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"link\": function onLink ( scope , element , attributeSet ) {\n\t\t\t\t\tscope.drips = [ ];\n\t\t\t\t\tscope.lastId = \"dont stop\";\n\t\t\t\t\t$http.get( \"/api/drip_length\" )\n\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\tvar taskArray = [ ];\n\t\t\t\t\t\tfor ( var index = response.count  ; index >= ( response.count - 3 ) ; index -- ) {\n\t\t\t\t\t\t\ttaskArray.push( index );\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar asyncTasks = createAsyncTask( taskArray );\n\t\t\t\t\t\tasync\n\t\t\t\t\t\t\t.parallel( asyncTasks , function ( err , taskResponse ) {\n\t\t\t\t\t\t\t\tfor( var index = 0 ; index < taskResponse.length ; index++ ){\n\t\t\t\t\t\t\t\t\tif( taskResponse[ index ].drip == null || taskResponse[ index ].drip.state != 'public' ){\n\t\t\t\t\t\t\t\t\t\ttaskResponse.splice( index , 1 );\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tconsole.log( taskResponse[ index ].drip );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tscope.drips = taskResponse;\n\t\t\t\t\t\t\t\tconsole.log( taskResponse );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t} );\n\t\t\t\t\tscope.passProfile = function passProfile( profile ){\n\t\t\t\t\t\tlocalStorage.setItem(\"userProfile\", JSON.stringify( profile ) );\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tvar createAsyncTask = function createAsyncTask ( taskArray ) {\n\t\t\t\t\t\tvar tasks = [ ];\n\t\t\t\t\t\ttaskArray.forEach( function ( e ) {\n\t\t\t\t\t\t\tconsole.log( e )\n\t\t\t\t\t\t\ttasks.push( function ( callback ) {\n\t\t\t\t\t\t\t\t$http.post( \"/api/drip_each\" , { \"drip_id\": e } )\n\t\t\t\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\t\t\t\tcallback( null , response );\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} );\n\t\t\t\t\t\treturn tasks;\n\t\t\t\t\t};\n\t\t\t\t\tscope.seeBucket = function seeBucket( drip ){\n\t\t\t\t\t\tconsole.log( \"see Bucket\" );\n\t\t\t\t\t\t$rootScope.$broadcast( 'see-bucket' , drip );\n\t\t\t\t\t};\n\n\t\t\t\t\tscope.loadMore = function loadMore() {\n\t\t\t\t\t    var last = scope.drips[scope.drips.length - 1];\n\t\t\t\t\t    if( last != null ){\n\t\t\t\t\t    \tvar lastId = last.drip.id;\n\t\t\t\t\t\t    var idLoad = lastId - 1;\n\t\t\t\t\t\t    if( lastId >= 0 && scope.lastId != 'stop' ){\n\t\t\t\t\t\t    \tconsole.log( scope.lastId );\n\t\t\t\t\t\t    \t$http.post( \"/api/drip_each\" , { \"drip_id\": idLoad } )\n\t\t\t\t\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\t\t\t\t\t//callback( null , response );\n\t\t\t\t\t\t\t\t\t\tconsole.log( response );\n\t\t\t\t\t\t\t\t\t\tif( response.drip != null && response.drip.state == 'public' ){\n\t\t\t\t\t\t\t\t\t\t\tscope.drips.push( response );\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tif( lastId == 0 ){\n\t\t\t\t\t\t\t\t\t\t\tscope.lastId = 'stop';\n\t\t\t\t\t\t\t\t\t\t\tconsole.log( scope.lastId );\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t    }\n\t\t\t\t\t    }\n\t\t\t\t\t};\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );\n\n\n// async\n// \t.parallel( [\n// \t\tfunction ( callback ) {\n\n// \t\t},\n// \t\tfunction ( callback ) {\n\n// \t\t}, \n// \t] , function doSomething ( err , arr ) {\n\n// \t} );","drip8\n\t.directive( \"dripList\" , [\n\t\t\"$http\",\n\t\t\"Video\",\n\t\t\"$rootScope\",\n\t\tfunction directive ( $http , Video , $rootScope ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"A\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"link\": function onLink ( scope , element , attributeSet ) {\n\n\t\t\t\t\tvar ids = attributeSet.dripList.split( \"-\" );\n\t\t\t\t\tscope.drips = [ ];\t\n\n\t\t\t\t\tscope.dripListing = function dripListing ( ) {\n\t\t\t\t\t\t$http.post( \"/api/read_drips_by_bucket_and_user\" , {\n\t\t\t\t\t\t\t\"dripbucket_id\": ids[0],\n\t\t\t\t\t\t\t\"user_id\": ids[1]\n\t\t\t\t\t\t} )\n\t\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\t\tscope.drips = response.drips;\n\t\t\t\t\t\t} );\n\t\t\t\t\t};\n\n\t\t\t\t\tscope.linkUri = function linkUri ( link , service ) {\n\t\t\t\t\t\tvar video_id = link.split( 'v=' )[1];\n\t\t\t\t\t\tvar ampersandPosition = video_id.indexOf( '&' );\n\t\t\t\t\t\tif ( ampersandPosition != -1 ) {\n\t\t\t\t\t\t  video_id = video_id.substring( 0 , ampersandPosition );\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( service == \"thumb\" ) {\n\t\t\t\t\t\t\treturn Video.thumbnail( video_id );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn Video.videoSource( video_id );\n\t\t\t\t\t\t}\t\n\t\t\t\t\t};\n\n\t\t\t\t\tscope.showVideo = function showVideo ( link , id ) {\n\t\t\t\t\t\t$( \"#videoLink\" ).modal( \"show\" );\n\t\t\t\t\t\t$rootScope.$broadcast( \"video-source\" , link , id );\n\t\t\t\t\t};\n\n\t\t\t\t\tscope.dripListing( );\n\n\t\t\t\t\tscope.$on( \"drips-reload\" , \n\t\t\t\t\t\tfunction ( ) {\n\t\t\t\t\t\t\tscope.dripListing( );\n\t\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );","drip8\n\t.directive( \"dripModalBucket\" , [\n\t\t\"$http\",\n\t\t\"$rootScope\",\n\t\t'Video',\n\t\t'profileService',\n\t\tfunction directive ( $http , $rootScope , Video , profileService ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"A\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"link\": function onLink ( scope , element , atrributeSet ) {\n\t\t\t\t\tconsole.log( \"drip-modal-bucket\" );\n\t\t\t\t\t$rootScope.$on( 'see-bucket' , function( evt , data ){\n\t\t\t\t\t\tscope.directDrip = Video.videoSource( data.drip.link.split( \"v=\" )[1] );\n\t\t\t\t\t\tscope.dripBucketDetails = data;\n\t\t\t\t\t\tscope.comments = scope.dripBucketDetails.drip.comments;\n\t\t\t\t\t\tfor( var index = 0 ; index <= data.drip.dripbucket.drips.length-1 ; index++ ){\n\t\t\t\t\t\t\tvar video_id = scope.dripBucketDetails.drip.dripbucket.drips[ index ].link.split( \"v=\" )[1];\n\t\t\t\t\t\t\tconsole.log( video_id );\n\t\t\t\t\t\t\tscope.dripBucketDetails.drip.dripbucket.drips[ index ].thumb = Video.thumbnail( video_id );\n\t\t\t\t\t\t\tconsole.log( scope.dripBucketDetails.drip.dripbucket.drips[ index ].thumb );\n\t\t\t\t\t\t\tconsole.log( scope.dripBucketDetails.drip.dripbucket.drips[ index ].link );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconsole.log( scope.dripBucketDetails );\n\t\t\t\t\t\tscope.drip = scope.dripBucketDetails.drip;\n\t\t\t\t\t} );\n\n\n\t\t\t\t\tscope.changeVideo = function changeVideo( data ){\n\t\t\t\t\t\tscope.$broadcast( 'change-video' , data )\n\t\t\t\t\t};\n\n\t\t\t\t\tscope.$on( 'change-video' , function( evt , data ){\n\t\t\t\t\t\tscope.directDrip = Video.videoSource( data.link.split( \"v=\" )[1] );\n\t\t\t\t\t\tscope.comments = data.comments;\n\t\t\t\t\t\tscope.drip = data;\n\t\t\t\t\t\tconsole.log( data );\n\t\t\t\t\t} );\n\n\t\t\t\t\tscope.passProfile = function passProfile( profile ){\n\t\t\t\t\t\tlocalStorage.setItem(\"userProfile\", JSON.stringify( profile ) );\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tscope.react = function react( comment ){\n\t\t\t\t\t\tvar user = profileService.setProfile();\n\t\t\t\t\t\tvar fbId = user.profile_picture.split( \"/\" )[3];\n\t\t\t\t\t\tconsole.log( scope.dripBucketDetails );\n\t\t\t\t\t\tconsole.log( user.profile_picture.split( \"/\" ) )\n\t\t\t\t\t\t\n\t\t\t\t\t\t$http.post( \"/api/create_comment\" , {\n\t\t\t\t\t\t\t\t\"comment\":{\n\t\t\t\t\t\t\t\t\t\"user_id\"\t\t: user.id ,\n\t\t\t\t\t\t\t\t\t\"drip_id\"\t\t: scope.drip.id ,\n\t\t\t\t\t\t\t\t\t\"dripbucket_id\"\t: \"\" ,\n\t\t\t\t\t\t\t\t\t\"facebook_id\"\t: fbId ,\n\t\t\t\t\t\t\t\t\t\"body\"\t\t\t: comment\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\t\t\t\tvar comment = response.comment;\n\t\t\t\t\t\t\t\t\tcomment.user = user;\n\t\t\t\t\t\t\t\t\tscope.comments.push( comment );\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\tscope.dripComment = \"\";\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );","drip8\n\t.directive( \"drip\" , [\n\t\t\"$http\",\n\t\t\"$rootScope\",\n\t\tfunction directive ( $http , $rootScope ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"A\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"link\": function onLink ( scope , element , atrributeSet ) {\n\t\t\t\t\tscope.dripDetails = { \n\t\t\t\t\t\t\"state\": \"public\"\n\t\t\t\t\t};\n\n\t\t\t\t\tscope.profileData = { };\n\n\t\t\t\t\tscope.addDrip = function addDrip ( ) {\t\t\t\t\t\t\n\t\t\t\t\t\t$( \"#addADrip\" ).modal( \"hide\" );\n\t\t\t\t\t\tscope.dripDetails.user_id = scope.profileData.id;\n\n\t\t\t\t\t\t$http.post( \"/api/add_drip\" , {\n\t\t\t\t\t\t\t\"drip\": scope.dripDetails\n\t\t\t\t\t\t} )\n\t\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\t\t$rootScope.$broadcast( \"drips-reload\" );\n\t\t\t\t\t\t\tscope.dripDetails = { \n\t\t\t\t\t\t\t\t\"state\": \"public\"\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t} );\t\t\t\t\t\t\n\t\t\t\t\t};\n\n\t\t\t\t\tscope.$on( \"drip-new\" , \n\t\t\t\t\t\tfunction ( evt , bucketId ) {\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tscope.dripDetails.dripbucket_id = bucketId;\t\t\t\t\t\t\t\n\t\t\t\t\t\t} );\n\n\t\t\t\t\tscope.$on( \"profile-data\" , \n\t\t\t\t\t\tfunction ( evt , profile ) {\n\t\t\t\t\t\t\tscope.profileData = profile;\n\t\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );","drip8\n\t.directive( \"feature\" , [\n\t\t\"$http\",\n\t\tfunction directive ( $http ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"A\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"link\": function onLink ( scope , element , attributeSet ) {\t\t\t\t\t\n\n\t\t\t\t\tvar ids = attributeSet.feature.split( \"-\" );\n\n\t\t\t\t\telement.bind( \"click\" , \n\t\t\t\t\t\tfunction ( ) {\n\t\t\t\t\t\t\t$http.post( \"/api/new_featured\" , {\n\t\t\t\t\t\t\t\t\"user_id\": ids[0],\n\t\t\t\t\t\t\t\t\"drip_id\": ids[1]\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\t\t\twindow.location.reload( );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );","drip8\n\t.service( 'profileService' , [\n\t\tfunction(){\n\t\t\tvar profile = {};\n\t\t\treturn{\n\t\t\t\tsetProfile: function setProfile( credentials ){\n\t\t\t\t\tif( credentials ){\n\t\t\t\t\t\tprofile = credentials;\n\t\t\t\t\t\t//console.log( profile );\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn profile;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] )","drip8\n\t.directive( \"profile\" , [\n\t\t\"$http\",\n\t\t\"Video\",\n\t\t\"$rootScope\",\n\t\t'profileService',\n\t\tfunction directive ( $http , Video , $rootScope , profileService ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"A\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"link\": function onLink ( scope , element , attributeSet ) {\n\t\t\t\t\t//console.log( \"profile\" );\n\t\t\t\t\tscope.profile = { };\t\t\t\t\t\n\n\t\t\t\t\tscope.getUserInfo = function getUserInfo ( ) {\n\t\t\t\t\t\t$http.get( \"/api/user\" )\n\t\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\t\tscope.profile = response.data;\n\t\t\t\t\t\t\tscope.trustUrl( );\n\t\t\t\t\t\t} );\n\t\t\t\t\t};\n\t\t\t\t\tscope.passProfile = function passProfile( profile ){\n\t\t\t\t\t\tlocalStorage.setItem(\"userProfile\", JSON.stringify( profile ) );\n\t\t\t\t\t};\n\t\t\t\t\tscope.trustUrl = function trustUrl ( ) {\n\t\t\t\t\t\tvar video_id = \"\";\n\t\t\t\t\t\t$http.post( \"/api/video_featured\" , {\n\t\t\t\t\t\t\t\"user_id\": scope.profile.id\n\t\t\t\t\t\t} )\n\t\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\t\tif ( response.link ) {\n\t\t\t\t\t\t\t\tvideo_id = response.link.split( 'v=' )[1];\n\t\t\t\t\t\t\t\tvar ampersandPosition = video_id.indexOf( '&' );\n\t\t\t\t\t\t\t\tif ( ampersandPosition != -1 ) {\n\t\t\t\t\t\t\t\t  video_id = video_id.substring( 0 , ampersandPosition );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tscope.profile.featured = response.link;\n\t\t\t\t\t\t\t$rootScope.$broadcast( \"profile-data\" , scope.profile );\n\t\t\t\t\t\t\tscope.profile.featuredVideo = Video.videoSource( video_id );\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t} );\n\t\t\t\t\t};\n\t\t\t\t\tscope.$watch( 'profile' , function( newValue , oldValue ){\n\t\t\t\t\t\tif( newValue != oldValue ){\n\t\t\t\t\t\t\tscope.profile.newValue;\n\t\t\t\t\t\t\t//console.log( \"Profile****\" , scope.profile );\n\t\t\t\t\t\t\tprofileService.setProfile( scope.profile );\n\t\t\t\t\t\t}\n\t\t\t\t\t} )\n\t\t\t\t\tscope.getUserInfo( );\t\n\t\t\t\t\tscope.profileData = JSON.parse( localStorage.userProfile );\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );","drip8\n\t.directive( \"to\" , [\n\t\tfunction directive ( ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"A\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"link\": function onLink ( scope , element , attributeSet ) {\n\n\t\t\t\t\telement.bind( \"click\" , \n\t\t\t\t\t\tfunction ( ) {\n\t\t\t\t\t\t\twindow.location = attributeSet.to;\n\t\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );","drip8\n\t.directive( \"uiTemplate\" , [\n\t\tfunction directive ( ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"E\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"templateUrl\": function onTemplateLoad ( element , attributeSet ) {\n\t\t\t\t\treturn \"/api/template?template=\" + attributeSet.ngTemplate;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );","drip8\n\t.directive( \"videoDashboard\" , [\n\t\t\"$http\",\n\t\t\"Video\",\t\t\n\t\tfunction directive ( $http , Video ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"A\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"link\": function onLink ( scope , element , attributeSet ) {\n\t\t\t\t\tscope.videoSrc = Video.videoSource( attributeSet.videoSource.split( \"v=\" )[1] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );","drip8\n\t.directive( \"videoLink\" , [\n\t\t'$http',\n\t\t'profileService',\n\t\tfunction  directive ( $http , profileService ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"A\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"link\": function onLink ( scope , element , attributeSet ) {\n\t\t\t\t\tscope.videoSource;\n\n\t\t\t\t\t$( \"#videoLink\" ).on( \"hidden.bs.modal\" , \n\t\t\t\t\t\tfunction ( ) {\n\t\t\t\t\t\t\tscope.$apply( function ( ) {\n\t\t\t\t\t\t\t\tscope.videoSource = \"\";\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} );\n\n\t\t\t\t\tscope.$on( \"video-source\" , \n\t\t\t\t\t\tfunction ( evt , src , id ) {\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tscope.videoSource = src;\n\t\t\t\t\t\t\t$http.post( \"/api/drip_each\" , { \"drip_id\": id } )\n\t\t\t\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\t\t\t\tconsole.log( response );\n\t\t\t\t\t\t\t\t\tscope.comments = response.drip.comments;\n\t\t\t\t\t\t\t\t\tscope.drip = response.drip;\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} );\n\t\t\t\t\tscope.react = function react( comment ){\n\t\t\t\t\t\tvar user = profileService.setProfile();\n\t\t\t\t\t\tvar fbId = user.profile_picture.split( \"/\" )[3];\n\t\t\t\t\t\tconsole.log( scope.dripBucketDetails );\n\t\t\t\t\t\tconsole.log( user.profile_picture.split( \"/\" ) )\n\t\t\t\t\t\t\n\t\t\t\t\t\t$http.post( \"/api/create_comment\" , {\n\t\t\t\t\t\t\t\t\"comment\":{\n\t\t\t\t\t\t\t\t\t\"user_id\"\t\t: user.id ,\n\t\t\t\t\t\t\t\t\t\"drip_id\"\t\t: scope.drip.id ,\n\t\t\t\t\t\t\t\t\t\"dripbucket_id\"\t: \"\" ,\n\t\t\t\t\t\t\t\t\t\"facebook_id\"\t: fbId ,\n\t\t\t\t\t\t\t\t\t\"body\"\t\t\t: comment\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\t\t\t\tvar comment = response.comment;\n\t\t\t\t\t\t\t\t\tcomment.user = user;\n\t\t\t\t\t\t\t\t\tscope.comments.push( comment );\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\tscope.dripComment = \"\";\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );","drip8\n\t.factory( \"Video\" , [\n\t\t\"$sce\",\n\t\tfunction factory ( $sce ) {\n\t\t\tthis.thumbnail = function thumbnail ( youtubeId ) {\n\t\t\t\treturn $sce.trustAsResourceUrl( \"http://img.youtube.com/vi/\" + youtubeId + \"/0.jpg\" );\n\t\t\t};\n\n\t\t\tthis.videoSource = function videoSource ( youtubeId ) {\n\t\t\t\treturn $sce.trustAsResourceUrl( \"http://www.youtube.com/embed/\" + youtubeId + \"?rel=0&nologo=1&showinfo=0&modestbranding=1&iv_load_policy=3\" );\n\t\t\t};\n\n\t\t\treturn this;\n\t\t}\n\t] );"],"sourceRoot":"/source/"}

