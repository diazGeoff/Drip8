{"version":3,"sources":["app.js","auth._.js","bucket._.js","dashboard._.js","drip-list._.js","drip-modal-bucket._.js","drip._.js","feature._.js","profile-service._.js","profile._.js","to._.js","ui-template._.js","video-dashboard._.js","video-link._.js","video._.js"],"names":["drip8","angular","module","directive","restrict","scope","link","element","attributeSet","login","window","location","$rootScope","$http","profileService","dripListService","elemenet","profileData","buckets","newDrip","id","bucketName","$broadcast","getDrip","post","user_id","dripbucket_id","success","response","console","log","description","desc","newBucket","bucket","$","modal","name","state","reload","getAllBucket","profile","setProfile","splice","rename","drip","target","createAsyncTask","taskArray","setting","tasks","forEach","e","push","callback","drip_id","drips","dripList","setDripList","list","asyncTasks","async","parallel","err","taskResponse","deleteDrip","settingDropdown","$on","evt","JSON","parse","localStorage","userProfile","lastId","get","index","count","length","passProfile","setItem","stringify","fbShare","FB","ui","method","href","caption","seeBucket","loadMore","last","idLoad","service","credentials","Video","ids","split","dripFilter","array","newDripArray","dripListing","linkUri","video_id","ampersandPosition","indexOf","substring","thumbnail","videoSource","showVideo","atrributeSet","data","directDrip","dripBucketDetails","comments","dripbucket","thumb","exit","changeVideo","react","comment","user","fbId","profile_picture","facebook_id","body","dripComment","dripDetails","addDrip","http","slice","replace","bucketId","dripState","feature","bind","compile","pre","profileName","undefined","getUserInfo","trustUrl","featured","featuredVideo","$watch","newValue","oldValue","to","templateUrl","ngTemplate","videoSrc","on","$apply","src","factory","$sce","this","youtubeId","trustAsResourceUrl"],"mappings":"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","file":"app.min.js","sourcesContent":["var drip8 = angular.module( \"Drip8\" , [ 'angular-flexslider' , 'infinite-scroll' ] );\n\n// window.fbAsyncInit = function ( ) {\n// \tFB.init( {\n// \t\t\"appId\"    \t : \"1490365664608851\",\n// \t    \"status\"     : true,\n// \t    \"xfbml\"      : true,\n// \t    \"version\"    : 'v2.1' // or v2.0, v2.1, v2.2, v2.3\n// \t} );\n// };","drip8\n\t.directive( \"auth\" , [\t\t\n\t\tfunction directive ( ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"A\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"link\": function onLink ( scope , element , attributeSet ) {\n\t\t\t\t\tscope.login = function login ( ) {\n\t\t\t\t\t\twindow.location = \"/auth/facebook\";\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );","drip8\n\t.directive( \"bucket\" , [\n\t\t\"$rootScope\",\n\t\t\"$http\",\n\t\t'profileService',\n\t\t'dripListService',\n\t\tfunction directive ( $rootScope , $http , profileService , dripListService ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"A\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"link\": function onLink ( scope , elemenet , attributeSet ) {\n\t\t\t\t\tscope.profileData = { };\n\n\t\t\t\t\tscope.buckets = [ ];\n\t\t\t\t\t//console.log( localStorage.userProfile );\n\t\t\t\t\tscope.newDrip = function newDrip ( id , bucketName ) {\n\t\t\t\t\t\t$rootScope.$broadcast( \"drip-new\" , id , bucketName );\n\t\t\t\t\t};\n\n\t\t\t\t\tscope.getDrip = function getDrip ( id ) {\n\t\t\t\t\t\t$http.post( \"/api/read_drips_by_bucket_and_user\" , {\n\t\t\t\t\t\t\t\"user_id\": scope.profileData.id,\n\t\t\t\t\t\t\t\"dripbucket_id\": id\n\t\t\t\t\t\t} )\n\t\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\t\tconsole.log( response );\n\t\t\t\t\t\t} );\n\t\t\t\t\t};\n\n\t\t\t\t\tscope.description= function description( desc ){\n\t\t\t\t\t\treturn desc != null;\n\t\t\t\t\t};\n\t\t\t\t\tscope.newBucket = function newBucket ( bucket ) {\n\t\t\t\t\t\t$( \"#createDripBoardBox\" ).modal( \"hide\" );\n\t\t\t\t\t\t$http.post( \"/api/add_bucket\" , {\n\t\t\t\t\t\t\t\"bucket\": {\n\t\t\t\t\t\t\t\t\"user_id\": scope.profileData.id,\n\t\t\t\t\t\t\t\t\"name\": bucket.name,\n\t\t\t\t\t\t\t\t\"state\": bucket.state\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} ).success( function ( response ) {\t\t\t\t\t\t\t\n\t\t\t\t\t\t\twindow.location.reload( );\n\t\t\t\t\t\t} );\n\t\t\t\t\t};\n\n\t\t\t\t\tscope.getAllBucket = function getAllBucket ( ) {\t\t\t\t\t\t\n\t\t\t\t\t\t$http.post( \"/api/read_all_bucket_by_user\" , {\n\t\t\t\t\t\t\t\"user_id\": scope.profileData.id\n\t\t\t\t\t\t} )\n\t\t\t\t\t\t.success( function ( response ) {\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tscope.buckets = response.buckets;\n\t\t\t\t\t\t\tvar profile = profileService.setProfile();\n\t\t\t\t\t\t\tif( scope.profileData.id == '1' || profile.id == '1' ){\n\t\t\t\t\t\t\t\tscope.buckets.splice( 0 , 3 );\n\t\t\t\t\t\t\t\tconsole.log( scope.buckets );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} );\n\t\t\t\t\t};\n\t\t\t\t\tscope.rename = function rename ( drip , target ) {\t\t\t\t\t\t\n\t\t\t\t\t\t//console.log( drip , target );\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tvar createAsyncTask = function createAsyncTask ( taskArray , setting ) {\n\t\t\t\t\t\tvar tasks = [ ];\n\n\t\t\t\t\t\ttaskArray.forEach( function ( e ) {\n\t\t\t\t\t\t\tconsole.log( e )\n\t\t\t\t\t\t\tif( setting == 'public' ){\n\t\t\t\t\t\t\t\tsetting = e.state\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tsetting = 'profile only'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttasks.push( function ( callback ) {\n\t\t\t\t\t\t\t\t$http.post( \"/api/update_drip_state\" , { \n\t\t\t\t\t\t\t\t\t\"drip_id\": e.id,\n\t\t\t\t\t\t\t\t\t\"state\": setting  \n\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\t\t\t\tcallback( null , response );\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} );\n\t\t\t\t\t\treturn tasks;\n\t\t\t\t\t};\n\n\t\t\t\t\tscope.setting = function setting ( drips , setting , target , id ) {\t\t\t\t\t\t\n\t\t\t\t\t\t//console.log( drips , setting , target );\n\n\t\t\t\t\t\tswitch( target ){\n\n\t\t\t\t\t\t\tcase 'drip':\n\t\t\t\t\t\t\t\t$http.post( '/api/update_drip_state' , {\n\t\t\t\t\t\t\t\t\t\"drip_id\": drips.id,\n\t\t\t\t\t\t\t\t\t\"state\": setting \n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t.success( function( response ){\n\t\t\t\t\t\t\t\t\tconsole.log( \"New\" , response );\n\t\t\t\t\t\t\t\t\tscope.$broadcast( \"drips-reload\" );\n\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'bucket':\n\t\t\t\t\t\t\t\tconsole.log( id );\n\t\t\t\t\t\t\t\tvar dripList = dripListService.setDripList();\n\t\t\t\t\t\t\t\tvar list = dripList[ id ];\n\n\t\t\t\t\t\t\t\tvar asyncTasks = createAsyncTask( list , setting );\n\t\t\t\t\t\t\t\tasync\n\t\t\t\t\t\t\t\t\t.parallel( asyncTasks , function ( err , taskResponse ) {\n\t\t\t\t\t\t\t\t\t\tconsole.log( taskResponse );\n\t\t\t\t\t\t\t\t\t\tscope.$broadcast( \"drips-reload\" );\n\t\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t};\n\t\t\t\t\tscope.deleteDrip = function deleteDrip ( drip , target ) {\t\t\t\t\t\t\n\t\t\t\t\t\tconsole.log( drip , target );\n\t\t\t\t\t};\t\t\t\t\n\n\t\t\t\t\tscope.settingDropdown = function settingDropdown( name ){\n\t\t\t\t\t\tvar profile = profileService.setProfile() // actual profile\n\t\t\t\t\t\tif( scope.profileData.id != profile.id ){\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tswitch( name ){\n\n\t\t\t\t\t\t\t\tcase 'who I am':\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase 'what I do':\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase 'what I am proud of':\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\n\t\t\t\t\tscope.$on( \"profile-data\" , \n\t\t\t\t\t\tfunction ( evt , profile ) {\n\t\t\t\t\t\t\tscope.profileData = JSON.parse( localStorage.userProfile );// visited profile \n\t\t\t\t\t\t\tconsole.log( \"profile data below\" )\n\t\t\t\t\t\t\tconsole.log( scope.profileData )\n\t\t\t\t\t\t\tscope.getAllBucket( );\n\t\t\t\t\t\t} );\t\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );","drip8\n\t.directive( \"dripDashboard\" , [\n\t\t\"$http\",\n\t\t'$rootScope',\n\t\tfunction directive ( $http , $rootScope ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"A\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"link\": function onLink ( scope , element , attributeSet ) {\n\t\t\t\t\tscope.drips = [ ];\n\t\t\t\t\tscope.lastId = \"dont stop\";\n\t\t\t\t\t$http.get( \"/api/drip_length\" )\n\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\tvar taskArray = [ ];\n\t\t\t\t\t\t\n\t\t\t\t\t\tfor ( var index = response.count  ; index >= ( response.count - 3 ) ; index -- ) {\n\t\t\t\t\t\t\ttaskArray.push( index );\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar asyncTasks = createAsyncTask( taskArray );\n\t\t\t\t\t\tasync\n\t\t\t\t\t\t\t.parallel( asyncTasks , function ( err , taskResponse ) {\n\t\t\t\t\t\t\t\tfor( var index = 0 ; index < taskResponse.length ; index++ ){\n\t\t\t\t\t\t\t\t\tif( taskResponse[ index ].drip == null || taskResponse[ index ].drip.state != 'public' || taskResponse[ index ].drip.state == 'deleted' ){\n\t\t\t\t\t\t\t\t\t\tconsole.log( \"***************************deleted\" , taskResponse[ index ].drip );\n\t\t\t\t\t\t\t\t\t\ttaskResponse.splice( index , 1 );\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tconsole.log( taskResponse[ index ].drip );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tscope.drips = taskResponse;\n\t\t\t\t\t\t\t\tconsole.log( taskResponse );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t} );\n\t\t\t\t\tscope.passProfile = function passProfile( profile ){\n\t\t\t\t\t\tlocalStorage.setItem(\"userProfile\", JSON.stringify( profile ) );\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tscope.fbShare = function fbShare( link ){\n\t\t\t\t\t\tFB.ui({\n\t\t\t\t\t\t  method: 'share',\n\t\t\t\t\t\t  href: link,\n\t\t\t\t\t\t  caption: \"www.drip8.com\",\n\t\t\t\t\t\t}, function(response){});\n\t\t\t\t\t\tconsole.log( link );\n\t\t\t\t\t};\n\t\t\t\t\tvar createAsyncTask = function createAsyncTask ( taskArray ) {\n\t\t\t\t\t\tvar tasks = [ ];\n\t\t\t\t\t\ttaskArray.forEach( function ( e ) {\n\t\t\t\t\t\t\tconsole.log( e )\n\t\t\t\t\t\t\ttasks.push( function ( callback ) {\n\t\t\t\t\t\t\t\t$http.post( \"/api/drip_each\" , { \"drip_id\": e } )\n\t\t\t\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\t\t\t\tcallback( null , response );\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} );\n\t\t\t\t\t\treturn tasks;\n\t\t\t\t\t};\n\t\t\t\t\tscope.seeBucket = function seeBucket( drip ){\n\t\t\t\t\t\tconsole.log( \"see Bucket\" );\n\t\t\t\t\t\t$rootScope.$broadcast( 'see-bucket' , drip );\n\t\t\t\t\t};\n\n\t\t\t\t\tscope.loadMore = function loadMore() {\n\t\t\t\t\t\tconsole.log( \" ***************  \" )\n\t\t\t\t\t\tconsole.log( scope.drips );\n\t\t\t\t\t\tconsole.log( scope.drips[scope.drips.length - 1] );\n\t\t\t\t\t    var last = scope.drips[scope.drips.length - 1];\n\t\t\t\t\t    if( last != null ){\n\t\t\t\t\t    \tvar lastId = last.drip.id;\n\t\t\t\t\t\t    var idLoad = lastId - 1;\n\t\t\t\t\t\t    if( lastId >= 0 && scope.lastId != 'stop' ){\n\t\t\t\t\t\t    \tconsole.log( scope.lastId );\n\t\t\t\t\t\t    \tconsole.log( lastId );\n\t\t\t\t\t\t    \t$http.post( \"/api/drip_each\" , { \"drip_id\": idLoad } )\n\t\t\t\t\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\t\t\t\t\t//callback( null , response );\n\t\t\t\t\t\t\t\t\t\tconsole.log( response );\n\t\t\t\t\t\t\t\t\t\tif( response.drip.state == 'deleted' ){\n\t\t\t\t\t\t\t\t\t\t\t$http.post( \"/api/drip_each\" , { \"drip_id\": response.drip.id-1 } )\n\t\t\t\t\t\t\t\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t//callback( null , response );\n\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log( response );\n\t\t\t\t\t\t\t\t\t\t\t\t\tif( response.drip != null && response.drip.state == 'public' ){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tscope.drips.push( response );\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log( \"pushed\" )\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tif( lastId == 0 ){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log( \"stop na\" )\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tscope.lastId = 'stop';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log( scope.lastId );\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tif( response.drip != null && response.drip.state == 'public' ){\n\t\t\t\t\t\t\t\t\t\t\tscope.drips.push( response );\n\t\t\t\t\t\t\t\t\t\t\tconsole.log( \"pushed\" )\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tif( lastId == 0 ){\n\t\t\t\t\t\t\t\t\t\t\tconsole.log( \"stop na\" )\n\t\t\t\t\t\t\t\t\t\t\tscope.lastId = 'stop';\n\t\t\t\t\t\t\t\t\t\t\tconsole.log( scope.lastId );\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t    }\n\t\t\t\t\t    }\n\t\t\t\t\t};\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );\n\n\n// async\n// \t.parallel( [\n// \t\tfunction ( callback ) {\n\n// \t\t},\n// \t\tfunction ( callback ) {\n\n// \t\t}, \n// \t] , function doSomething ( err , arr ) {\n\n// \t} );","drip8\n\t.service( \"dripListService\" , [\n\t\t\tfunction(){\n\t\t\t\tvar dripList = [];\n\n\t\t\t\treturn {\n\t\t\t\t\t// takes id of dripBucket and sets drips in\n\t\t\t\t\tsetDripList: function setDripList( id , credentials ){\n\t\t\t\t\t\tif( credentials ){\n\t\t\t\t\t\t\tdripList[ id ] = credentials;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\treturn dripList\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t] );\n\ndrip8\n\t.directive( \"dripList\" , [\n\t\t\"$http\",\n\t\t\"Video\",\n\t\t\"$rootScope\",\n\t\t'dripListService',\n\t\tfunction directive ( $http , Video , $rootScope , dripListService ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"A\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"link\": function onLink ( scope , element , attributeSet ) {\n\n\t\t\t\t\tvar ids = attributeSet.dripList.split( \"-\" );\n\t\t\t\t\tconsole.log( ids[ 2 ] );\n\t\t\t\t\tscope.drips = [ ];\n\n\t\t\t\t\tvar dripFilter = function dripFilter ( array ){\n\t\t\t\t\t\tvar newDripArray = [];\n\n\t\t\t\t\t\tarray.forEach( function( e ) {\n\t\t\t\t\t\t\tif( e.state != 'deleted' ){\n\t\t\t\t\t\t\t\tnewDripArray.push( e );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} );\n\t\t\t\t\t\treturn newDripArray;\n\t\t\t\t\t};\n\n\t\t\t\t\tscope.dripListing = function dripListing ( ) {\n\t\t\t\t\t\t$http.post( \"/api/read_drips_by_bucket_and_user\" , {\n\t\t\t\t\t\t\t\"dripbucket_id\": ids[0],\n\t\t\t\t\t\t\t\"user_id\": ids[1]\n\t\t\t\t\t\t} )\n\t\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\t\tscope.drips = response.drips;\n\t\t\t\t\t\t\tdripListService.setDripList( ids[ 2 ] , scope.drips );\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tscope.drips = dripFilter( scope.drips );\n\t\t\t\t\t\t\t$(\"#welcome\").modal(\"hide\");\n\t\t\t\t\t\t} );\n\t\t\t\t\t};\n\n\t\t\t\t\tscope.linkUri = function linkUri ( link , service ) {\n\t\t\t\t\t\tvar video_id = link.split( 'v=' )[1];\n\t\t\t\t\t\tvar ampersandPosition = video_id.indexOf( '&' );\n\t\t\t\t\t\tif ( ampersandPosition != -1 ) {\n\t\t\t\t\t\t  video_id = video_id.substring( 0 , ampersandPosition );\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( service == \"thumb\" ) {\n\t\t\t\t\t\t\treturn Video.thumbnail( video_id );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn Video.videoSource( video_id );\n\t\t\t\t\t\t}\t\n\t\t\t\t\t};\n\n\t\t\t\t\tscope.showVideo = function showVideo ( link , drip ) {\n\t\t\t\t\t\t$( \"#videoLink\" ).modal( \"show\" );\n\t\t\t\t\t\t$rootScope.$broadcast( \"video-source\" , link , drip );\n\t\t\t\t\t};\n\n\t\t\t\t\tscope.dripListing( );\n\n\t\t\t\t\tscope.$on( \"drips-reload\" , \n\t\t\t\t\t\tfunction ( ) {\n\t\t\t\t\t\t\tscope.dripListing( );\n\t\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );","drip8\n\t.directive( \"dripModalBucket\" , [\n\t\t\"$http\",\n\t\t\"$rootScope\",\n\t\t'Video',\n\t\t'profileService',\n\t\tfunction directive ( $http , $rootScope , Video , profileService ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"A\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"link\": function onLink ( scope , element , atrributeSet ) {\n\t\t\t\t\tconsole.log( \"drip-modal-bucket\" );\n\t\t\t\t\t$rootScope.$on( 'see-bucket' , function( evt , data ){\n\t\t\t\t\t\tconsole.log( data )\n\t\t\t\t\t\tscope.directDrip = Video.videoSource( data.drip.link.split( \"v=\" )[1] );\n\t\t\t\t\t\tscope.dripBucketDetails = data;\n\t\t\t\t\t\tscope.comments = scope.dripBucketDetails.drip.comments;\n\t\t\t\t\t\tfor( var index = 0 ; index <= data.drip.dripbucket.drips.length-1 ; index++ ){\n\t\t\t\t\t\t\tvar video_id = scope.dripBucketDetails.drip.dripbucket.drips[ index ].link.split( \"v=\" )[1];\n\t\t\t\t\t\t\tconsole.log( video_id );\n\t\t\t\t\t\t\tscope.dripBucketDetails.drip.dripbucket.drips[ index ].thumb = Video.thumbnail( video_id );\n\t\t\t\t\t\t\tconsole.log( scope.dripBucketDetails.drip.dripbucket.drips[ index ].thumb );\n\t\t\t\t\t\t\tconsole.log( scope.dripBucketDetails.drip.dripbucket.drips[ index ].link );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconsole.log( scope.dripBucketDetails );\n\t\t\t\t\t\tscope.drip = scope.dripBucketDetails.drip;\n\t\t\t\t\t} );\n\n\t\t\t\t\tscope.exit = function exit(){\n\t\t\t\t\t\t$(\"#myModal\").modal(\"hide\");\n\t\t\t\t\t};\n\n\t\t\t\t\tscope.fbShare = function fbShare( link ){\n\t\t\t\t\t\tFB.ui({\n\t\t\t\t\t\t  method: 'share',\n\t\t\t\t\t\t  href: link,\n\t\t\t\t\t\t  caption: \"www.drip8.com\",\n\t\t\t\t\t\t}, function(response){});\n\t\t\t\t\t\tconsole.log( link );\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tscope.changeVideo = function changeVideo( data ){\n\t\t\t\t\t\tscope.$broadcast( 'change-video' , data )\n\t\t\t\t\t};\n\n\t\t\t\t\tscope.$on( 'change-video' , function( evt , data ){\n\t\t\t\t\t\tscope.directDrip = Video.videoSource( data.link.split( \"v=\" )[1] );\n\t\t\t\t\t\tscope.comments = data.comments;\n\t\t\t\t\t\tscope.drip = data;\n\t\t\t\t\t\tconsole.log( data );\n\t\t\t\t\t} );\n\n\t\t\t\t\tscope.passProfile = function passProfile( profile ){\n\t\t\t\t\t\tlocalStorage.setItem(\"userProfile\", JSON.stringify( profile ) );\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tscope.react = function react( comment ){\n\t\t\t\t\t\tvar user = profileService.setProfile();\n\t\t\t\t\t\tvar fbId = user.profile_picture.split( \"/\" )[3];\n\t\t\t\t\t\tconsole.log( scope.dripBucketDetails );\n\t\t\t\t\t\tconsole.log( user.profile_picture.split( \"/\" ) )\n\t\t\t\t\t\t\n\t\t\t\t\t\t$http.post( \"/api/create_comment\" , {\n\t\t\t\t\t\t\t\t\"comment\":{\n\t\t\t\t\t\t\t\t\t\"user_id\"\t\t: user.id ,\n\t\t\t\t\t\t\t\t\t\"drip_id\"\t\t: scope.drip.id ,\n\t\t\t\t\t\t\t\t\t\"dripbucket_id\"\t: \"\" ,\n\t\t\t\t\t\t\t\t\t\"facebook_id\"\t: fbId ,\n\t\t\t\t\t\t\t\t\t\"body\"\t\t\t: comment\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\t\t\t\tvar comment = response.comment;\n\t\t\t\t\t\t\t\t\tcomment.user = user;\n\t\t\t\t\t\t\t\t\tscope.comments.push( comment );\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\tscope.dripComment = \"\";\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );","drip8\n\t.directive( \"drip\" , [\n\t\t\"$http\",\n\t\t\"$rootScope\",\n\t\tfunction directive ( $http , $rootScope ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"A\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"link\": function onLink ( scope , element , atrributeSet ) {\n\t\t\t\t\tscope.dripDetails = { \n\t\t\t\t\t\t\"state\": \"profile only\"\n\t\t\t\t\t};\n\n\t\t\t\t\tscope.profileData = { };\n\n\t\t\t\t\tscope.addDrip = function addDrip ( ) {\t\t\t\t\t\t\n\t\t\t\t\t\t$( \"#addADrip\" ).modal( \"hide\" );\n\t\t\t\t\t\tscope.dripDetails.user_id = scope.profileData.id;\n\t\t\t\t\t\tvar http = scope.dripDetails.link.slice( 0 , 5 );\n\t\t\t\t\t\tif( http == \"https\" ){\n\t\t\t\t\t\t\tvar link = scope.dripDetails.link.replace( 'https' , 'http' );\n\t\t\t\t\t\t\tscope.dripDetails.link = link;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\n\t\t\t\t\t\tconsole.log( scope.dripDetails.link.split( \":\" ) )\n\t\t\t\t\t\t$http.post( \"/api/add_drip\" , {\n\t\t\t\t\t\t\t\"drip\": scope.dripDetails\n\t\t\t\t\t\t} )\n\t\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\t\t$rootScope.$broadcast( \"drips-reload\" );\n\t\t\t\t\t\t\tscope.dripDetails = { \n\t\t\t\t\t\t\t\t\"state\": \"public\"\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tconsole.log( link );\t\t\t\n\t\t\t\t\t};\n\t\t\t\t\t/**\n\t\t\t\t\t\t * JavaScript function to match (and return) the video Id \n\t\t\t\t\t\t * of any valid Youtube Url, given as input string.\n\t\t\t\t\t\t * @author: Stephan Schmitz <eyecatchup@gmail.com>\n\t\t\t\t\t\t * @url: http://stackoverflow.com/a/10315969/624466\n\t\t\t\t\t\t ng-pattern\n\t\t\t\t\t\t /^(?:https?:\\/\\/)?(?:www\\.)?(?:youtu\\.be\\/|youtube\\.com\\/(?:embed\\/|v\\/|watch\\?v=|watch\\?.+&v=))((\\w|-){11})(?:\\S+)?$/;\n\t\t\t\t\t*/\n\n\t\t\t\t\tscope.$on( \"drip-new\" , \n\t\t\t\t\t\tfunction ( evt , bucketId , bucketName ) {\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tscope.dripDetails.dripbucket_id = bucketId;\n\t\t\t\t\t\t\tscope.bucketName = bucketName;\n\t\t\t\t\t\t\tscope.dripState = function dripState(){\n\t\t\t\t\t\t\t\tif( scope.bucketName == 'who I am' || scope.bucketName == 'what I do' || scope.bucketName == 'what I am proud of' ){\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\t\t\n\t\t\t\t\t\t} );\n\n\t\t\t\t\tscope.$on( \"profile-data\" , \n\t\t\t\t\t\tfunction ( evt , profile ) {\n\t\t\t\t\t\t\tscope.profileData = profile;\n\t\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );","drip8\n\t.directive( \"feature\" , [\n\t\t\"$http\",\n\t\tfunction directive ( $http ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"A\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"link\": function onLink ( scope , element , attributeSet ) {\t\t\t\t\t\n\n\t\t\t\t\tvar ids = attributeSet.feature.split( \"-\" );\n\n\t\t\t\t\telement.bind( \"click\" , \n\t\t\t\t\t\tfunction ( ) {\n\t\t\t\t\t\t\t$http.post( \"/api/new_featured\" , {\n\t\t\t\t\t\t\t\t\"user_id\": ids[0],\n\t\t\t\t\t\t\t\t\"drip_id\": ids[1]\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\t\t\twindow.location.reload( );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );","drip8\n\t.service( 'profileService' , [\n\t\tfunction(){\n\t\t\tvar profile = {};\n\t\t\treturn{\n\t\t\t\tsetProfile: function setProfile( credentials ){\n\t\t\t\t\tif( credentials ){\n\t\t\t\t\t\tprofile = credentials;\n\t\t\t\t\t\t//console.log( profile );\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn profile;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] )","drip8\n\t.directive( \"profile\" , [\n\t\t\"$http\",\n\t\t\"Video\",\n\t\t\"$rootScope\",\n\t\t'profileService',\n\t\tfunction directive ( $http , Video , $rootScope , profileService ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"A\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"compile\": function compile ( element , attributeSet ){\n\t\t\t\t\treturn{\n\n\t\t\t\t\t\tpre: function pre( scope , element , attributeSet ){\n\t\t\t\t\t\t\tscope.count = 0;\n\t\t\t\t\t\t\tscope.profileName = function profileName( name ){\n\t\t\t\t\t\t\t\tif( name != undefined ){\n\t\t\t\t\t\t\t\t\tscope.count += 1;\n\t\t\t\t\t\t\t\t\tif( scope.count == 1 ){\n\t\t\t\t\t\t\t\t\t\tvar name = name.split( \" \" );\n\t\t\t\t\t\t\t\t\t\tconsole.log( scope.count );\n\t\t\t\t\t\t\t\t\t\tconsole.log( name );\n\t\t\t\t\t\t\t\t\t\treturn name[ 0 ];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t},\n\n\t\t\t\t\t\tpost: function post( scope , element , attributeSet ){\n\t\t\t\t\t\t\t//console.log( \"profile\" );\n\t\t\t\t\t\t\tscope.profile = { };\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tscope.getUserInfo = function getUserInfo ( ) {\n\t\t\t\t\t\t\t\t$http.get( \"/api/user\" )\n\t\t\t\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\t\t\t\tscope.profile = response.data;\n\t\t\t\t\t\t\t\t\tscope.trustUrl( );\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tscope.passProfile = function passProfile( profile ){\n\t\t\t\t\t\t\t\tlocalStorage.setItem(\"userProfile\", JSON.stringify( profile ) );\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tscope.trustUrl = function trustUrl ( ) {\n\t\t\t\t\t\t\t\tvar video_id = \"\";\n\t\t\t\t\t\t\t\t$http.post( \"/api/video_featured\" , {\n\t\t\t\t\t\t\t\t\t\"user_id\": scope.profile.id\n\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\t\t\t\tif ( response.link ) {\n\t\t\t\t\t\t\t\t\t\tvideo_id = response.link.split( 'v=' )[1];\n\t\t\t\t\t\t\t\t\t\tvar ampersandPosition = video_id.indexOf( '&' );\n\t\t\t\t\t\t\t\t\t\tif ( ampersandPosition != -1 ) {\n\t\t\t\t\t\t\t\t\t\t  video_id = video_id.substring( 0 , ampersandPosition );\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tscope.profile.featured = response.link;\n\t\t\t\t\t\t\t\t\t$rootScope.$broadcast( \"profile-data\" , scope.profile );\n\t\t\t\t\t\t\t\t\tscope.profile.featuredVideo = Video.videoSource( video_id );\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tscope.$watch( 'profile' , function( newValue , oldValue ){\n\t\t\t\t\t\t\t\tif( newValue != oldValue ){\n\t\t\t\t\t\t\t\t\tscope.profile = newValue;\n\t\t\t\t\t\t\t\t\tconsole.log( \"Profile****\" , scope.profile );\n\t\t\t\t\t\t\t\t\tprofileService.setProfile( scope.profile );// own profile\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\tscope.getUserInfo( );\t\n\t\t\t\t\t\t\tscope.profileData = JSON.parse( localStorage.userProfile ); //visited profile\n\t\t\t\t\t\t\tconsole.log( scope.profileData );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );","drip8\n\t.directive( \"to\" , [\n\t\tfunction directive ( ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"A\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"link\": function onLink ( scope , element , attributeSet ) {\n\n\t\t\t\t\telement.bind( \"click\" , \n\t\t\t\t\t\tfunction ( ) {\n\t\t\t\t\t\t\twindow.location = attributeSet.to;\n\t\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );","drip8\n\t.directive( \"uiTemplate\" , [\n\t\tfunction directive ( ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"E\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"templateUrl\": function onTemplateLoad ( element , attributeSet ) {\n\t\t\t\t\treturn \"/api/template?template=\" + attributeSet.ngTemplate;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );","drip8\n\t.directive( \"videoDashboard\" , [\n\t\t\"$http\",\n\t\t\"Video\",\t\t\n\t\tfunction directive ( $http , Video ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"A\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"link\": function onLink ( scope , element , attributeSet ) {\n\t\t\t\t\tscope.videoSrc = Video.videoSource( attributeSet.videoSource.split( \"v=\" )[1] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );","drip8\n\t.directive( \"videoLink\" , [\n\t\t'$http',\n\t\t'profileService',\n\t\t'Video',\n\t\tfunction  directive ( $http , profileService , Video ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"A\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"link\": function onLink ( scope , element , attributeSet ) {\n\t\t\t\t\tscope.videoSource;\n\n\t\t\t\t\t$( \"#videoLink\" ).on( \"hidden.bs.modal\" , \n\t\t\t\t\t\tfunction ( ) {\n\t\t\t\t\t\t\tscope.$apply( function ( ) {\n\t\t\t\t\t\t\t\tscope.videoSource = \"\";\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} );\n\t\t\t\t\tscope.exit = function exit(){\n\t\t\t\t\t\t$(\"#videoLink\").modal(\"hide\");\n\t\t\t\t\t};\n\t\t\t\t\tscope.$on( \"video-source\" , \n\t\t\t\t\t\tfunction ( evt , src , drip ) {\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tscope.videoSource = src;\n\t\t\t\t\t\t\tconsole.log( drip );\n\t\t\t\t\t\t\tscope.directDrip = Video.videoSource( drip.link.split( \"v=\" )[1] );\n\t\t\t\t\t\t\t$http.post( \"/api/drip_each\" , { \"drip_id\": drip.id } )\n\t\t\t\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\t\t\t\tconsole.log( response );\n\t\t\t\t\t\t\t\t\tscope.comments = response.drip.comments;\n\t\t\t\t\t\t\t\t\tscope.drip = response.drip;\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} );\n\t\t\t\t\tscope.fbShare = function fbShare( link ){\n\t\t\t\t\t\tFB.ui({\n\t\t\t\t\t\t  method: 'share',\n\t\t\t\t\t\t  href: link,\n\t\t\t\t\t\t  caption: \"www.drip8.com\",\n\t\t\t\t\t\t}, function(response){});\n\t\t\t\t\t\tconsole.log( link );\n\t\t\t\t\t};\n\t\t\t\t\tscope.react = function react( comment ){\n\t\t\t\t\t\tvar user = profileService.setProfile();\n\t\t\t\t\t\tvar fbId = user.profile_picture.split( \"/\" )[3];\n\t\t\t\t\t\tconsole.log( scope.dripBucketDetails );\n\t\t\t\t\t\tconsole.log( user.profile_picture.split( \"/\" ) )\n\t\t\t\t\t\t\n\t\t\t\t\t\t$http.post( \"/api/create_comment\" , {\n\t\t\t\t\t\t\t\t\"comment\":{\n\t\t\t\t\t\t\t\t\t\"user_id\"\t\t: user.id ,\n\t\t\t\t\t\t\t\t\t\"drip_id\"\t\t: scope.drip.id ,\n\t\t\t\t\t\t\t\t\t\"dripbucket_id\"\t: \"\" ,\n\t\t\t\t\t\t\t\t\t\"facebook_id\"\t: fbId ,\n\t\t\t\t\t\t\t\t\t\"body\"\t\t\t: comment\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\t\t\t\tvar comment = response.comment;\n\t\t\t\t\t\t\t\t\tcomment.user = user;\n\t\t\t\t\t\t\t\t\tscope.comments.push( comment );\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\tscope.dripComment = \"\";\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );","drip8\n\t.factory( \"Video\" , [\n\t\t\"$sce\",\n\t\tfunction factory ( $sce ) {\n\t\t\tthis.thumbnail = function thumbnail ( youtubeId ) {\n\t\t\t\treturn $sce.trustAsResourceUrl( \"http://img.youtube.com/vi/\" + youtubeId + \"/0.jpg\" );\n\t\t\t};\n\n\t\t\tthis.videoSource = function videoSource ( youtubeId ) {\n\t\t\t\treturn $sce.trustAsResourceUrl( \"http://www.youtube.com/embed/\" + youtubeId + \"?rel=0&nologo=1&showinfo=0&modestbranding=1&iv_load_policy=3\" );\n\t\t\t};\n\n\t\t\treturn this;\n\t\t}\n\t] );"],"sourceRoot":"/source/"}