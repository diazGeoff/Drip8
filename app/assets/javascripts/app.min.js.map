{"version":3,"sources":["app.js","auth._.js","bucket._.js","dashboard._.js","drip-list._.js","drip-modal-bucket._.js","drip._.js","feature._.js","profile-service._.js","profile._.js","to._.js","ui-template._.js","video-dashboard._.js","video-link._.js","video._.js"],"names":["drip8","angular","module","directive","restrict","scope","link","element","attributeSet","login","window","location","$rootScope","$http","profileService","dripListService","elemenet","profileData","buckets","newDrip","id","bucketName","$broadcast","getDrip","post","user_id","dripbucket_id","success","response","description","desc","newBucket","bucket","$","modal","name","state","reload","getAllBucket","profile","setProfile","splice","rename","drip","target","createAsyncTask","taskArray","setting","tasks","forEach","e","push","callback","drip_id","drips","dripList","setDripList","list","asyncTasks","async","parallel","err","taskResponse","deleteDrip","settingDropdown","$on","evt","JSON","parse","localStorage","userProfile","console","log","$parent","lastId","get","index","count","length","passProfile","setItem","stringify","fbShare","FB","ui","method","href","caption","seeBucket","loadMore","last","idLoad","$watch","newValue","oldValue","service","credentials","Video","ids","split","dripFilter","array","newDripArray","dripListing","linkUri","video_id","ampersandPosition","indexOf","substring","thumbnail","videoSource","showVideo","atrributeSet","data","directDrip","dripBucketDetails","comments","dripbucket","thumb","exit","changeVideo","react","comment","user","fbId","profile_picture","facebook_id","body","dripComment","dripDetails","addDrip","http","slice","replace","dripState","bucketId","feature","bind","compile","pre","profileName","undefined","logout","now","Date","setMonth","getMonth","cookievalue","escape","document","myform","customer","value","cookie","toUTCString","getUserInfo","trustUrl","featured","featuredVideo","to","templateUrl","ngTemplate","videoSrc","on","$apply","src","factory","$sce","this","youtubeId","trustAsResourceUrl"],"mappings":"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","file":"app.min.js","sourcesContent":["var drip8 = angular.module( \"Drip8\" , [ 'angular-flexslider' , 'infinite-scroll' ] );\n\n","drip8\n\t.directive( \"auth\" , [\t\t\n\t\tfunction directive ( ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"A\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"link\": function onLink ( scope , element , attributeSet ) {\n\t\t\t\t\tscope.login = function login ( ) {\n\t\t\t\t\t\twindow.location = \"/auth/facebook\";\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );","drip8\n\t.directive( \"bucket\" , [\n\t\t\"$rootScope\",\n\t\t\"$http\",\n\t\t'profileService',\n\t\t'dripListService',\n\t\tfunction directive ( $rootScope , $http , profileService , dripListService ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"A\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"link\": function onLink ( scope , elemenet , attributeSet ) {\n\t\t\t\t\tscope.profileData = { };\n\n\t\t\t\t\tscope.buckets = [ ];\n\t\t\t\t\t////console.log( localStorage.userProfile );\n\t\t\t\t\tscope.newDrip = function newDrip ( id , bucketName ) {\n\t\t\t\t\t\t$rootScope.$broadcast( \"drip-new\" , id , bucketName );\n\t\t\t\t\t};\n\n\t\t\t\t\tscope.getDrip = function getDrip ( id ) {\n\t\t\t\t\t\t$http.post( \"/api/read_drips_by_bucket_and_user\" , {\n\t\t\t\t\t\t\t\"user_id\": scope.profileData.id,\n\t\t\t\t\t\t\t\"dripbucket_id\": id\n\t\t\t\t\t\t} )\n\t\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\t\t//console.log( response );\n\t\t\t\t\t\t} );\n\t\t\t\t\t};\n\n\t\t\t\t\tscope.description= function description( desc ){\n\t\t\t\t\t\treturn desc != null;\n\t\t\t\t\t};\n\t\t\t\t\tscope.newBucket = function newBucket ( bucket ) {\n\t\t\t\t\t\t$( \"#createDripBoardBox\" ).modal( \"hide\" );\n\t\t\t\t\t\t$http.post( \"/api/add_bucket\" , {\n\t\t\t\t\t\t\t\"bucket\": {\n\t\t\t\t\t\t\t\t\"user_id\": scope.profileData.id,\n\t\t\t\t\t\t\t\t\"name\": bucket.name,\n\t\t\t\t\t\t\t\t\"state\": bucket.state\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} ).success( function ( response ) {\t\t\t\t\t\t\t\n\t\t\t\t\t\t\twindow.location.reload( );\n\t\t\t\t\t\t} );\n\t\t\t\t\t};\n\n\t\t\t\t\tscope.getAllBucket = function getAllBucket ( ) {\t\t\t\t\t\t\n\t\t\t\t\t\t$http.post( \"/api/read_all_bucket_by_user\" , {\n\t\t\t\t\t\t\t\"user_id\": scope.profileData.id\n\t\t\t\t\t\t} )\n\t\t\t\t\t\t.success( function ( response ) {\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tscope.buckets = response.buckets;\n\t\t\t\t\t\t\tvar profile = profileService.setProfile();\n\t\t\t\t\t\t\tif( profile.id == '1' ){\n\n\t\t\t\t\t\t\t\tif( scope.profileData.id == '1' ){\n\t\t\t\t\t\t\t\t\tscope.buckets.splice( 0 , 3 );\n\t\t\t\t\t\t\t\t\t//console.log( scope.buckets );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} );\n\t\t\t\t\t};\n\t\t\t\t\tscope.rename = function rename ( drip , target ) {\t\t\t\t\t\t\n\t\t\t\t\t\t////console.log( drip , target );\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tvar createAsyncTask = function createAsyncTask ( taskArray , setting ) {\n\t\t\t\t\t\tvar tasks = [ ];\n\n\t\t\t\t\t\ttaskArray.forEach( function ( e ) {\n\t\t\t\t\t\t\t//console.log( e )\n\t\t\t\t\t\t\tif( setting == 'public' ){\n\t\t\t\t\t\t\t\tsetting = e.state\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tsetting = 'profile only'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttasks.push( function ( callback ) {\n\t\t\t\t\t\t\t\t$http.post( \"/api/update_drip_state\" , { \n\t\t\t\t\t\t\t\t\t\"drip_id\": e.id,\n\t\t\t\t\t\t\t\t\t\"state\": setting  \n\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\t\t\t\tcallback( null , response );\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} );\n\t\t\t\t\t\treturn tasks;\n\t\t\t\t\t};\n\n\t\t\t\t\tscope.setting = function setting ( drips , setting , target , id ) {\t\t\t\t\t\t\n\t\t\t\t\t\t////console.log( drips , setting , target );\n\n\t\t\t\t\t\tswitch( target ){\n\n\t\t\t\t\t\t\tcase 'drip':\n\t\t\t\t\t\t\t\t$http.post( '/api/update_drip_state' , {\n\t\t\t\t\t\t\t\t\t\"drip_id\": drips.id,\n\t\t\t\t\t\t\t\t\t\"state\": setting \n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t.success( function( response ){\n\t\t\t\t\t\t\t\t\t//console.log( \"New\" , response );\n\t\t\t\t\t\t\t\t\tscope.$broadcast( \"drips-reload\" );\n\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'bucket':\n\t\t\t\t\t\t\t\t//console.log( id );\n\t\t\t\t\t\t\t\tvar dripList = dripListService.setDripList();\n\t\t\t\t\t\t\t\tvar list = dripList[ id ];\n\t\t\t\t\t\t\t\t//console.log( list )\n\n\t\t\t\t\t\t\t\tvar asyncTasks = createAsyncTask( list , setting );\n\t\t\t\t\t\t\t\tasync\n\t\t\t\t\t\t\t\t\t.parallel( asyncTasks , function ( err , taskResponse ) {\n\t\t\t\t\t\t\t\t\t\t//console.log( taskResponse );\n\t\t\t\t\t\t\t\t\t\tscope.$broadcast( \"drips-reload\" );\n\t\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t};\n\t\t\t\t\tscope.deleteDrip = function deleteDrip ( drip , target ) {\t\t\t\t\t\t\n\t\t\t\t\t\t//console.log( drip , target );\n\t\t\t\t\t};\t\t\t\t\n\n\t\t\t\t\tscope.settingDropdown = function settingDropdown( name ){\n\t\t\t\t\t\tvar profile = profileService.setProfile() // actual profile\n\t\t\t\t\t\tif( scope.profileData.id != profile.id ){\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tswitch( name ){\n\n\t\t\t\t\t\t\t\tcase 'who I am':\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase 'what I do':\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase 'what I am proud of':\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\n\t\t\t\t\tscope.$on( \"profile-data\" , \n\t\t\t\t\t\tfunction ( evt , profile ) {\n\t\t\t\t\t\t\tscope.profileData = JSON.parse( localStorage.userProfile );// visited profile \n\t\t\t\t\t\t\t//console.log( \"profile data below\" )\n\t\t\t\t\t\t\t//console.log( scope.profileData )\n\t\t\t\t\t\t\tscope.getAllBucket( );\n\t\t\t\t\t\t} );\t\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );\n\ndrip8\n\t.directive( \"ifBucket\" , [\n\t\t\"$http\",\n\t\tfunction directive ( $http ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"A\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"link\": function onLink ( scope , element , attributeSet ) {\t\t\t\t\t\n\n\t\t\t\t\tconsole.log( scope.$parent.bucketName );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );","drip8\n\t.directive( \"dripDashboard\" , [\n\t\t\"$http\",\n\t\t'$rootScope',\n\t\tfunction directive ( $http , $rootScope ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"A\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"link\": function onLink ( scope , element , attributeSet ) {\n\t\t\t\t\tscope.drips = [ ];\n\t\t\t\t\tscope.lastId = \"dont stop\";\n\t\t\t\t\t$http.get( \"/api/drip_length\" )\n\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\tvar taskArray = [ ];\n\t\t\t\t\t\t\n\t\t\t\t\t\tfor ( var index = response.count  ; index >= ( response.count - 3 ) ; index -- ) {\n\t\t\t\t\t\t\ttaskArray.push( index );\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar asyncTasks = createAsyncTask( taskArray );\n\t\t\t\t\t\tasync\n\t\t\t\t\t\t\t.parallel( asyncTasks , function ( err , taskResponse ) {\n\t\t\t\t\t\t\t\tfor( var index = 0 ; index < taskResponse.length ; index++ ){\n\t\t\t\t\t\t\t\t\tif( taskResponse[ index ].drip == null || taskResponse[ index ].drip.state != 'public' || taskResponse[ index ].drip.state == 'deleted' ){\n\t\t\t\t\t\t\t\t\t\t//console.log( \"***************************deleted\" , taskResponse[ index ].drip );\n\t\t\t\t\t\t\t\t\t\ttaskResponse.splice( index , 1 );\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tscope.drips = taskResponse;\n\t\t\t\t\t\t\t\t//console.log( taskResponse );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t} );\n\t\t\t\t\tscope.passProfile = function passProfile( profile ){\n\t\t\t\t\t\tlocalStorage.setItem(\"userProfile\", JSON.stringify( profile ) );\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tscope.fbShare = function fbShare( link ){\n\t\t\t\t\t\tFB.ui({\n\t\t\t\t\t\t  method: 'share',\n\t\t\t\t\t\t  href: link,\n\t\t\t\t\t\t  caption: \"www.drip8.com\",\n\t\t\t\t\t\t}, function(response){});\n\t\t\t\t\t\t//console.log( link );\n\t\t\t\t\t};\n\t\t\t\t\tvar createAsyncTask = function createAsyncTask ( taskArray ) {\n\t\t\t\t\t\tvar tasks = [ ];\n\t\t\t\t\t\ttaskArray.forEach( function ( e ) {\n\t\t\t\t\t\t\t//console.log( e )\n\t\t\t\t\t\t\ttasks.push( function ( callback ) {\n\t\t\t\t\t\t\t\t$http.post( \"/api/drip_each\" , { \"drip_id\": e } )\n\t\t\t\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\t\t\t\tcallback( null , response );\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} );\n\t\t\t\t\t\treturn tasks;\n\t\t\t\t\t};\n\t\t\t\t\tscope.seeBucket = function seeBucket( drip ){\n\t\t\t\t\t\t//console.log( \"see Bucket\" );\n\t\t\t\t\t\t$rootScope.$broadcast( 'see-bucket' , drip );\n\t\t\t\t\t};\n\n\t\t\t\t\tscope.loadMore = function loadMore() {\n\t\t\t\t\t\t//console.log( \" ***************  \" )\n\t\t\t\t\t\t//console.log( scope.drips );\n\t\t\t\t\t\t//console.log( scope.drips[scope.drips.length - 1] );\n\t\t\t\t\t    var last = scope.drips[scope.drips.length - 1];\n\t\t\t\t\t    if( last != null ){\n\t\t\t\t\t    \tvar lastId = last.drip.id;\n\t\t\t\t\t\t    var idLoad = lastId - 1;\n\t\t\t\t\t\t    if( lastId >= 0 && scope.lastId != 'stop' ){\n\t\t\t\t\t\t    \t//console.log( scope.lastId );\n\t\t\t\t\t\t    \t//console.log( lastId );\n\t\t\t\t\t\t    \t$http.post( \"/api/drip_each\" , { \"drip_id\": idLoad } )\n\t\t\t\t\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\t\t\t\t\t//callback( null , response );\n\t\t\t\t\t\t\t\t\t\t//console.log( response );\n\t\t\t\t\t\t\t\t\t\tif( response.drip.state == 'deleted' ){\n\t\t\t\t\t\t\t\t\t\t\t$http.post( \"/api/drip_each\" , { \"drip_id\": response.drip.id-1 } )\n\t\t\t\t\t\t\t\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t//callback( null , response );\n\t\t\t\t\t\t\t\t\t\t\t\t\t//console.log( response );\n\t\t\t\t\t\t\t\t\t\t\t\t\tif( response.drip != null && response.drip.state == 'public' ){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tscope.drips.push( response );\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t//console.log( \"pushed\" )\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tif( lastId == 0 ){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t//console.log( \"stop na\" )\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tscope.lastId = 'stop';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t//console.log( scope.lastId );\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tif( response.drip != null && response.drip.state == 'public' ){\n\t\t\t\t\t\t\t\t\t\t\tscope.drips.push( response );\n\t\t\t\t\t\t\t\t\t\t\t//console.log( \"pushed\" )\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tif( lastId == 0 ){\n\t\t\t\t\t\t\t\t\t\t\t//console.log( \"stop na\" )\n\t\t\t\t\t\t\t\t\t\t\tscope.lastId = 'stop';\n\t\t\t\t\t\t\t\t\t\t\t//console.log( scope.lastId );\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t    }\n\t\t\t\t\t    }\n\t\t\t\t\t};\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );\n\ndrip8\n\t.directive( \"messageHide\" , [\n\t\tfunction directive ( $http ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"A\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"link\": function onLink ( scope , element , attributeSet ) {\n\t\t\t\t\t\n\t\t\t\t\tscope.$watch( 'hideMe',\n\t\t\t\t\t\tfunction hideMessage( newValue , oldValue ){\n\t\t\t\t\t\t\tif( newValue != oldValue ){\n\t\t\t\t\t\t\t\tconsole.log( \"clicked\" )\n\t\t\t\t\t\t\t\tif( newValue == true ){\n\t\t\t\t\t\t\t\t\tlocalStorage.setItem( \"hideMessage\", true );\n\n\t\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\t\tlocalStorage.setItem( \"hideMessage\", false );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );\n// async\n// \t.parallel( [\n// \t\tfunction ( callback ) {\n\n// \t\t},\n// \t\tfunction ( callback ) {\n\n// \t\t}, \n// \t] , function doSomething ( err , arr ) {\n\n// \t} );","drip8\n\t.service( \"dripListService\" , [\n\t\t\tfunction(){\n\t\t\t\tvar dripList = [];\n\n\t\t\t\treturn {\n\t\t\t\t\t// takes id of dripBucket and sets drips in\n\t\t\t\t\tsetDripList: function setDripList( id , credentials ){\n\t\t\t\t\t\tif( credentials ){\n\t\t\t\t\t\t\tdripList[ id ] = credentials;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\treturn dripList\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t] );\n\ndrip8\n\t.directive( \"dripList\" , [\n\t\t\"$http\",\n\t\t\"Video\",\n\t\t\"$rootScope\",\n\t\t'dripListService',\n\t\tfunction directive ( $http , Video , $rootScope , dripListService ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"A\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"link\": function onLink ( scope , element , attributeSet ) {\n\n\t\t\t\t\tvar ids = attributeSet.dripList.split( \"-\" );\n\t\t\t\t\t//console.log( ids[ 2 ] );\n\t\t\t\t\tscope.drips = [ ];\n\n\t\t\t\t\tvar dripFilter = function dripFilter ( array ){\n\t\t\t\t\t\tvar newDripArray = [];\n\n\t\t\t\t\t\tarray.forEach( function( e ) {\n\t\t\t\t\t\t\tif( e.state != 'deleted' ){\n\t\t\t\t\t\t\t\tnewDripArray.push( e );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} );\n\t\t\t\t\t\treturn newDripArray;\n\t\t\t\t\t};\n\n\t\t\t\t\tscope.dripListing = function dripListing ( ) {\n\t\t\t\t\t\t$http.post( \"/api/read_drips_by_bucket_and_user\" , {\n\t\t\t\t\t\t\t\"dripbucket_id\": ids[0],\n\t\t\t\t\t\t\t\"user_id\": ids[1]\n\t\t\t\t\t\t} )\n\t\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\t\tscope.drips = response.drips;\n\t\t\t\t\t\t\tdripListService.setDripList( ids[ 2 ] , scope.drips );\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tscope.drips = dripFilter( scope.drips );\n\t\t\t\t\t\t\t$(\"#welcome\").modal(\"hide\");\n\t\t\t\t\t\t} );\n\t\t\t\t\t};\n\n\t\t\t\t\tscope.linkUri = function linkUri ( link , service ) {\n\t\t\t\t\t\tvar video_id = link.split( 'v=' )[1];\n\t\t\t\t\t\tvar ampersandPosition = video_id.indexOf( '&' );\n\t\t\t\t\t\tif ( ampersandPosition != -1 ) {\n\t\t\t\t\t\t  video_id = video_id.substring( 0 , ampersandPosition );\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( service == \"thumb\" ) {\n\t\t\t\t\t\t\treturn Video.thumbnail( video_id );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn Video.videoSource( video_id );\n\t\t\t\t\t\t}\t\n\t\t\t\t\t};\n\n\t\t\t\t\tscope.showVideo = function showVideo ( link , drip ) {\n\t\t\t\t\t\t$( \"#videoLink\" ).modal( \"show\" );\n\t\t\t\t\t\t$rootScope.$broadcast( \"video-source\" , link , drip );\n\t\t\t\t\t};\n\n\t\t\t\t\tscope.dripListing( );\n\n\t\t\t\t\tscope.$on( \"drips-reload\" , \n\t\t\t\t\t\tfunction ( ) {\n\t\t\t\t\t\t\tscope.dripListing( );\n\t\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );","drip8\n\t.directive( \"dripModalBucket\" , [\n\t\t\"$http\",\n\t\t\"$rootScope\",\n\t\t'Video',\n\t\t'profileService',\n\t\tfunction directive ( $http , $rootScope , Video , profileService ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"A\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"link\": function onLink ( scope , element , atrributeSet ) {\n\t\t\t\t\t//console.log( \"drip-modal-bucket\" );\n\t\t\t\t\t$rootScope.$on( 'see-bucket' , function( evt , data ){\n\t\t\t\t\t\t//console.log( data )\n\t\t\t\t\t\tscope.directDrip = Video.videoSource( data.drip.link.split( \"v=\" )[1] );\n\t\t\t\t\t\tscope.dripBucketDetails = data;\n\t\t\t\t\t\tscope.comments = scope.dripBucketDetails.drip.comments;\n\t\t\t\t\t\tfor( var index = 0 ; index <= data.drip.dripbucket.drips.length-1 ; index++ ){\n\t\t\t\t\t\t\tvar video_id = scope.dripBucketDetails.drip.dripbucket.drips[ index ].link.split( \"v=\" )[1];\n\t\t\t\t\t\t\t//console.log( video_id );\n\t\t\t\t\t\t\tscope.dripBucketDetails.drip.dripbucket.drips[ index ].thumb = Video.thumbnail( video_id );\n\t\t\t\t\t\t\t//console.log( scope.dripBucketDetails.drip.dripbucket.drips[ index ].thumb );\n\t\t\t\t\t\t\t//console.log( scope.dripBucketDetails.drip.dripbucket.drips[ index ].link );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//console.log( scope.dripBucketDetails );\n\t\t\t\t\t\tscope.drip = scope.dripBucketDetails.drip;\n\t\t\t\t\t} );\n\n\t\t\t\t\tscope.exit = function exit(){\n\t\t\t\t\t\t$(\"#myModal\").modal(\"hide\");\n\t\t\t\t\t};\n\n\t\t\t\t\tscope.fbShare = function fbShare( link ){\n\t\t\t\t\t\tFB.ui({\n\t\t\t\t\t\t  method: 'share',\n\t\t\t\t\t\t  href: link,\n\t\t\t\t\t\t  caption: \"www.drip8.com\",\n\t\t\t\t\t\t}, function(response){});\n\t\t\t\t\t\t//console.log( link );\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tscope.changeVideo = function changeVideo( data ){\n\t\t\t\t\t\tscope.$broadcast( 'change-video' , data )\n\t\t\t\t\t};\n\n\t\t\t\t\tscope.$on( 'change-video' , function( evt , data ){\n\t\t\t\t\t\tscope.directDrip = Video.videoSource( data.link.split( \"v=\" )[1] );\n\t\t\t\t\t\tscope.comments = data.comments;\n\t\t\t\t\t\tscope.drip = data;\n\t\t\t\t\t\t//console.log( data );\n\t\t\t\t\t} );\n\n\t\t\t\t\tscope.passProfile = function passProfile( profile ){\n\t\t\t\t\t\tlocalStorage.setItem(\"userProfile\", JSON.stringify( profile ) );\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tscope.react = function react( comment ){\n\t\t\t\t\t\tvar user = profileService.setProfile();\n\t\t\t\t\t\tvar fbId = user.profile_picture.split( \"/\" )[3];\n\t\t\t\t\t\t//console.log( scope.dripBucketDetails );\n\t\t\t\t\t\t//console.log( user.profile_picture.split( \"/\" ) )\n\t\t\t\t\t\t\n\t\t\t\t\t\t$http.post( \"/api/create_comment\" , {\n\t\t\t\t\t\t\t\t\"comment\":{\n\t\t\t\t\t\t\t\t\t\"user_id\"\t\t: user.id ,\n\t\t\t\t\t\t\t\t\t\"drip_id\"\t\t: scope.drip.id ,\n\t\t\t\t\t\t\t\t\t\"dripbucket_id\"\t: \"\" ,\n\t\t\t\t\t\t\t\t\t\"facebook_id\"\t: fbId ,\n\t\t\t\t\t\t\t\t\t\"body\"\t\t\t: comment\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\t\t\t\tvar comment = response.comment;\n\t\t\t\t\t\t\t\t\tcomment.user = user;\n\t\t\t\t\t\t\t\t\tscope.comments.push( comment );\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\tscope.dripComment = \"\";\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );","drip8\n\t.directive( \"drip\" , [\n\t\t\"$http\",\n\t\t\"$rootScope\",\n\t\tfunction directive ( $http , $rootScope ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"A\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"link\": function onLink ( scope , element , atrributeSet ) {\n\t\t\t\t\tscope.dripDetails = { \n\t\t\t\t\t\t\"state\": \"profile only\"\n\t\t\t\t\t};\n\n\t\t\t\t\tscope.profileData = { };\n\n\t\t\t\t\tscope.addDrip = function addDrip ( ) {\t\t\t\t\t\t\n\t\t\t\t\t\t$( \"#addADrip\" ).modal( \"hide\" );\n\t\t\t\t\t\tscope.dripDetails.user_id = scope.profileData.id;\n\t\t\t\t\t\tvar http = scope.dripDetails.link.slice( 0 , 5 );\n\t\t\t\t\t\tif( http == \"https\" ){\n\t\t\t\t\t\t\tvar link = scope.dripDetails.link.replace( 'https' , 'http' );\n\t\t\t\t\t\t\tscope.dripDetails.link = link;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\n\t\t\t\t\t\t//console.log( scope.dripDetails.link.split( \":\" ) )\n\t\t\t\t\t\t$http.post( \"/api/add_drip\" , {\n\t\t\t\t\t\t\t\"drip\": scope.dripDetails\n\t\t\t\t\t\t} )\n\t\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\t\t$rootScope.$broadcast( \"drips-reload\" );\n\t\t\t\t\t\t\tscope.dripDetails = { \n\t\t\t\t\t\t\t\t\"state\": \"public\"\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t} );\n\t\t\t\t\t\t//console.log( link );\t\t\t\n\t\t\t\t\t};\n\t\t\t\t\t/**\n\t\t\t\t\t\t * JavaScript function to match (and return) the video Id \n\t\t\t\t\t\t * of any valid Youtube Url, given as input string.\n\t\t\t\t\t\t * @author: Stephan Schmitz <eyecatchup@gmail.com>\n\t\t\t\t\t\t * @url: http://stackoverflow.com/a/10315969/624466\n\t\t\t\t\t\t ng-pattern\n\t\t\t\t\t\t /^(?:https?:\\/\\/)?(?:www\\.)?(?:youtu\\.be\\/|youtube\\.com\\/(?:embed\\/|v\\/|watch\\?v=|watch\\?.+&v=))((\\w|-){11})(?:\\S+)?$/;\n\t\t\t\t\t*/\n\t\t\t\t\tscope.dripState = function dripState(){\n\t\t\t\t\t\tif( scope.bucketName == 'who I am' || scope.bucketName == 'what I do' || scope.bucketName == 'what I am proud of' ){\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tscope.$on( \"drip-new\" , \n\t\t\t\t\t\tfunction ( evt , bucketId , bucketName ) {\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tscope.dripDetails.dripbucket_id = bucketId;\n\t\t\t\t\t\t\tscope.bucketName = bucketName;\n\t\t\t\t\t\t\tscope.dripState = function dripState(){\n\t\t\t\t\t\t\t\tif( scope.bucketName == 'who I am' || scope.bucketName == 'what I do' || scope.bucketName == 'what I am proud of' ){\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\t\t\n\t\t\t\t\t\t} );\n\n\t\t\t\t\tscope.$on( \"profile-data\" , \n\t\t\t\t\t\tfunction ( evt , profile ) {\n\t\t\t\t\t\t\tscope.profileData = profile;\n\t\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );","drip8\n\t.directive( \"feature\" , [\n\t\t\"$http\",\n\t\tfunction directive ( $http ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"A\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"link\": function onLink ( scope , element , attributeSet ) {\t\t\t\t\t\n\n\t\t\t\t\tvar ids = attributeSet.feature.split( \"-\" );\n\n\t\t\t\t\telement.bind( \"click\" , \n\t\t\t\t\t\tfunction ( ) {\n\t\t\t\t\t\t\t$http.post( \"/api/new_featured\" , {\n\t\t\t\t\t\t\t\t\"user_id\": ids[0],\n\t\t\t\t\t\t\t\t\"drip_id\": ids[1]\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\t\t\twindow.location.reload( );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );","drip8\n\t.service( 'profileService' , [\n\t\tfunction(){\n\t\t\tvar profile = {};\n\t\t\treturn{\n\t\t\t\tsetProfile: function setProfile( credentials ){\n\t\t\t\t\tif( credentials ){\n\t\t\t\t\t\tprofile = credentials;\n\t\t\t\t\t\t//console.log( profile );\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn profile;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] )","drip8\n\t.directive( \"profile\" , [\n\t\t\"$http\",\n\t\t\"Video\",\n\t\t\"$rootScope\",\n\t\t'profileService',\n\t\tfunction directive ( $http , Video , $rootScope , profileService ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"A\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"compile\": function compile ( element , attributeSet ){\n\t\t\t\t\treturn{\n\n\t\t\t\t\t\tpre: function pre( scope , element , attributeSet ){\n\t\t\t\t\t\t\tscope.count = 0;\n\t\t\t\t\t\t\tscope.profileName = function profileName( name ){\n\t\t\t\t\t\t\t\tif( name != undefined ){\n\t\t\t\t\t\t\t\t\tscope.count += 1;\n\t\t\t\t\t\t\t\t\tif( scope.count == 1 ){\n\t\t\t\t\t\t\t\t\t\tvar name = name.split( \" \" );\n\t\t\t\t\t\t\t\t\t\t//console.log( scope.count );\n\t\t\t\t\t\t\t\t\t\t//console.log( name );\n\t\t\t\t\t\t\t\t\t\treturn name[ 0 ];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t},\n\n\t\t\t\t\t\tpost: function post( scope , element , attributeSet ){\n\t\t\t\t\t\t\t////console.log( \"profile\" );\n\t\t\t\t\t\t\tscope.logout = function logout(){\n\t\t\t\t\t\t\t\tvar now = new Date();\n\t\t\t\t                now.setMonth( now.getMonth() - 1 );\n\t\t\t\t                cookievalue = escape(document.myform.customer.value) + \";\"\n\t\t\t\t               \n\t\t\t\t                document.cookie=\"_Drip8_session=\" + cookievalue;\n\t\t\t\t                document.cookie = \"expires=\" + now.toUTCString() + \";\"\n\t\t\t\t\t\t\t\t//console.log( \"logout\" );\n\t\t\t\t\t\t\t\t// FB.logout(function(response) {\n\t\t\t\t\t\t\t\t//   // user is now logged out\n\t\t\t\t\t\t\t\t//   //console.log( response );\n\t\t\t\t\t\t\t\t// });\n\t\t\t\t\t\t\t\t//console.log( document.cookie )\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t$( \"#welcomeHere\" ).modal( \"show\" );\n\t\t\t\t\t\t\tscope.profile = { };\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tscope.getUserInfo = function getUserInfo ( ) {\n\t\t\t\t\t\t\t\t$http.get( \"/api/user\" )\n\t\t\t\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\t\t\t\tscope.profile = response.data;\n\t\t\t\t\t\t\t\t\tscope.trustUrl( );\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tscope.passProfile = function passProfile( profile ){\n\t\t\t\t\t\t\t\tlocalStorage.setItem(\"userProfile\", JSON.stringify( profile ) );\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tscope.trustUrl = function trustUrl ( ) {\n\t\t\t\t\t\t\t\tvar video_id = \"\";\n\t\t\t\t\t\t\t\t$http.post( \"/api/video_featured\" , {\n\t\t\t\t\t\t\t\t\t\"user_id\": scope.profile.id\n\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\t\t\t\tif ( response.link ) {\n\t\t\t\t\t\t\t\t\t\tvideo_id = response.link.split( 'v=' )[1];\n\t\t\t\t\t\t\t\t\t\tvar ampersandPosition = video_id.indexOf( '&' );\n\t\t\t\t\t\t\t\t\t\tif ( ampersandPosition != -1 ) {\n\t\t\t\t\t\t\t\t\t\t  video_id = video_id.substring( 0 , ampersandPosition );\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tscope.profile.featured = response.link;\n\t\t\t\t\t\t\t\t\t$rootScope.$broadcast( \"profile-data\" , scope.profile );\n\t\t\t\t\t\t\t\t\tscope.profile.featuredVideo = Video.videoSource( video_id );\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tscope.$watch( 'profile' , function( newValue , oldValue ){\n\t\t\t\t\t\t\t\tif( newValue != oldValue ){\n\t\t\t\t\t\t\t\t\tscope.profile = newValue;\n\t\t\t\t\t\t\t\t\t//console.log( \"Profile****\" , scope.profile );\n\t\t\t\t\t\t\t\t\tprofileService.setProfile( scope.profile );// own profile\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\tscope.getUserInfo( );\t\n\t\t\t\t\t\t\tscope.profileData = JSON.parse( localStorage.userProfile ); //visited profile\n\t\t\t\t\t\t\t//console.log( scope.profileData );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );","drip8\n\t.directive( \"to\" , [\n\t\tfunction directive ( ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"A\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"link\": function onLink ( scope , element , attributeSet ) {\n\n\t\t\t\t\telement.bind( \"click\" , \n\t\t\t\t\t\tfunction ( ) {\n\t\t\t\t\t\t\twindow.location = attributeSet.to;\n\t\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );","drip8\n\t.directive( \"uiTemplate\" , [\n\t\tfunction directive ( ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"E\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"templateUrl\": function onTemplateLoad ( element , attributeSet ) {\n\t\t\t\t\treturn \"/api/template?template=\" + attributeSet.ngTemplate;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );","drip8\n\t.directive( \"videoDashboard\" , [\n\t\t\"$http\",\n\t\t\"Video\",\t\t\n\t\tfunction directive ( $http , Video ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"A\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"link\": function onLink ( scope , element , attributeSet ) {\n\t\t\t\t\tscope.videoSrc = Video.videoSource( attributeSet.videoSource.split( \"v=\" )[1] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );","drip8\n\t.directive( \"videoLink\" , [\n\t\t'$http',\n\t\t'profileService',\n\t\t'Video',\n\t\tfunction  directive ( $http , profileService , Video ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"A\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"link\": function onLink ( scope , element , attributeSet ) {\n\t\t\t\t\tscope.videoSource;\n\n\t\t\t\t\t$( \"#videoLink\" ).on( \"hidden.bs.modal\" , \n\t\t\t\t\t\tfunction ( ) {\n\t\t\t\t\t\t\tscope.$apply( function ( ) {\n\t\t\t\t\t\t\t\tscope.videoSource = \"\";\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} );\n\t\t\t\t\tscope.exit = function exit(){\n\t\t\t\t\t\t$(\"#videoLink\").modal(\"hide\");\n\t\t\t\t\t\t//console.log( 'exit' )\n\t\t\t\t\t};\n\t\t\t\t\tscope.$on( \"video-source\" , \n\t\t\t\t\t\tfunction ( evt , src , drip ) {\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tscope.videoSource = src;\n\t\t\t\t\t\t\t//console.log( drip );\n\t\t\t\t\t\t\tscope.directDrip = Video.videoSource( drip.link.split( \"v=\" )[1] );\n\t\t\t\t\t\t\t$http.post( \"/api/drip_each\" , { \"drip_id\": drip.id } )\n\t\t\t\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\t\t\t\t//console.log( response );\n\t\t\t\t\t\t\t\t\tscope.comments = response.drip.comments;\n\t\t\t\t\t\t\t\t\tscope.drip = response.drip;\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} );\n\t\t\t\t\tscope.fbShare = function fbShare( link ){\n\t\t\t\t\t\tFB.ui({\n\t\t\t\t\t\t  method: 'share',\n\t\t\t\t\t\t  href: link,\n\t\t\t\t\t\t  caption: \"www.drip8.com\",\n\t\t\t\t\t\t}, function(response){});\n\t\t\t\t\t\t//console.log( link );\n\t\t\t\t\t};\n\t\t\t\t\tscope.react = function react( comment ){\n\t\t\t\t\t\tvar user = profileService.setProfile();\n\t\t\t\t\t\tvar fbId = user.profile_picture.split( \"/\" )[3];\n\t\t\t\t\t\t//console.log( scope.dripBucketDetails );\n\t\t\t\t\t\t//console.log( user.profile_picture.split( \"/\" ) )\n\t\t\t\t\t\t\n\t\t\t\t\t\t$http.post( \"/api/create_comment\" , {\n\t\t\t\t\t\t\t\t\"comment\":{\n\t\t\t\t\t\t\t\t\t\"user_id\"\t\t: user.id ,\n\t\t\t\t\t\t\t\t\t\"drip_id\"\t\t: scope.drip.id ,\n\t\t\t\t\t\t\t\t\t\"dripbucket_id\"\t: \"\" ,\n\t\t\t\t\t\t\t\t\t\"facebook_id\"\t: fbId ,\n\t\t\t\t\t\t\t\t\t\"body\"\t\t\t: comment\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\t\t\t\tvar comment = response.comment;\n\t\t\t\t\t\t\t\t\tcomment.user = user;\n\t\t\t\t\t\t\t\t\tscope.comments.push( comment );\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\tscope.dripComment = \"\";\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );","drip8\n\t.factory( \"Video\" , [\n\t\t\"$sce\",\n\t\tfunction factory ( $sce ) {\n\t\t\tthis.thumbnail = function thumbnail ( youtubeId ) {\n\t\t\t\treturn $sce.trustAsResourceUrl( \"http://img.youtube.com/vi/\" + youtubeId + \"/0.jpg\" );\n\t\t\t};\n\n\t\t\tthis.videoSource = function videoSource ( youtubeId ) {\n\t\t\t\treturn $sce.trustAsResourceUrl( \"http://www.youtube.com/embed/\" + youtubeId + \"?rel=0&nologo=1&showinfo=0&modestbranding=1&iv_load_policy=3\" );\n\t\t\t};\n\n\t\t\treturn this;\n\t\t}\n\t] );"],"sourceRoot":"/source/"}