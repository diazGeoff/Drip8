{"version":3,"sources":["app.js","auth._.js","bucket._.js","dashboard._.js","drip-list._.js","drip-modal-bucket._.js","drip._.js","feature._.js","profile-service._.js","profile._.js","to._.js","ui-template._.js","video-dashboard._.js","video-link._.js","video._.js"],"names":["drip8","angular","module","window","fbAsyncInit","FB","init","appId","status","xfbml","version","directive","restrict","scope","link","element","attributeSet","login","location","$rootScope","$http","elemenet","profileData","buckets","console","log","localStorage","userProfile","newDrip","id","$broadcast","getDrip","post","user_id","dripbucket_id","success","response","newBucket","bucket","$","modal","name","state","reload","getAllBucket","$on","evt","profile","JSON","parse","drips","lastId","get","taskArray","index","count","push","asyncTasks","createAsyncTask","async","parallel","err","taskResponse","passProfile","setItem","stringify","tasks","forEach","e","callback","drip_id","seeBucket","drip","loadMore","last","length","idLoad","Video","ids","dripList","split","dripListing","linkUri","service","video_id","ampersandPosition","indexOf","substring","thumbnail","videoSource","showVideo","profileService","atrributeSet","data","directDrip","dripBucketDetails","comments","dripbucket","thumb","changeVideo","react","comment","user","setProfile","fbId","profile_picture","facebook_id","body","dripComment","dripDetails","addDrip","bucketId","feature","bind","credentials","getUserInfo","trustUrl","featured","featuredVideo","$watch","newValue","oldValue","to","templateUrl","ngTemplate","videoSrc","on","$apply","src","factory","$sce","this","youtubeId","trustAsResourceUrl"],"mappings":"AAAA,GAAAA,OAAAC,QAAAC,OAAA,SAAA,qBAAA,mBAEAC,QAAAC,YAAA,WACAC,GAAAC,MACAC,MAAA,kBACAC,QAAA,EACAC,OAAA,EACAC,QAAA,UCPAV,MACAW,UAAA,QACA,WACA,OACAC,SAAA,IACAC,OAAA,EACAC,KAAA,SAAAD,EAAAE,EAAAC,GACAH,EAAAI,MAAA,WACAd,OAAAe,SAAA,uBCRAlB,MACAW,UAAA,UACA,aACA,QACA,SAAAQ,EAAAC,GACA,OACAR,SAAA,IACAC,OAAA,EACAC,KAAA,SAAAD,EAAAQ,EAAAL,GACAH,EAAAS,eAEAT,EAAAU,WACAC,QAAAC,IAAAC,aAAAC,aACAd,EAAAe,QAAA,SAAAC,GACAV,EAAAW,WAAA,WAAAD,IAGAhB,EAAAkB,QAAA,SAAAF,GACAT,EAAAY,KAAA,sCACAC,QAAApB,EAAAS,YAAAO,GACAK,cAAAL,IAEAM,QAAA,SAAAC,GACAZ,QAAAC,IAAAW,MAIAvB,EAAAwB,UAAA,SAAAC,GACAC,EAAA,uBAAAC,MAAA,QACApB,EAAAY,KAAA,mBACAM,QACAL,QAAApB,EAAAS,YAAAO,GACAY,KAAAH,EAAAG,KACAC,MAAAJ,EAAAI,SAEAP,QAAA,SAAAC,GACAjC,OAAAe,SAAAyB,YAIA9B,EAAA+B,aAAA,WACAxB,EAAAY,KAAA,gCACAC,QAAApB,EAAAS,YAAAO,KAEAM,QAAA,SAAAC,GACAvB,EAAAU,QAAAa,EAAAb,WAIAV,EAAAgC,IAAA,eACA,SAAAC,EAAAC,GACAlC,EAAAS,YAAA0B,KAAAC,MAAAvB,aAAAC,aACAH,QAAAC,IAAA,sBACAD,QAAAC,IAAAZ,EAAAS,aACAT,EAAA+B,sBCtDA5C,MACAW,UAAA,iBACA,QACA,aACA,SAAAS,EAAAD,GACA,OACAP,SAAA,IACAC,OAAA,EACAC,KAAA,SAAAD,EAAAE,EAAAC,GACAH,EAAAqC,SACArC,EAAAsC,OAAA,YACA/B,EAAAgC,IAAA,oBACAjB,QAAA,SAAAC,GAEA,IAAA,GADAiB,MACAC,EAAAlB,EAAAmB,MAAAD,GAAAlB,EAAAmB,MAAA,EAAAD,IACAD,EAAAG,KAAAF,EAEA,IAAAG,GAAAC,EAAAL,EACAM,OACAC,SAAAH,EAAA,SAAAI,EAAAC,GACAjD,EAAAqC,MAAAY,EACAtC,QAAAC,IAAAZ,EAAAqC,WAGArC,EAAAkD,YAAA,SAAAhB,GACArB,aAAAsC,QAAA,cAAAhB,KAAAiB,UAAAlB,IAGA,IAAAW,GAAA,SAAAL,GACA,GAAAa,KAUA,OATAb,GAAAc,QAAA,SAAAC,GACA5C,QAAAC,IAAA2C,GACAF,EAAAV,KAAA,SAAAa,GACAjD,EAAAY,KAAA,kBAAAsC,QAAAF,IACAjC,QAAA,SAAAC,GACAiC,EAAA,KAAAjC,SAIA8B,EAEArD,GAAA0D,UAAA,SAAAC,GACAhD,QAAAC,IAAA,cACAN,EAAAW,WAAA,aAAA0C,IAGA3D,EAAA4D,SAAA,WACA,GAAAC,GAAA7D,EAAAqC,MAAArC,EAAAqC,MAAAyB,OAAA,GACAxB,EAAAuB,EAAAF,KAAA3C,GACA+C,EAAAzB,EAAA,CACAA,IAAA,GAAA,QAAAtC,EAAAsC,QACA/B,EAAAY,KAAA,kBAAAsC,QAAAM,IACAzC,QAAA,SAAAC,GAEAZ,QAAAC,IAAAW,GACA,MAAAA,EAAAoC,MACA3D,EAAAqC,MAAAM,KAAApB,GAEA,GAAAe,IACAtC,EAAAsC,OAAA,gBC3DAnD,MACAW,UAAA,YACA,QACA,QACA,aACA,SAAAS,EAAAyD,EAAA1D,GACA,OACAP,SAAA,IACAC,OAAA,EACAC,KAAA,SAAAD,EAAAE,EAAAC,GAEA,GAAA8D,GAAA9D,EAAA+D,SAAAC,MAAA,IACAnE,GAAAqC,SAEArC,EAAAoE,YAAA,WACA7D,EAAAY,KAAA,sCACAE,cAAA4C,EAAA,GACA7C,QAAA6C,EAAA,KAEA3C,QAAA,SAAAC,GACAvB,EAAAqC,MAAAd,EAAAc,SAIArC,EAAAqE,QAAA,SAAApE,EAAAqE,GACA,GAAAC,GAAAtE,EAAAkE,MAAA,MAAA,GACAK,EAAAD,EAAAE,QAAA,IAIA,OAHA,IAAAD,IACAD,EAAAA,EAAAG,UAAA,EAAAF,IAEA,SAAAF,EACAN,EAAAW,UAAAJ,GAEAP,EAAAY,YAAAL,IAIAvE,EAAA6E,UAAA,SAAA5E,EAAAe,GACAU,EAAA,cAAAC,MAAA,QACArB,EAAAW,WAAA,eAAAhB,EAAAe,IAGAhB,EAAAoE,cAEApE,EAAAgC,IAAA,eACA,WACAhC,EAAAoE,qBC9CAjF,MACAW,UAAA,mBACA,QACA,aACA,QACA,iBACA,SAAAS,EAAAD,EAAA0D,EAAAc,GACA,OACA/E,SAAA,IACAC,OAAA,EACAC,KAAA,SAAAD,EAAAE,EAAA6E,GACApE,QAAAC,IAAA,qBACAN,EAAA0B,IAAA,aAAA,SAAAC,EAAA+C,GACAhF,EAAAiF,WAAAjB,EAAAY,YAAAI,EAAArB,KAAA1D,KAAAkE,MAAA,MAAA,IACAnE,EAAAkF,kBAAAF,EACAhF,EAAAmF,SAAAnF,EAAAkF,kBAAAvB,KAAAwB,QACA,KAAA,GAAA1C,GAAA,EAAAA,GAAAuC,EAAArB,KAAAyB,WAAA/C,MAAAyB,OAAA,EAAArB,IAAA,CACA,GAAA8B,GAAAvE,EAAAkF,kBAAAvB,KAAAyB,WAAA/C,MAAAI,GAAAxC,KAAAkE,MAAA,MAAA,EACAxD,SAAAC,IAAA2D,GACAvE,EAAAkF,kBAAAvB,KAAAyB,WAAA/C,MAAAI,GAAA4C,MAAArB,EAAAW,UAAAJ,GACA5D,QAAAC,IAAAZ,EAAAkF,kBAAAvB,KAAAyB,WAAA/C,MAAAI,GAAA4C,OACA1E,QAAAC,IAAAZ,EAAAkF,kBAAAvB,KAAAyB,WAAA/C,MAAAI,GAAAxC,MAGAU,QAAAC,IAAAZ,EAAAkF,mBACAlF,EAAA2D,KAAA3D,EAAAkF,kBAAAvB,OAIA3D,EAAAsF,YAAA,SAAAN,GACAhF,EAAAiB,WAAA,eAAA+D,IAGAhF,EAAAgC,IAAA,eAAA,SAAAC,EAAA+C,GACAhF,EAAAiF,WAAAjB,EAAAY,YAAAI,EAAA/E,KAAAkE,MAAA,MAAA,IACAnE,EAAAmF,SAAAH,EAAAG,SACAnF,EAAA2D,KAAAqB,EACArE,QAAAC,IAAAoE,KAGAhF,EAAAuF,MAAA,SAAAC,GACA,GAAAC,GAAAX,EAAAY,aACAC,EAAAF,EAAAG,gBAAAzB,MAAA,KAAA,EACAxD,SAAAC,IAAAZ,EAAAkF,mBACAvE,QAAAC,IAAA6E,EAAAG,gBAAAzB,MAAA,MAEA5D,EAAAY,KAAA,uBACAqE,SACApE,QAAAqE,EAAAzE,GACAyC,QAAAzD,EAAA2D,KAAA3C,GACAK,cAAA,GACAwE,YAAAF,EACAG,KAAAN,KAGAlE,QAAA,SAAAC,GACA,GAAAiE,GAAAjE,EAAAiE,OACAA,GAAAC,KAAAA,EACAzF,EAAAmF,SAAAxC,KAAA6C,KAEAxF,EAAA+F,YAAA,SC5DA5G,MACAW,UAAA,QACA,QACA,aACA,SAAAS,EAAAD,GACA,OACAP,SAAA,IACAC,OAAA,EACAC,KAAA,SAAAD,EAAAE,EAAA6E,GACA/E,EAAAgG,aACAnE,MAAA,UAGA7B,EAAAS,eAEAT,EAAAiG,QAAA,WACAvE,EAAA,aAAAC,MAAA,QACA3B,EAAAgG,YAAA5E,QAAApB,EAAAS,YAAAO,GAEAT,EAAAY,KAAA,iBACAwC,KAAA3D,EAAAgG,cAEA1E,QAAA,SAAAC,GACAjB,EAAAW,WAAA,gBACAjB,EAAAgG,aACAnE,MAAA,aAKA7B,EAAAgC,IAAA,WACA,SAAAC,EAAAiE,GACAlG,EAAAgG,YAAA3E,cAAA6E,IAGAlG,EAAAgC,IAAA,eACA,SAAAC,EAAAC,GACAlC,EAAAS,YAAAyB,SCrCA/C,MACAW,UAAA,WACA,QACA,SAAAS,GACA,OACAR,SAAA,IACAC,OAAA,EACAC,KAAA,SAAAD,EAAAE,EAAAC,GAEA,GAAA8D,GAAA9D,EAAAgG,QAAAhC,MAAA,IAEAjE,GAAAkG,KAAA,QACA,WACA7F,EAAAY,KAAA,qBACAC,QAAA6C,EAAA,GACAR,QAAAQ,EAAA,KAEA3C,QAAA,SAAAC,GACAjC,OAAAe,SAAAyB,kBClBA3C,MACAmF,QAAA,kBACA,WACA,GAAApC,KACA,QACAwD,WAAA,SAAAW,GACA,MAAAA,IACAnE,EAAAmE,MACA1F,SAAAC,IAAAsB,IAEAA,OCVA/C,MACAW,UAAA,WACA,QACA,QACA,aACA,iBACA,SAAAS,EAAAyD,EAAA1D,EAAAwE,GACA,OACA/E,SAAA,IACAC,OAAA,EACAC,KAAA,SAAAD,EAAAE,EAAAC,GACAQ,QAAAC,IAAA,WACAZ,EAAAkC,WAEAlC,EAAAsG,YAAA,WACA/F,EAAAgC,IAAA,aACAjB,QAAA,SAAAC,GACAvB,EAAAkC,QAAAX,EAAAyD,KACAhF,EAAAuG,cAIAvG,EAAAuG,SAAA,WACA,GAAAhC,GAAA,EACAhE,GAAAY,KAAA,uBACAC,QAAApB,EAAAkC,QAAAlB,KAEAM,QAAA,SAAAC,GACA,GAAAA,EAAAtB,KAAA,CACAsE,EAAAhD,EAAAtB,KAAAkE,MAAA,MAAA,EACA,IAAAK,GAAAD,EAAAE,QAAA,IACA,KAAAD,IACAD,EAAAA,EAAAG,UAAA,EAAAF,IAIAxE,EAAAkC,QAAAsE,SAAAjF,EAAAtB,KACAK,EAAAW,WAAA,eAAAjB,EAAAkC,SACAlC,EAAAkC,QAAAuE,cAAAzC,EAAAY,YAAAL,MAGAvE,EAAA0G,OAAA,UAAA,SAAAC,EAAAC,GACAD,GAAAC,IACA5G,EAAAkC,QAAAyE,SACAhG,QAAAC,IAAAZ,EAAAkC,SACA4C,EAAAY,WAAA1F,EAAAkC,YAGAlC,EAAAsG,mBChDAnH,MACAW,UAAA,MACA,WACA,OACAC,SAAA,IACAC,OAAA,EACAC,KAAA,SAAAD,EAAAE,EAAAC,GAEAD,EAAAkG,KAAA,QACA,WACA9G,OAAAe,SAAAF,EAAA0G,UCVA1H,MACAW,UAAA,cACA,WACA,OACAC,SAAA,IACAC,OAAA,EACA8G,YAAA,SAAA5G,EAAAC,GACA,MAAA,0BAAAA,EAAA4G,gBCPA5H,MACAW,UAAA,kBACA,QACA,QACA,SAAAS,EAAAyD,GACA,OACAjE,SAAA,IACAC,OAAA,EACAC,KAAA,SAAAD,EAAAE,EAAAC,GACAH,EAAAgH,SAAAhD,EAAAY,YAAAzE,EAAAyE,YAAAT,MAAA,MAAA,SCTAhF,MACAW,UAAA,aACA,QACA,iBACA,SAAAS,EAAAuE,GACA,OACA/E,SAAA,IACAC,OAAA,EACAC,KAAA,SAAAD,EAAAE,EAAAC,GACAH,EAAA4E,YAEAlD,EAAA,cAAAuF,GAAA,kBACA,WACAjH,EAAAkH,OAAA,WACAlH,EAAA4E,YAAA,OAIA5E,EAAAgC,IAAA,eACA,SAAAC,EAAAkF,EAAAnG,GACAhB,EAAA4E,YAAAuC,EACA5G,EAAAY,KAAA,kBAAAsC,QAAAzC,IACAM,QAAA,SAAAC,GACAZ,QAAAC,IAAAW,GACAvB,EAAAmF,SAAA5D,EAAAoC,KAAAwB,SACAnF,EAAA2D,KAAApC,EAAAoC,SAGA3D,EAAAuF,MAAA,SAAAC,GACA,GAAAC,GAAAX,EAAAY,aACAC,EAAAF,EAAAG,gBAAAzB,MAAA,KAAA,EACAxD,SAAAC,IAAAZ,EAAAkF,mBACAvE,QAAAC,IAAA6E,EAAAG,gBAAAzB,MAAA,MAEA5D,EAAAY,KAAA,uBACAqE,SACApE,QAAAqE,EAAAzE,GACAyC,QAAAzD,EAAA2D,KAAA3C,GACAK,cAAA,GACAwE,YAAAF,EACAG,KAAAN,KAGAlE,QAAA,SAAAC,GACA,GAAAiE,GAAAjE,EAAAiE,OACAA,GAAAC,KAAAA,EACAzF,EAAAmF,SAAAxC,KAAA6C,KAEAxF,EAAA+F,YAAA,SChDA5G,MACAiI,QAAA,SACA,OACA,SAAAC,GASA,MARAC,MAAA3C,UAAA,SAAA4C,GACA,MAAAF,GAAAG,mBAAA,6BAAAD,EAAA,WAGAD,KAAA1C,YAAA,SAAA2C,GACA,MAAAF,GAAAG,mBAAA,gCAAAD,EAAA,iEAGAD","file":"app.min.js","sourcesContent":["var drip8 = angular.module( \"Drip8\" , [ 'angular-flexslider' , 'infinite-scroll' ] );\n\nwindow.fbAsyncInit = function ( ) {\n\tFB.init( {\n\t\t\"appId\"    \t : \"719176184895882\",\n\t    \"status\"     : true,\n\t    \"xfbml\"      : true,\n\t    \"version\"    : 'v2.3' // or v2.0, v2.1, v2.0\n\t} );\n};","drip8\n\t.directive( \"auth\" , [\t\t\n\t\tfunction directive ( ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"A\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"link\": function onLink ( scope , element , attributeSet ) {\n\t\t\t\t\tscope.login = function login ( ) {\n\t\t\t\t\t\twindow.location = \"/auth/facebook\";\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );","drip8\n\t.directive( \"bucket\" , [\n\t\t\"$rootScope\",\n\t\t\"$http\",\n\t\tfunction directive ( $rootScope , $http ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"A\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"link\": function onLink ( scope , elemenet , attributeSet ) {\n\t\t\t\t\tscope.profileData = { };\n\n\t\t\t\t\tscope.buckets = [ ];\n\t\t\t\t\tconsole.log( localStorage.userProfile );\n\t\t\t\t\tscope.newDrip = function newDrip ( id ) {\n\t\t\t\t\t\t$rootScope.$broadcast( \"drip-new\" , id );\n\t\t\t\t\t};\n\n\t\t\t\t\tscope.getDrip = function getDrip ( id ) {\n\t\t\t\t\t\t$http.post( \"/api/read_drips_by_bucket_and_user\" , {\n\t\t\t\t\t\t\t\"user_id\": scope.profileData.id,\n\t\t\t\t\t\t\t\"dripbucket_id\": id\n\t\t\t\t\t\t} )\n\t\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\t\tconsole.log( response );\n\t\t\t\t\t\t} );\n\t\t\t\t\t};\n\n\t\t\t\t\tscope.newBucket = function newBucket ( bucket ) {\n\t\t\t\t\t\t$( \"#createDripBoardBox\" ).modal( \"hide\" );\n\t\t\t\t\t\t$http.post( \"/api/add_bucket\" , {\n\t\t\t\t\t\t\t\"bucket\": {\n\t\t\t\t\t\t\t\t\"user_id\": scope.profileData.id,\n\t\t\t\t\t\t\t\t\"name\": bucket.name,\n\t\t\t\t\t\t\t\t\"state\": bucket.state\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} ).success( function ( response ) {\t\t\t\t\t\t\t\n\t\t\t\t\t\t\twindow.location.reload( );\n\t\t\t\t\t\t} );\n\t\t\t\t\t};\n\n\t\t\t\t\tscope.getAllBucket = function getAllBucket ( ) {\t\t\t\t\t\t\n\t\t\t\t\t\t$http.post( \"/api/read_all_bucket_by_user\" , {\n\t\t\t\t\t\t\t\"user_id\": scope.profileData.id\n\t\t\t\t\t\t} )\n\t\t\t\t\t\t.success( function ( response ) {\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tscope.buckets = response.buckets;\n\t\t\t\t\t\t} );\n\t\t\t\t\t};\t\t\t\t\t\n\n\t\t\t\t\tscope.$on( \"profile-data\" , \n\t\t\t\t\t\tfunction ( evt , profile ) {\n\t\t\t\t\t\t\tscope.profileData = JSON.parse( localStorage.userProfile );\n\t\t\t\t\t\t\tconsole.log( \"profile data below\" )\n\t\t\t\t\t\t\tconsole.log( scope.profileData )\n\t\t\t\t\t\t\tscope.getAllBucket( );\n\t\t\t\t\t\t} );\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );","drip8\n\t.directive( \"dripDashboard\" , [\n\t\t\"$http\",\n\t\t'$rootScope',\n\t\tfunction directive ( $http , $rootScope ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"A\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"link\": function onLink ( scope , element , attributeSet ) {\n\t\t\t\t\tscope.drips = [ ];\n\t\t\t\t\tscope.lastId = \"dont stop\";\n\t\t\t\t\t$http.get( \"/api/drip_length\" )\n\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\tvar taskArray = [ ];\n\t\t\t\t\t\tfor ( var index = response.count  ; index >= ( response.count - 3 ) ; index -- ) {\n\t\t\t\t\t\t\ttaskArray.push( index );\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar asyncTasks = createAsyncTask( taskArray );\n\t\t\t\t\t\tasync\n\t\t\t\t\t\t\t.parallel( asyncTasks , function ( err , taskResponse ) {\n\t\t\t\t\t\t\t\tscope.drips = taskResponse;\n\t\t\t\t\t\t\t\tconsole.log( scope.drips );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t} );\n\t\t\t\t\tscope.passProfile = function passProfile( profile ){\n\t\t\t\t\t\tlocalStorage.setItem(\"userProfile\", JSON.stringify( profile ) );\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tvar createAsyncTask = function createAsyncTask ( taskArray ) {\n\t\t\t\t\t\tvar tasks = [ ];\n\t\t\t\t\t\ttaskArray.forEach( function ( e ) {\n\t\t\t\t\t\t\tconsole.log( e )\n\t\t\t\t\t\t\ttasks.push( function ( callback ) {\n\t\t\t\t\t\t\t\t$http.post( \"/api/drip_each\" , { \"drip_id\": e } )\n\t\t\t\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\t\t\t\tcallback( null , response );\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} );\n\t\t\t\t\t\treturn tasks;\n\t\t\t\t\t};\n\t\t\t\t\tscope.seeBucket = function seeBucket( drip ){\n\t\t\t\t\t\tconsole.log( \"see Bucket\" );\n\t\t\t\t\t\t$rootScope.$broadcast( 'see-bucket' , drip );\n\t\t\t\t\t};\n\n\t\t\t\t\tscope.loadMore = function loadMore() {\n\t\t\t\t\t    var last = scope.drips[scope.drips.length - 1];\n\t\t\t\t\t    var lastId = last.drip.id;\n\t\t\t\t\t    var idLoad = lastId - 1;\n\t\t\t\t\t    if( lastId >= 0 && scope.lastId != 'stop' ){\n\t\t\t\t\t    \t$http.post( \"/api/drip_each\" , { \"drip_id\": idLoad } )\n\t\t\t\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\t\t\t\t//callback( null , response );\n\t\t\t\t\t\t\t\t\tconsole.log( response );\n\t\t\t\t\t\t\t\t\tif( response.drip != null ){\n\t\t\t\t\t\t\t\t\t\tscope.drips.push( response );\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif( lastId == 0 ){\n\t\t\t\t\t\t\t\t\t\tscope.lastId = 'stop';\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t    }\n\t\t\t\t\t    \n\t\t\t\t\t};\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );\n\n\n// async\n// \t.parallel( [\n// \t\tfunction ( callback ) {\n\n// \t\t},\n// \t\tfunction ( callback ) {\n\n// \t\t}, \n// \t] , function doSomething ( err , arr ) {\n\n// \t} );","drip8\n\t.directive( \"dripList\" , [\n\t\t\"$http\",\n\t\t\"Video\",\n\t\t\"$rootScope\",\n\t\tfunction directive ( $http , Video , $rootScope ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"A\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"link\": function onLink ( scope , element , attributeSet ) {\n\n\t\t\t\t\tvar ids = attributeSet.dripList.split( \"-\" );\n\t\t\t\t\tscope.drips = [ ];\t\n\n\t\t\t\t\tscope.dripListing = function dripListing ( ) {\n\t\t\t\t\t\t$http.post( \"/api/read_drips_by_bucket_and_user\" , {\n\t\t\t\t\t\t\t\"dripbucket_id\": ids[0],\n\t\t\t\t\t\t\t\"user_id\": ids[1]\n\t\t\t\t\t\t} )\n\t\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\t\tscope.drips = response.drips;\n\t\t\t\t\t\t} );\n\t\t\t\t\t};\n\n\t\t\t\t\tscope.linkUri = function linkUri ( link , service ) {\n\t\t\t\t\t\tvar video_id = link.split( 'v=' )[1];\n\t\t\t\t\t\tvar ampersandPosition = video_id.indexOf( '&' );\n\t\t\t\t\t\tif ( ampersandPosition != -1 ) {\n\t\t\t\t\t\t  video_id = video_id.substring( 0 , ampersandPosition );\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( service == \"thumb\" ) {\n\t\t\t\t\t\t\treturn Video.thumbnail( video_id );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn Video.videoSource( video_id );\n\t\t\t\t\t\t}\t\n\t\t\t\t\t};\n\n\t\t\t\t\tscope.showVideo = function showVideo ( link , id ) {\n\t\t\t\t\t\t$( \"#videoLink\" ).modal( \"show\" );\n\t\t\t\t\t\t$rootScope.$broadcast( \"video-source\" , link , id );\n\t\t\t\t\t};\n\n\t\t\t\t\tscope.dripListing( );\n\n\t\t\t\t\tscope.$on( \"drips-reload\" , \n\t\t\t\t\t\tfunction ( ) {\n\t\t\t\t\t\t\tscope.dripListing( );\n\t\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );","drip8\n\t.directive( \"dripModalBucket\" , [\n\t\t\"$http\",\n\t\t\"$rootScope\",\n\t\t'Video',\n\t\t'profileService',\n\t\tfunction directive ( $http , $rootScope , Video , profileService ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"A\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"link\": function onLink ( scope , element , atrributeSet ) {\n\t\t\t\t\tconsole.log( \"drip-modal-bucket\" );\n\t\t\t\t\t$rootScope.$on( 'see-bucket' , function( evt , data ){\n\t\t\t\t\t\tscope.directDrip = Video.videoSource( data.drip.link.split( \"v=\" )[1] );\n\t\t\t\t\t\tscope.dripBucketDetails = data;\n\t\t\t\t\t\tscope.comments = scope.dripBucketDetails.drip.comments;\n\t\t\t\t\t\tfor( var index = 0 ; index <= data.drip.dripbucket.drips.length-1 ; index++ ){\n\t\t\t\t\t\t\tvar video_id = scope.dripBucketDetails.drip.dripbucket.drips[ index ].link.split( \"v=\" )[1];\n\t\t\t\t\t\t\tconsole.log( video_id );\n\t\t\t\t\t\t\tscope.dripBucketDetails.drip.dripbucket.drips[ index ].thumb = Video.thumbnail( video_id );\n\t\t\t\t\t\t\tconsole.log( scope.dripBucketDetails.drip.dripbucket.drips[ index ].thumb );\n\t\t\t\t\t\t\tconsole.log( scope.dripBucketDetails.drip.dripbucket.drips[ index ].link );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconsole.log( scope.dripBucketDetails );\n\t\t\t\t\t\tscope.drip = scope.dripBucketDetails.drip;\n\t\t\t\t\t} );\n\n\n\t\t\t\t\tscope.changeVideo = function changeVideo( data ){\n\t\t\t\t\t\tscope.$broadcast( 'change-video' , data )\n\t\t\t\t\t};\n\n\t\t\t\t\tscope.$on( 'change-video' , function( evt , data ){\n\t\t\t\t\t\tscope.directDrip = Video.videoSource( data.link.split( \"v=\" )[1] );\n\t\t\t\t\t\tscope.comments = data.comments;\n\t\t\t\t\t\tscope.drip = data;\n\t\t\t\t\t\tconsole.log( data );\n\t\t\t\t\t} );\n\n\t\t\t\t\tscope.react = function react( comment ){\n\t\t\t\t\t\tvar user = profileService.setProfile();\n\t\t\t\t\t\tvar fbId = user.profile_picture.split( \"/\" )[3];\n\t\t\t\t\t\tconsole.log( scope.dripBucketDetails );\n\t\t\t\t\t\tconsole.log( user.profile_picture.split( \"/\" ) )\n\t\t\t\t\t\t\n\t\t\t\t\t\t$http.post( \"/api/create_comment\" , {\n\t\t\t\t\t\t\t\t\"comment\":{\n\t\t\t\t\t\t\t\t\t\"user_id\"\t\t: user.id ,\n\t\t\t\t\t\t\t\t\t\"drip_id\"\t\t: scope.drip.id ,\n\t\t\t\t\t\t\t\t\t\"dripbucket_id\"\t: \"\" ,\n\t\t\t\t\t\t\t\t\t\"facebook_id\"\t: fbId ,\n\t\t\t\t\t\t\t\t\t\"body\"\t\t\t: comment\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\t\t\t\tvar comment = response.comment;\n\t\t\t\t\t\t\t\t\tcomment.user = user;\n\t\t\t\t\t\t\t\t\tscope.comments.push( comment );\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\tscope.dripComment = \"\";\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );","drip8\n\t.directive( \"drip\" , [\n\t\t\"$http\",\n\t\t\"$rootScope\",\n\t\tfunction directive ( $http , $rootScope ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"A\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"link\": function onLink ( scope , element , atrributeSet ) {\n\t\t\t\t\tscope.dripDetails = { \n\t\t\t\t\t\t\"state\": \"public\"\n\t\t\t\t\t};\n\n\t\t\t\t\tscope.profileData = { };\n\n\t\t\t\t\tscope.addDrip = function addDrip ( ) {\t\t\t\t\t\t\n\t\t\t\t\t\t$( \"#addADrip\" ).modal( \"hide\" );\n\t\t\t\t\t\tscope.dripDetails.user_id = scope.profileData.id;\n\n\t\t\t\t\t\t$http.post( \"/api/add_drip\" , {\n\t\t\t\t\t\t\t\"drip\": scope.dripDetails\n\t\t\t\t\t\t} )\n\t\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\t\t$rootScope.$broadcast( \"drips-reload\" );\n\t\t\t\t\t\t\tscope.dripDetails = { \n\t\t\t\t\t\t\t\t\"state\": \"public\"\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t} );\t\t\t\t\t\t\n\t\t\t\t\t};\n\n\t\t\t\t\tscope.$on( \"drip-new\" , \n\t\t\t\t\t\tfunction ( evt , bucketId ) {\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tscope.dripDetails.dripbucket_id = bucketId;\t\t\t\t\t\t\t\n\t\t\t\t\t\t} );\n\n\t\t\t\t\tscope.$on( \"profile-data\" , \n\t\t\t\t\t\tfunction ( evt , profile ) {\n\t\t\t\t\t\t\tscope.profileData = profile;\n\t\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );","drip8\n\t.directive( \"feature\" , [\n\t\t\"$http\",\n\t\tfunction directive ( $http ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"A\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"link\": function onLink ( scope , element , attributeSet ) {\t\t\t\t\t\n\n\t\t\t\t\tvar ids = attributeSet.feature.split( \"-\" );\n\n\t\t\t\t\telement.bind( \"click\" , \n\t\t\t\t\t\tfunction ( ) {\n\t\t\t\t\t\t\t$http.post( \"/api/new_featured\" , {\n\t\t\t\t\t\t\t\t\"user_id\": ids[0],\n\t\t\t\t\t\t\t\t\"drip_id\": ids[1]\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\t\t\twindow.location.reload( );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );","drip8\n\t.service( 'profileService' , [\n\t\tfunction(){\n\t\t\tvar profile = {};\n\t\t\treturn{\n\t\t\t\tsetProfile: function setProfile( credentials ){\n\t\t\t\t\tif( credentials ){\n\t\t\t\t\t\tprofile = credentials;\n\t\t\t\t\t\tconsole.log( profile );\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn profile;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] )","drip8\n\t.directive( \"profile\" , [\n\t\t\"$http\",\n\t\t\"Video\",\n\t\t\"$rootScope\",\n\t\t'profileService',\n\t\tfunction directive ( $http , Video , $rootScope , profileService ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"A\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"link\": function onLink ( scope , element , attributeSet ) {\n\t\t\t\t\tconsole.log( \"profile\" );\n\t\t\t\t\tscope.profile = { };\t\t\t\t\t\n\n\t\t\t\t\tscope.getUserInfo = function getUserInfo ( ) {\n\t\t\t\t\t\t$http.get( \"/api/user\" )\n\t\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\t\tscope.profile = response.data;\n\t\t\t\t\t\t\tscope.trustUrl( );\n\t\t\t\t\t\t} );\n\t\t\t\t\t};\n\n\t\t\t\t\tscope.trustUrl = function trustUrl ( ) {\n\t\t\t\t\t\tvar video_id = \"\";\n\t\t\t\t\t\t$http.post( \"/api/video_featured\" , {\n\t\t\t\t\t\t\t\"user_id\": scope.profile.id\n\t\t\t\t\t\t} )\n\t\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\t\tif ( response.link ) {\n\t\t\t\t\t\t\t\tvideo_id = response.link.split( 'v=' )[1];\n\t\t\t\t\t\t\t\tvar ampersandPosition = video_id.indexOf( '&' );\n\t\t\t\t\t\t\t\tif ( ampersandPosition != -1 ) {\n\t\t\t\t\t\t\t\t  video_id = video_id.substring( 0 , ampersandPosition );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tscope.profile.featured = response.link;\n\t\t\t\t\t\t\t$rootScope.$broadcast( \"profile-data\" , scope.profile );\n\t\t\t\t\t\t\tscope.profile.featuredVideo = Video.videoSource( video_id );\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t} );\n\t\t\t\t\t};\n\t\t\t\t\tscope.$watch( 'profile' , function( newValue , oldValue ){\n\t\t\t\t\t\tif( newValue != oldValue ){\n\t\t\t\t\t\t\tscope.profile.newValue;\n\t\t\t\t\t\t\tconsole.log( scope.profile );\n\t\t\t\t\t\t\tprofileService.setProfile( scope.profile );\n\t\t\t\t\t\t}\n\t\t\t\t\t} )\n\t\t\t\t\tscope.getUserInfo( );\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );","drip8\n\t.directive( \"to\" , [\n\t\tfunction directive ( ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"A\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"link\": function onLink ( scope , element , attributeSet ) {\n\n\t\t\t\t\telement.bind( \"click\" , \n\t\t\t\t\t\tfunction ( ) {\n\t\t\t\t\t\t\twindow.location = attributeSet.to;\n\t\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );","drip8\n\t.directive( \"uiTemplate\" , [\n\t\tfunction directive ( ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"E\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"templateUrl\": function onTemplateLoad ( element , attributeSet ) {\n\t\t\t\t\treturn \"/api/template?template=\" + attributeSet.ngTemplate;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );","drip8\n\t.directive( \"videoDashboard\" , [\n\t\t\"$http\",\n\t\t\"Video\",\t\t\n\t\tfunction directive ( $http , Video ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"A\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"link\": function onLink ( scope , element , attributeSet ) {\n\t\t\t\t\tscope.videoSrc = Video.videoSource( attributeSet.videoSource.split( \"v=\" )[1] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );","drip8\n\t.directive( \"videoLink\" , [\n\t\t'$http',\n\t\t'profileService',\n\t\tfunction  directive ( $http , profileService ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"A\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"link\": function onLink ( scope , element , attributeSet ) {\n\t\t\t\t\tscope.videoSource;\n\n\t\t\t\t\t$( \"#videoLink\" ).on( \"hidden.bs.modal\" , \n\t\t\t\t\t\tfunction ( ) {\n\t\t\t\t\t\t\tscope.$apply( function ( ) {\n\t\t\t\t\t\t\t\tscope.videoSource = \"\";\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} );\n\n\t\t\t\t\tscope.$on( \"video-source\" , \n\t\t\t\t\t\tfunction ( evt , src , id ) {\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tscope.videoSource = src;\n\t\t\t\t\t\t\t$http.post( \"/api/drip_each\" , { \"drip_id\": id } )\n\t\t\t\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\t\t\t\tconsole.log( response );\n\t\t\t\t\t\t\t\t\tscope.comments = response.drip.comments;\n\t\t\t\t\t\t\t\t\tscope.drip = response.drip;\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} );\n\t\t\t\t\tscope.react = function react( comment ){\n\t\t\t\t\t\tvar user = profileService.setProfile();\n\t\t\t\t\t\tvar fbId = user.profile_picture.split( \"/\" )[3];\n\t\t\t\t\t\tconsole.log( scope.dripBucketDetails );\n\t\t\t\t\t\tconsole.log( user.profile_picture.split( \"/\" ) )\n\t\t\t\t\t\t\n\t\t\t\t\t\t$http.post( \"/api/create_comment\" , {\n\t\t\t\t\t\t\t\t\"comment\":{\n\t\t\t\t\t\t\t\t\t\"user_id\"\t\t: user.id ,\n\t\t\t\t\t\t\t\t\t\"drip_id\"\t\t: scope.drip.id ,\n\t\t\t\t\t\t\t\t\t\"dripbucket_id\"\t: \"\" ,\n\t\t\t\t\t\t\t\t\t\"facebook_id\"\t: fbId ,\n\t\t\t\t\t\t\t\t\t\"body\"\t\t\t: comment\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\t\t\t\tvar comment = response.comment;\n\t\t\t\t\t\t\t\t\tcomment.user = user;\n\t\t\t\t\t\t\t\t\tscope.comments.push( comment );\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\tscope.dripComment = \"\";\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );","drip8\n\t.factory( \"Video\" , [\n\t\t\"$sce\",\n\t\tfunction factory ( $sce ) {\n\t\t\tthis.thumbnail = function thumbnail ( youtubeId ) {\n\t\t\t\treturn $sce.trustAsResourceUrl( \"http://img.youtube.com/vi/\" + youtubeId + \"/0.jpg\" );\n\t\t\t};\n\n\t\t\tthis.videoSource = function videoSource ( youtubeId ) {\n\t\t\t\treturn $sce.trustAsResourceUrl( \"http://www.youtube.com/embed/\" + youtubeId + \"?rel=0&nologo=1&showinfo=0&modestbranding=1&iv_load_policy=3\" );\n\t\t\t};\n\n\t\t\treturn this;\n\t\t}\n\t] );"],"sourceRoot":"/source/"}