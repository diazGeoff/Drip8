{"version":3,"sources":["app.js","auth._.js","bucket._.js","dashboard._.js","drip-list._.js","drip-modal-bucket._.js","drip._.js","feature._.js","profile-service._.js","profile._.js","to._.js","ui-template._.js","video-dashboard._.js","video-link._.js","video._.js"],"names":["drip8","angular","module","window","fbAsyncInit","FB","init","appId","status","xfbml","version","directive","restrict","scope","link","element","attributeSet","login","location","$rootScope","$http","profileService","dripListService","elemenet","profileData","buckets","newDrip","id","bucketName","$broadcast","getDrip","post","user_id","dripbucket_id","success","response","console","log","description","desc","newBucket","bucket","$","modal","name","state","reload","getAllBucket","setProfile","rename","drip","target","createAsyncTask","taskArray","setting","tasks","forEach","e","push","callback","drip_id","drips","dripList","setDripList","list","asyncTasks","async","parallel","err","taskResponse","deleteDrip","settingDropdown","profile","$on","evt","JSON","parse","localStorage","userProfile","lastId","get","index","count","length","splice","passProfile","setItem","stringify","exit","seeBucket","loadMore","last","idLoad","service","credentials","Video","ids","split","dripFilter","array","newDripArray","dripListing","linkUri","video_id","ampersandPosition","indexOf","substring","thumbnail","videoSource","showVideo","atrributeSet","data","directDrip","dripBucketDetails","comments","dripbucket","thumb","changeVideo","react","comment","user","fbId","profile_picture","facebook_id","body","dripComment","dripDetails","addDrip","bucketId","dripState","feature","bind","compile","pre","profileName","undefined","getUserInfo","trustUrl","featured","featuredVideo","$watch","newValue","oldValue","to","templateUrl","ngTemplate","videoSrc","on","$apply","src","factory","$sce","this","youtubeId","trustAsResourceUrl"],"mappings":"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","file":"app.min.js","sourcesContent":["var drip8 = angular.module( \"Drip8\" , [ 'angular-flexslider' , 'infinite-scroll' ] );\n\nwindow.fbAsyncInit = function ( ) {\n\tFB.init( {\n\t\t\"appId\"    \t : \"719176184895882\",\n\t    \"status\"     : true,\n\t    \"xfbml\"      : true,\n\t    \"version\"    : 'v2.3' // or v2.0, v2.1, v2.0\n\t} );\n};","drip8\n\t.directive( \"auth\" , [\t\t\n\t\tfunction directive ( ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"A\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"link\": function onLink ( scope , element , attributeSet ) {\n\t\t\t\t\tscope.login = function login ( ) {\n\t\t\t\t\t\twindow.location = \"/auth/facebook\";\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );","drip8\n\t.directive( \"bucket\" , [\n\t\t\"$rootScope\",\n\t\t\"$http\",\n\t\t'profileService',\n\t\t'dripListService',\n\t\tfunction directive ( $rootScope , $http , profileService , dripListService ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"A\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"link\": function onLink ( scope , elemenet , attributeSet ) {\n\t\t\t\t\tscope.profileData = { };\n\n\t\t\t\t\tscope.buckets = [ ];\n\t\t\t\t\t//console.log( localStorage.userProfile );\n\t\t\t\t\tscope.newDrip = function newDrip ( id , bucketName ) {\n\t\t\t\t\t\t$rootScope.$broadcast( \"drip-new\" , id , bucketName );\n\t\t\t\t\t};\n\n\t\t\t\t\tscope.getDrip = function getDrip ( id ) {\n\t\t\t\t\t\t$http.post( \"/api/read_drips_by_bucket_and_user\" , {\n\t\t\t\t\t\t\t\"user_id\": scope.profileData.id,\n\t\t\t\t\t\t\t\"dripbucket_id\": id\n\t\t\t\t\t\t} )\n\t\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\t\tconsole.log( response );\n\t\t\t\t\t\t} );\n\t\t\t\t\t};\n\n\t\t\t\t\tscope.description= function description( desc ){\n\t\t\t\t\t\treturn desc != null;\n\t\t\t\t\t};\n\t\t\t\t\tscope.newBucket = function newBucket ( bucket ) {\n\t\t\t\t\t\t$( \"#createDripBoardBox\" ).modal( \"hide\" );\n\t\t\t\t\t\t$http.post( \"/api/add_bucket\" , {\n\t\t\t\t\t\t\t\"bucket\": {\n\t\t\t\t\t\t\t\t\"user_id\": scope.profileData.id,\n\t\t\t\t\t\t\t\t\"name\": bucket.name,\n\t\t\t\t\t\t\t\t\"state\": bucket.state\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} ).success( function ( response ) {\t\t\t\t\t\t\t\n\t\t\t\t\t\t\twindow.location.reload( );\n\t\t\t\t\t\t} );\n\t\t\t\t\t};\n\n\t\t\t\t\tscope.getAllBucket = function getAllBucket ( ) {\t\t\t\t\t\t\n\t\t\t\t\t\t$http.post( \"/api/read_all_bucket_by_user\" , {\n\t\t\t\t\t\t\t\"user_id\": scope.profileData.id\n\t\t\t\t\t\t} )\n\t\t\t\t\t\t.success( function ( response ) {\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tscope.buckets = response.buckets;\n\t\t\t\t\t\t\tvar profile = profileService.setProfile();\n\t\t\t\t\t\t\t// if( scope.profileData.id == '1' || profile.id == '1' ){\n\t\t\t\t\t\t\t// \tscope.buckets.splice( 0 , 3 );\n\t\t\t\t\t\t\t// \tconsole.log( scope.buckets );\n\t\t\t\t\t\t\t// }\n\t\t\t\t\t\t} );\n\t\t\t\t\t};\n\t\t\t\t\tscope.rename = function rename ( drip , target ) {\t\t\t\t\t\t\n\t\t\t\t\t\t//console.log( drip , target );\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tvar createAsyncTask = function createAsyncTask ( taskArray , setting ) {\n\t\t\t\t\t\tvar tasks = [ ];\n\n\t\t\t\t\t\ttaskArray.forEach( function ( e ) {\n\t\t\t\t\t\t\tconsole.log( e )\n\t\t\t\t\t\t\tif( setting == 'public' ){\n\t\t\t\t\t\t\t\tsetting = e.state\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tsetting = 'profile only'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttasks.push( function ( callback ) {\n\t\t\t\t\t\t\t\t$http.post( \"/api/update_drip_state\" , { \n\t\t\t\t\t\t\t\t\t\"drip_id\": e.id,\n\t\t\t\t\t\t\t\t\t\"state\": setting  \n\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\t\t\t\tcallback( null , response );\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} );\n\t\t\t\t\t\treturn tasks;\n\t\t\t\t\t};\n\n\t\t\t\t\tscope.setting = function setting ( drips , setting , target , id ) {\t\t\t\t\t\t\n\t\t\t\t\t\t//console.log( drips , setting , target );\n\n\t\t\t\t\t\tswitch( target ){\n\n\t\t\t\t\t\t\tcase 'drip':\n\t\t\t\t\t\t\t\t$http.post( '/api/update_drip_state' , {\n\t\t\t\t\t\t\t\t\t\"drip_id\": drips.id,\n\t\t\t\t\t\t\t\t\t\"state\": setting \n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t.success( function( response ){\n\t\t\t\t\t\t\t\t\t//console.log( \"New\" , response );\n\t\t\t\t\t\t\t\t\tscope.$broadcast( \"drips-reload\" );\n\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'bucket':\n\t\t\t\t\t\t\t\tconsole.log( id );\n\t\t\t\t\t\t\t\tvar dripList = dripListService.setDripList();\n\t\t\t\t\t\t\t\tvar list = dripList[ id ];\n\n\t\t\t\t\t\t\t\tvar asyncTasks = createAsyncTask( list , setting );\n\t\t\t\t\t\t\t\tasync\n\t\t\t\t\t\t\t\t\t.parallel( asyncTasks , function ( err , taskResponse ) {\n\t\t\t\t\t\t\t\t\t\tconsole.log( taskResponse );\n\t\t\t\t\t\t\t\t\t\tscope.$broadcast( \"drips-reload\" );\n\t\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t};\n\t\t\t\t\tscope.deleteDrip = function deleteDrip ( drip , target ) {\t\t\t\t\t\t\n\t\t\t\t\t\tconsole.log( drip , target );\n\t\t\t\t\t};\t\t\t\t\n\n\t\t\t\t\tscope.settingDropdown = function settingDropdown( name ){\n\t\t\t\t\t\tvar profile = profileService.setProfile() // actual profile\n\t\t\t\t\t\tif( scope.profileData.id != profile.id ){\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tswitch( name ){\n\n\t\t\t\t\t\t\t\tcase 'who I am':\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase 'what I do':\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase 'what I am proud of':\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\n\t\t\t\t\tscope.$on( \"profile-data\" , \n\t\t\t\t\t\tfunction ( evt , profile ) {\n\t\t\t\t\t\t\tscope.profileData = JSON.parse( localStorage.userProfile );// visited profile \n\t\t\t\t\t\t\tconsole.log( \"profile data below\" )\n\t\t\t\t\t\t\tconsole.log( scope.profileData )\n\t\t\t\t\t\t\tscope.getAllBucket( );\n\t\t\t\t\t\t} );\t\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );","drip8\n\t.directive( \"dripDashboard\" , [\n\t\t\"$http\",\n\t\t'$rootScope',\n\t\tfunction directive ( $http , $rootScope ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"A\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"link\": function onLink ( scope , element , attributeSet ) {\n\t\t\t\t\tscope.drips = [ ];\n\t\t\t\t\tscope.lastId = \"dont stop\";\n\t\t\t\t\t$http.get( \"/api/drip_length\" )\n\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\tvar taskArray = [ ];\n\t\t\t\t\t\t\n\t\t\t\t\t\tfor ( var index = response.count  ; index >= ( response.count - 3 ) ; index -- ) {\n\t\t\t\t\t\t\ttaskArray.push( index );\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar asyncTasks = createAsyncTask( taskArray );\n\t\t\t\t\t\tasync\n\t\t\t\t\t\t\t.parallel( asyncTasks , function ( err , taskResponse ) {\n\t\t\t\t\t\t\t\tfor( var index = 0 ; index < taskResponse.length ; index++ ){\n\t\t\t\t\t\t\t\t\tif( taskResponse[ index ].drip == null || taskResponse[ index ].drip.state != 'public' || taskResponse[ index ].drip.state == 'deleted' ){\n\t\t\t\t\t\t\t\t\t\tconsole.log( \"***************************deleted\" , taskResponse[ index ].drip );\n\t\t\t\t\t\t\t\t\t\ttaskResponse.splice( index , 1 );\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tconsole.log( taskResponse[ index ].drip );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tscope.drips = taskResponse;\n\t\t\t\t\t\t\t\tconsole.log( taskResponse );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t} );\n\t\t\t\t\tscope.passProfile = function passProfile( profile ){\n\t\t\t\t\t\tlocalStorage.setItem(\"userProfile\", JSON.stringify( profile ) );\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tscope.exit = function exit(){\n\t\t\t\t\t\t$(\"#myModal\").modal(\"hide\");\n\t\t\t\t\t};\n\n\t\t\t\t\tvar createAsyncTask = function createAsyncTask ( taskArray ) {\n\t\t\t\t\t\tvar tasks = [ ];\n\t\t\t\t\t\ttaskArray.forEach( function ( e ) {\n\t\t\t\t\t\t\tconsole.log( e )\n\t\t\t\t\t\t\ttasks.push( function ( callback ) {\n\t\t\t\t\t\t\t\t$http.post( \"/api/drip_each\" , { \"drip_id\": e } )\n\t\t\t\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\t\t\t\tcallback( null , response );\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} );\n\t\t\t\t\t\treturn tasks;\n\t\t\t\t\t};\n\t\t\t\t\tscope.seeBucket = function seeBucket( drip ){\n\t\t\t\t\t\tconsole.log( \"see Bucket\" );\n\t\t\t\t\t\t$rootScope.$broadcast( 'see-bucket' , drip );\n\t\t\t\t\t};\n\n\t\t\t\t\tscope.loadMore = function loadMore() {\n\t\t\t\t\t\tconsole.log( \" ***************  \" )\n\t\t\t\t\t\tconsole.log( scope.drips );\n\t\t\t\t\t\tconsole.log( scope.drips[scope.drips.length - 1] );\n\t\t\t\t\t    var last = scope.drips[scope.drips.length - 1];\n\t\t\t\t\t    if( last != null ){\n\t\t\t\t\t    \tvar lastId = last.drip.id;\n\t\t\t\t\t\t    var idLoad = lastId - 1;\n\t\t\t\t\t\t    if( lastId >= 0 && scope.lastId != 'stop' ){\n\t\t\t\t\t\t    \tconsole.log( scope.lastId );\n\t\t\t\t\t\t    \t$http.post( \"/api/drip_each\" , { \"drip_id\": idLoad } )\n\t\t\t\t\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\t\t\t\t\t//callback( null , response );\n\t\t\t\t\t\t\t\t\t\tconsole.log( response );\n\t\t\t\t\t\t\t\t\t\tif( response.drip != null && response.drip.state == 'public' ){\n\t\t\t\t\t\t\t\t\t\t\tscope.drips.push( response );\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tif( lastId == 0 ){\n\t\t\t\t\t\t\t\t\t\t\tscope.lastId = 'stop';\n\t\t\t\t\t\t\t\t\t\t\tconsole.log( scope.lastId );\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t    }\n\t\t\t\t\t    }\n\t\t\t\t\t};\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );\n\n\n// async\n// \t.parallel( [\n// \t\tfunction ( callback ) {\n\n// \t\t},\n// \t\tfunction ( callback ) {\n\n// \t\t}, \n// \t] , function doSomething ( err , arr ) {\n\n// \t} );","drip8\n\t.service( \"dripListService\" , [\n\t\t\tfunction(){\n\t\t\t\tvar dripList = [];\n\n\t\t\t\treturn {\n\t\t\t\t\t// takes id of dripBucket and sets drips in\n\t\t\t\t\tsetDripList: function setDripList( id , credentials ){\n\t\t\t\t\t\tif( credentials ){\n\t\t\t\t\t\t\tdripList[ id ] = credentials;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\treturn dripList\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t] );\n\ndrip8\n\t.directive( \"dripList\" , [\n\t\t\"$http\",\n\t\t\"Video\",\n\t\t\"$rootScope\",\n\t\t'dripListService',\n\t\tfunction directive ( $http , Video , $rootScope , dripListService ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"A\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"link\": function onLink ( scope , element , attributeSet ) {\n\n\t\t\t\t\tvar ids = attributeSet.dripList.split( \"-\" );\n\t\t\t\t\tconsole.log( ids[ 2 ] );\n\t\t\t\t\tscope.drips = [ ];\n\n\t\t\t\t\tvar dripFilter = function dripFilter ( array ){\n\t\t\t\t\t\tvar newDripArray = [];\n\n\t\t\t\t\t\tarray.forEach( function( e ) {\n\t\t\t\t\t\t\tif( e.state != 'deleted' ){\n\t\t\t\t\t\t\t\tnewDripArray.push( e );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} );\n\t\t\t\t\t\treturn newDripArray;\n\t\t\t\t\t};\n\n\t\t\t\t\tscope.dripListing = function dripListing ( ) {\n\t\t\t\t\t\t$http.post( \"/api/read_drips_by_bucket_and_user\" , {\n\t\t\t\t\t\t\t\"dripbucket_id\": ids[0],\n\t\t\t\t\t\t\t\"user_id\": ids[1]\n\t\t\t\t\t\t} )\n\t\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\t\tscope.drips = response.drips;\n\t\t\t\t\t\t\tdripListService.setDripList( ids[ 2 ] , scope.drips );\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tscope.drips = dripFilter( scope.drips );\n\t\t\t\t\t\t\t$(\"#welcome\").modal(\"hide\");\n\t\t\t\t\t\t} );\n\t\t\t\t\t};\n\n\t\t\t\t\tscope.linkUri = function linkUri ( link , service ) {\n\t\t\t\t\t\tvar video_id = link.split( 'v=' )[1];\n\t\t\t\t\t\tvar ampersandPosition = video_id.indexOf( '&' );\n\t\t\t\t\t\tif ( ampersandPosition != -1 ) {\n\t\t\t\t\t\t  video_id = video_id.substring( 0 , ampersandPosition );\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( service == \"thumb\" ) {\n\t\t\t\t\t\t\treturn Video.thumbnail( video_id );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn Video.videoSource( video_id );\n\t\t\t\t\t\t}\t\n\t\t\t\t\t};\n\n\t\t\t\t\tscope.showVideo = function showVideo ( link , drip ) {\n\t\t\t\t\t\t$( \"#videoLink\" ).modal( \"show\" );\n\t\t\t\t\t\t$rootScope.$broadcast( \"video-source\" , link , drip );\n\t\t\t\t\t};\n\n\t\t\t\t\tscope.dripListing( );\n\n\t\t\t\t\tscope.$on( \"drips-reload\" , \n\t\t\t\t\t\tfunction ( ) {\n\t\t\t\t\t\t\tscope.dripListing( );\n\t\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );","drip8\n\t.directive( \"dripModalBucket\" , [\n\t\t\"$http\",\n\t\t\"$rootScope\",\n\t\t'Video',\n\t\t'profileService',\n\t\tfunction directive ( $http , $rootScope , Video , profileService ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"A\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"link\": function onLink ( scope , element , atrributeSet ) {\n\t\t\t\t\tconsole.log( \"drip-modal-bucket\" );\n\t\t\t\t\t$rootScope.$on( 'see-bucket' , function( evt , data ){\n\t\t\t\t\t\tconsole.log( data )\n\t\t\t\t\t\tscope.directDrip = Video.videoSource( data.drip.link.split( \"v=\" )[1] );\n\t\t\t\t\t\tscope.dripBucketDetails = data;\n\t\t\t\t\t\tscope.comments = scope.dripBucketDetails.drip.comments;\n\t\t\t\t\t\tfor( var index = 0 ; index <= data.drip.dripbucket.drips.length-1 ; index++ ){\n\t\t\t\t\t\t\tvar video_id = scope.dripBucketDetails.drip.dripbucket.drips[ index ].link.split( \"v=\" )[1];\n\t\t\t\t\t\t\tconsole.log( video_id );\n\t\t\t\t\t\t\tscope.dripBucketDetails.drip.dripbucket.drips[ index ].thumb = Video.thumbnail( video_id );\n\t\t\t\t\t\t\tconsole.log( scope.dripBucketDetails.drip.dripbucket.drips[ index ].thumb );\n\t\t\t\t\t\t\tconsole.log( scope.dripBucketDetails.drip.dripbucket.drips[ index ].link );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconsole.log( scope.dripBucketDetails );\n\t\t\t\t\t\tscope.drip = scope.dripBucketDetails.drip;\n\t\t\t\t\t} );\n\n\n\t\t\t\t\tscope.changeVideo = function changeVideo( data ){\n\t\t\t\t\t\tscope.$broadcast( 'change-video' , data )\n\t\t\t\t\t};\n\n\t\t\t\t\tscope.$on( 'change-video' , function( evt , data ){\n\t\t\t\t\t\tscope.directDrip = Video.videoSource( data.link.split( \"v=\" )[1] );\n\t\t\t\t\t\tscope.comments = data.comments;\n\t\t\t\t\t\tscope.drip = data;\n\t\t\t\t\t\tconsole.log( data );\n\t\t\t\t\t} );\n\n\t\t\t\t\tscope.passProfile = function passProfile( profile ){\n\t\t\t\t\t\tlocalStorage.setItem(\"userProfile\", JSON.stringify( profile ) );\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tscope.react = function react( comment ){\n\t\t\t\t\t\tvar user = profileService.setProfile();\n\t\t\t\t\t\tvar fbId = user.profile_picture.split( \"/\" )[3];\n\t\t\t\t\t\tconsole.log( scope.dripBucketDetails );\n\t\t\t\t\t\tconsole.log( user.profile_picture.split( \"/\" ) )\n\t\t\t\t\t\t\n\t\t\t\t\t\t$http.post( \"/api/create_comment\" , {\n\t\t\t\t\t\t\t\t\"comment\":{\n\t\t\t\t\t\t\t\t\t\"user_id\"\t\t: user.id ,\n\t\t\t\t\t\t\t\t\t\"drip_id\"\t\t: scope.drip.id ,\n\t\t\t\t\t\t\t\t\t\"dripbucket_id\"\t: \"\" ,\n\t\t\t\t\t\t\t\t\t\"facebook_id\"\t: fbId ,\n\t\t\t\t\t\t\t\t\t\"body\"\t\t\t: comment\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\t\t\t\tvar comment = response.comment;\n\t\t\t\t\t\t\t\t\tcomment.user = user;\n\t\t\t\t\t\t\t\t\tscope.comments.push( comment );\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\tscope.dripComment = \"\";\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );","drip8\n\t.directive( \"drip\" , [\n\t\t\"$http\",\n\t\t\"$rootScope\",\n\t\tfunction directive ( $http , $rootScope ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"A\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"link\": function onLink ( scope , element , atrributeSet ) {\n\t\t\t\t\tscope.dripDetails = { \n\t\t\t\t\t\t\"state\": \"profile only\"\n\t\t\t\t\t};\n\n\t\t\t\t\tscope.profileData = { };\n\n\t\t\t\t\tscope.addDrip = function addDrip ( ) {\t\t\t\t\t\t\n\t\t\t\t\t\t$( \"#addADrip\" ).modal( \"hide\" );\n\t\t\t\t\t\tscope.dripDetails.user_id = scope.profileData.id;\n\t\t\t\t\t\t//console.log( scope.dripDetails.link.split( \":\" ) )\n\t\t\t\t\t\t$http.post( \"/api/add_drip\" , {\n\t\t\t\t\t\t\t\"drip\": scope.dripDetails\n\t\t\t\t\t\t} )\n\t\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\t\t$rootScope.$broadcast( \"drips-reload\" );\n\t\t\t\t\t\t\tscope.dripDetails = { \n\t\t\t\t\t\t\t\t\"state\": \"public\"\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t} );\t\t\t\t\t\t\n\t\t\t\t\t};\n\t\t\t\t\t/**\n\t\t\t\t\t\t * JavaScript function to match (and return) the video Id \n\t\t\t\t\t\t * of any valid Youtube Url, given as input string.\n\t\t\t\t\t\t * @author: Stephan Schmitz <eyecatchup@gmail.com>\n\t\t\t\t\t\t * @url: http://stackoverflow.com/a/10315969/624466\n\t\t\t\t\t\t ng-pattern\n\t\t\t\t\t\t /^(?:https?:\\/\\/)?(?:www\\.)?(?:youtu\\.be\\/|youtube\\.com\\/(?:embed\\/|v\\/|watch\\?v=|watch\\?.+&v=))((\\w|-){11})(?:\\S+)?$/;\n\t\t\t\t\t*/\n\n\t\t\t\t\tscope.$on( \"drip-new\" , \n\t\t\t\t\t\tfunction ( evt , bucketId , bucketName ) {\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tscope.dripDetails.dripbucket_id = bucketId;\n\t\t\t\t\t\t\tscope.bucketName = bucketName;\n\t\t\t\t\t\t\tscope.dripState = function dripState(){\n\t\t\t\t\t\t\t\tif( scope.bucketName == 'who I am' || scope.bucketName == 'what I do' || scope.bucketName == 'what I am proud of' ){\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\t\t\n\t\t\t\t\t\t} );\n\n\t\t\t\t\tscope.$on( \"profile-data\" , \n\t\t\t\t\t\tfunction ( evt , profile ) {\n\t\t\t\t\t\t\tscope.profileData = profile;\n\t\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );","drip8\n\t.directive( \"feature\" , [\n\t\t\"$http\",\n\t\tfunction directive ( $http ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"A\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"link\": function onLink ( scope , element , attributeSet ) {\t\t\t\t\t\n\n\t\t\t\t\tvar ids = attributeSet.feature.split( \"-\" );\n\n\t\t\t\t\telement.bind( \"click\" , \n\t\t\t\t\t\tfunction ( ) {\n\t\t\t\t\t\t\t$http.post( \"/api/new_featured\" , {\n\t\t\t\t\t\t\t\t\"user_id\": ids[0],\n\t\t\t\t\t\t\t\t\"drip_id\": ids[1]\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\t\t\twindow.location.reload( );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );","drip8\n\t.service( 'profileService' , [\n\t\tfunction(){\n\t\t\tvar profile = {};\n\t\t\treturn{\n\t\t\t\tsetProfile: function setProfile( credentials ){\n\t\t\t\t\tif( credentials ){\n\t\t\t\t\t\tprofile = credentials;\n\t\t\t\t\t\t//console.log( profile );\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn profile;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] )","drip8\n\t.directive( \"profile\" , [\n\t\t\"$http\",\n\t\t\"Video\",\n\t\t\"$rootScope\",\n\t\t'profileService',\n\t\tfunction directive ( $http , Video , $rootScope , profileService ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"A\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"compile\": function compile ( element , attributeSet ){\n\t\t\t\t\treturn{\n\n\t\t\t\t\t\tpre: function pre( scope , element , attributeSet ){\n\t\t\t\t\t\t\tscope.count = 0;\n\t\t\t\t\t\t\tscope.profileName = function profileName( name ){\n\t\t\t\t\t\t\t\tif( name != undefined ){\n\t\t\t\t\t\t\t\t\tscope.count += 1;\n\t\t\t\t\t\t\t\t\tif( scope.count == 1 ){\n\t\t\t\t\t\t\t\t\t\tvar name = name.split( \" \" );\n\t\t\t\t\t\t\t\t\t\tconsole.log( scope.count );\n\t\t\t\t\t\t\t\t\t\tconsole.log( name );\n\t\t\t\t\t\t\t\t\t\treturn name[ 0 ];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t},\n\n\t\t\t\t\t\tpost: function post( scope , element , attributeSet ){\n\t\t\t\t\t\t\t//console.log( \"profile\" );\n\t\t\t\t\t\t\tscope.profile = { };\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tscope.getUserInfo = function getUserInfo ( ) {\n\t\t\t\t\t\t\t\t$http.get( \"/api/user\" )\n\t\t\t\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\t\t\t\tscope.profile = response.data;\n\t\t\t\t\t\t\t\t\tscope.trustUrl( );\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tscope.passProfile = function passProfile( profile ){\n\t\t\t\t\t\t\t\tlocalStorage.setItem(\"userProfile\", JSON.stringify( profile ) );\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tscope.trustUrl = function trustUrl ( ) {\n\t\t\t\t\t\t\t\tvar video_id = \"\";\n\t\t\t\t\t\t\t\t$http.post( \"/api/video_featured\" , {\n\t\t\t\t\t\t\t\t\t\"user_id\": scope.profile.id\n\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\t\t\t\tif ( response.link ) {\n\t\t\t\t\t\t\t\t\t\tvideo_id = response.link.split( 'v=' )[1];\n\t\t\t\t\t\t\t\t\t\tvar ampersandPosition = video_id.indexOf( '&' );\n\t\t\t\t\t\t\t\t\t\tif ( ampersandPosition != -1 ) {\n\t\t\t\t\t\t\t\t\t\t  video_id = video_id.substring( 0 , ampersandPosition );\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tscope.profile.featured = response.link;\n\t\t\t\t\t\t\t\t\t$rootScope.$broadcast( \"profile-data\" , scope.profile );\n\t\t\t\t\t\t\t\t\tscope.profile.featuredVideo = Video.videoSource( video_id );\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tscope.$watch( 'profile' , function( newValue , oldValue ){\n\t\t\t\t\t\t\t\tif( newValue != oldValue ){\n\t\t\t\t\t\t\t\t\tscope.profile = newValue;\n\t\t\t\t\t\t\t\t\tconsole.log( \"Profile****\" , scope.profile );\n\t\t\t\t\t\t\t\t\tprofileService.setProfile( scope.profile );// own profile\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\tscope.getUserInfo( );\t\n\t\t\t\t\t\t\tscope.profileData = JSON.parse( localStorage.userProfile ); //visited profile\n\t\t\t\t\t\t\tconsole.log( scope.profileData );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );","drip8\n\t.directive( \"to\" , [\n\t\tfunction directive ( ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"A\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"link\": function onLink ( scope , element , attributeSet ) {\n\n\t\t\t\t\telement.bind( \"click\" , \n\t\t\t\t\t\tfunction ( ) {\n\t\t\t\t\t\t\twindow.location = attributeSet.to;\n\t\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );","drip8\n\t.directive( \"uiTemplate\" , [\n\t\tfunction directive ( ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"E\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"templateUrl\": function onTemplateLoad ( element , attributeSet ) {\n\t\t\t\t\treturn \"/api/template?template=\" + attributeSet.ngTemplate;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );","drip8\n\t.directive( \"videoDashboard\" , [\n\t\t\"$http\",\n\t\t\"Video\",\t\t\n\t\tfunction directive ( $http , Video ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"A\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"link\": function onLink ( scope , element , attributeSet ) {\n\t\t\t\t\tscope.videoSrc = Video.videoSource( attributeSet.videoSource.split( \"v=\" )[1] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );","drip8\n\t.directive( \"videoLink\" , [\n\t\t'$http',\n\t\t'profileService',\n\t\t'Video',\n\t\tfunction  directive ( $http , profileService , Video ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"A\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"link\": function onLink ( scope , element , attributeSet ) {\n\t\t\t\t\tscope.videoSource;\n\n\t\t\t\t\t$( \"#videoLink\" ).on( \"hidden.bs.modal\" , \n\t\t\t\t\t\tfunction ( ) {\n\t\t\t\t\t\t\tscope.$apply( function ( ) {\n\t\t\t\t\t\t\t\tscope.videoSource = \"\";\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} );\n\t\t\t\t\tscope.exit = function exit(){\n\t\t\t\t\t\t$(\"#videoLink\").modal(\"hide\");\n\t\t\t\t\t};\n\t\t\t\t\tscope.$on( \"video-source\" , \n\t\t\t\t\t\tfunction ( evt , src , drip ) {\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tscope.videoSource = src;\n\t\t\t\t\t\t\tconsole.log( drip );\n\t\t\t\t\t\t\tscope.directDrip = Video.videoSource( drip.link.split( \"v=\" )[1] );\n\t\t\t\t\t\t\t$http.post( \"/api/drip_each\" , { \"drip_id\": drip.id } )\n\t\t\t\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\t\t\t\tconsole.log( response );\n\t\t\t\t\t\t\t\t\tscope.comments = response.drip.comments;\n\t\t\t\t\t\t\t\t\tscope.drip = response.drip;\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} );\n\t\t\t\t\tscope.react = function react( comment ){\n\t\t\t\t\t\tvar user = profileService.setProfile();\n\t\t\t\t\t\tvar fbId = user.profile_picture.split( \"/\" )[3];\n\t\t\t\t\t\tconsole.log( scope.dripBucketDetails );\n\t\t\t\t\t\tconsole.log( user.profile_picture.split( \"/\" ) )\n\t\t\t\t\t\t\n\t\t\t\t\t\t$http.post( \"/api/create_comment\" , {\n\t\t\t\t\t\t\t\t\"comment\":{\n\t\t\t\t\t\t\t\t\t\"user_id\"\t\t: user.id ,\n\t\t\t\t\t\t\t\t\t\"drip_id\"\t\t: scope.drip.id ,\n\t\t\t\t\t\t\t\t\t\"dripbucket_id\"\t: \"\" ,\n\t\t\t\t\t\t\t\t\t\"facebook_id\"\t: fbId ,\n\t\t\t\t\t\t\t\t\t\"body\"\t\t\t: comment\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\t\t\t\tvar comment = response.comment;\n\t\t\t\t\t\t\t\t\tcomment.user = user;\n\t\t\t\t\t\t\t\t\tscope.comments.push( comment );\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\tscope.dripComment = \"\";\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );","drip8\n\t.factory( \"Video\" , [\n\t\t\"$sce\",\n\t\tfunction factory ( $sce ) {\n\t\t\tthis.thumbnail = function thumbnail ( youtubeId ) {\n\t\t\t\treturn $sce.trustAsResourceUrl( \"http://img.youtube.com/vi/\" + youtubeId + \"/0.jpg\" );\n\t\t\t};\n\n\t\t\tthis.videoSource = function videoSource ( youtubeId ) {\n\t\t\t\treturn $sce.trustAsResourceUrl( \"http://www.youtube.com/embed/\" + youtubeId + \"?rel=0&nologo=1&showinfo=0&modestbranding=1&iv_load_policy=3\" );\n\t\t\t};\n\n\t\t\treturn this;\n\t\t}\n\t] );"],"sourceRoot":"/source/"}