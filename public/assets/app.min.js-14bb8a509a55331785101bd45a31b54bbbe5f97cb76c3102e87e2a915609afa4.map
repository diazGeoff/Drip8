{"version":3,"sources":["app.js","auth._.js","bucket._.js","dashboard._.js","drip-list._.js","drip-modal-bucket._.js","drip._.js","feature._.js","profile-service._.js","profile._.js","to._.js","ui-template._.js","video-dashboard._.js","video-link._.js","video._.js"],"names":["drip8","angular","module","directive","restrict","scope","link","element","attributeSet","login","window","location","$rootScope","$http","profileService","dripListService","elemenet","profileData","buckets","newDrip","id","bucketName","$broadcast","getDrip","post","user_id","dripbucket_id","success","response","description","desc","newBucket","bucket","$","modal","name","state","reload","getAllBucket","profile","setProfile","splice","index","length","rename","drip","target","createAsyncTask","taskArray","setting","tasks","forEach","e","push","callback","drip_id","drips","dripList","setDripList","list","asyncTasks","async","parallel","err","taskResponse","deleteDrip","settingDropdown","$on","evt","JSON","parse","localStorage","userProfile","console","log","$parent","$window","dripEach","lastId","responseEach","category","asyncArray","array","getItem","ready","asyncTasksArray","data","drip_length","get","count","passProfile","setItem","stringify","fbShare","FB","ui","method","href","caption","seeBucket","loadMore","last","idLoad","service","credentials","Video","ids","split","dripFilter","newDripArray","dripListing","linkUri","video_id","ampersandPosition","indexOf","substring","thumbnail","videoSource","showVideo","atrributeSet","directDrip","dripBucketDetails","comments","dripbucket","thumb","exit","changeVideo","react","comment","user","fbId","profile_picture","facebook_id","body","dripComment","dripDetails","addDrip","http","slice","replace","dripState","bucketId","feature","bind","compile","pre","profileName","undefined","setCategory","logout","now","Date","setMonth","getMonth","cookievalue","escape","document","myform","customer","value","cookie","toUTCString","getUserInfo","trustUrl","featured","featuredVideo","$watch","newValue","oldValue","to","templateUrl","ngTemplate","videoSrc","on","$apply","src","factory","$sce","this","youtubeId","trustAsResourceUrl"],"mappings":"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","file":"app.min.js","sourcesContent":["var drip8 = angular.module( \"Drip8\" , [ 'angular-flexslider' , 'infinite-scroll' ] );\n\n","drip8\n\t.directive( \"auth\" , [\t\t\n\t\tfunction directive ( ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"A\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"link\": function onLink ( scope , element , attributeSet ) {\n\t\t\t\t\tscope.login = function login ( ) {\n\t\t\t\t\t\twindow.location = \"/auth/facebook\";\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );","drip8\n\t.directive( \"bucket\" , [\n\t\t\"$rootScope\",\n\t\t\"$http\",\n\t\t'profileService',\n\t\t'dripListService',\n\t\tfunction directive ( $rootScope , $http , profileService , dripListService ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"A\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"link\": function onLink ( scope , elemenet , attributeSet ) {\n\t\t\t\t\tscope.profileData = { };\n\n\t\t\t\t\tscope.buckets = [ ];\n\t\t\t\t\t////console.log( localStorage.userProfile );\n\t\t\t\t\tscope.newDrip = function newDrip ( id , bucketName ) {\n\t\t\t\t\t\t$rootScope.$broadcast( \"drip-new\" , id , bucketName );\n\t\t\t\t\t};\n\n\t\t\t\t\tscope.getDrip = function getDrip ( id ) {\n\t\t\t\t\t\t$http.post( \"/api/read_drips_by_bucket_and_user\" , {\n\t\t\t\t\t\t\t\"user_id\": scope.profileData.id,\n\t\t\t\t\t\t\t\"dripbucket_id\": id\n\t\t\t\t\t\t} )\n\t\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\t\t//console.log( response );\n\t\t\t\t\t\t} );\n\t\t\t\t\t};\n\n\t\t\t\t\tscope.description= function description( desc ){\n\t\t\t\t\t\treturn desc != null;\n\t\t\t\t\t};\n\t\t\t\t\tscope.newBucket = function newBucket ( bucket ) {\n\t\t\t\t\t\t$( \"#createDripBoardBox\" ).modal( \"hide\" );\n\t\t\t\t\t\t$http.post( \"/api/add_bucket\" , {\n\t\t\t\t\t\t\t\"bucket\": {\n\t\t\t\t\t\t\t\t\"user_id\": scope.profileData.id,\n\t\t\t\t\t\t\t\t\"name\": bucket.name,\n\t\t\t\t\t\t\t\t\"state\": bucket.state\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} ).success( function ( response ) {\t\t\t\t\t\t\t\n\t\t\t\t\t\t\twindow.location.reload( );\n\t\t\t\t\t\t} );\n\t\t\t\t\t};\n\n\t\t\t\t\tscope.getAllBucket = function getAllBucket ( ) {\t\t\t\t\t\t\n\t\t\t\t\t\t$http.post( \"/api/read_all_bucket_by_user\" , {\n\t\t\t\t\t\t\t\"user_id\": scope.profileData.id\n\t\t\t\t\t\t} )\n\t\t\t\t\t\t.success( function ( response ) {\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tscope.buckets = response.buckets;\n\t\t\t\t\t\t\tvar profile = profileService.setProfile();\n\t\t\t\t\t\t\tif( profile.id == '1' ){\n\n\t\t\t\t\t\t\t\tif( scope.profileData.id == '1' ){\n\t\t\t\t\t\t\t\t\tscope.buckets.splice( 0 , 3 );\n\t\t\t\t\t\t\t\t\t//console.log( scope.buckets );\n\n\t\t\t\t\t\t\t\t\tfor( var index = 0; index < scope.buckets.length; index++ ){\n\t\t\t\t\t\t\t\t\t\tswitch( scope.buckets[ index ].name ){\n\n\t\t\t\t\t\t\t\t\t\t\tcase \"Dota 2\":\n\t\t\t\t\t\t\t\t\t\t\t\tscope.buckets.splice( index , 1 );\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\tcase \"EG Dota 2\":\n\t\t\t\t\t\t\t\t\t\t\t\tscope.buckets.splice( index , 1 );\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\tcase \"Secret Dota 2\":\n\t\t\t\t\t\t\t\t\t\t\t\tscope.buckets.splice( index , 1 );\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\tcase \"Alliance Dota 2\":\n\t\t\t\t\t\t\t\t\t\t\t\tscope.buckets.splice( index , 1 );\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\tcase \"Na'Vi Dota 2\":\n\t\t\t\t\t\t\t\t\t\t\t\tscope.buckets.splice( index , 1 );\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\tcase \"Sumail Dota 2\":\n\t\t\t\t\t\t\t\t\t\t\t\tscope.buckets.splice( index , 1 );\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\tcase \"Miracle Doto\":\n\t\t\t\t\t\t\t\t\t\t\t\tscope.buckets.splice( index , 1 );\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} );\n\t\t\t\t\t};\n\t\t\t\t\tscope.rename = function rename ( drip , target ) {\t\t\t\t\t\t\n\t\t\t\t\t\t////console.log( drip , target );\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tvar createAsyncTask = function createAsyncTask ( taskArray , setting ) {\n\t\t\t\t\t\tvar tasks = [ ];\n\n\t\t\t\t\t\ttaskArray.forEach( function ( e ) {\n\t\t\t\t\t\t\t//console.log( e )\n\t\t\t\t\t\t\tif( setting == 'public' ){\n\t\t\t\t\t\t\t\tsetting = e.state\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tsetting = 'profile only'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttasks.push( function ( callback ) {\n\t\t\t\t\t\t\t\t$http.post( \"/api/update_drip_state\" , { \n\t\t\t\t\t\t\t\t\t\"drip_id\": e.id,\n\t\t\t\t\t\t\t\t\t\"state\": setting  \n\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\t\t\t\tcallback( null , response );\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} );\n\t\t\t\t\t\treturn tasks;\n\t\t\t\t\t};\n\n\t\t\t\t\tscope.setting = function setting ( drips , setting , target , id ) {\t\t\t\t\t\t\n\t\t\t\t\t\t////console.log( drips , setting , target );\n\n\t\t\t\t\t\tswitch( target ){\n\n\t\t\t\t\t\t\tcase 'drip':\n\t\t\t\t\t\t\t\t$http.post( '/api/update_drip_state' , {\n\t\t\t\t\t\t\t\t\t\"drip_id\": drips.id,\n\t\t\t\t\t\t\t\t\t\"state\": setting \n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t.success( function( response ){\n\t\t\t\t\t\t\t\t\t//console.log( \"New\" , response );\n\t\t\t\t\t\t\t\t\tscope.$broadcast( \"drips-reload\" );\n\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'bucket':\n\t\t\t\t\t\t\t\t//console.log( id );\n\t\t\t\t\t\t\t\tvar dripList = dripListService.setDripList();\n\t\t\t\t\t\t\t\tvar list = dripList[ id ];\n\t\t\t\t\t\t\t\t//console.log( list )\n\n\t\t\t\t\t\t\t\tvar asyncTasks = createAsyncTask( list , setting );\n\t\t\t\t\t\t\t\tasync\n\t\t\t\t\t\t\t\t\t.parallel( asyncTasks , function ( err , taskResponse ) {\n\t\t\t\t\t\t\t\t\t\t//console.log( taskResponse );\n\t\t\t\t\t\t\t\t\t\tscope.$broadcast( \"drips-reload\" );\n\t\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t};\n\t\t\t\t\tscope.deleteDrip = function deleteDrip ( drip , target ) {\t\t\t\t\t\t\n\t\t\t\t\t\t//console.log( drip , target );\n\t\t\t\t\t};\t\t\t\t\n\n\t\t\t\t\tscope.settingDropdown = function settingDropdown( name ){\n\t\t\t\t\t\tvar profile = profileService.setProfile() // actual profile\n\t\t\t\t\t\tif( scope.profileData.id != profile.id ){\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tswitch( name ){\n\n\t\t\t\t\t\t\t\tcase 'who I am':\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase 'what I do':\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase 'what I am proud of':\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\n\t\t\t\t\tscope.$on( \"profile-data\" , \n\t\t\t\t\t\tfunction ( evt , profile ) {\n\t\t\t\t\t\t\tscope.profileData = JSON.parse( localStorage.userProfile );// visited profile \n\t\t\t\t\t\t\t//console.log( \"profile data below\" )\n\t\t\t\t\t\t\t//console.log( scope.profileData )\n\t\t\t\t\t\t\tscope.getAllBucket( );\n\t\t\t\t\t\t} );\t\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );\n\ndrip8\n\t.directive( \"ifBucket\" , [\n\t\t\"$http\",\n\t\tfunction directive ( $http ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"A\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"link\": function onLink ( scope , element , attributeSet ) {\t\t\t\t\t\n\n\t\t\t\t\tconsole.log( scope.$parent.bucketName );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );","drip8\n\t.directive( \"dripDashboard\" , [\n\t\t\"$http\",\n\t\t'$rootScope',\n\t\t\"$window\",\n\t\tfunction directive ( $http , $rootScope , $window ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"A\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"link\": function onLink ( scope , element , attributeSet ) {\n\t\t\t\t\tscope.drips = [ ];\n\t\t\t\t\tscope.ready = false;\n\t\t\t\t\tscope.category = $window.localStorage.getItem( \"category\" ) || \"motivation\";\n\t\t\t\t\tscope.lastId = \"dont stop\";\n\t\t\t\t\tscope.asyncTasksArray = [];\n\n\t\t\t\t\t//console.log( scope.category );\n\t\t\t\t\t//console.log( \"init\" );\n\t\t\t\t\tvar counter = 0;\n\n\t\t\t\t\t//console.log( \"localStorage\" , $window.localStorage.getItem( \"category\" ) );\n\t\t\t\t\tfunction category(  ){\n\n\t\t\t\t\t\tswitch( scope.category ){\n\n\t\t\t\t\t\t\tcase \"motivation\":\n\t\t\t\t\t\t\t\tscope.tab = 1;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase \"thisMatter\":\n\t\t\t\t\t\t\t\tscope.tab = 2;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase \"music&arts\":\n\t\t\t\t\t\t\t\tscope.tab = 3;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase \"esports\":\n\t\t\t\t\t\t\t\tscope.tab = 4;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase \"science&Technology\":\n\t\t\t\t\t\t\t\tscope.tab = 5;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfunction dripEach( index, drips , lastId ){\n\t\t\t\t\t\t$http.post( \"/api/drip_each\" , { \"drip_id\": index } )\n\t\t\t\t\t\t\t\t.success( function ( responseEach ){\n\t\t\t\t\t\t\t\t\tif( responseEach.drip.state != scope.category ){\n\t\t\t\t\t\t\t\t\t\t\tdripEach( index-1 , drips );\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif( responseEach.drip != null && responseEach.drip.state == scope.category ){\n\t\t\t\t\t\t\t\t\t\tdrips.push( responseEach );\n\t\t\t\t\t\t\t\t\t\t//console.log( \"pushed\" )\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif( lastId == 0 ){\n\t\t\t\t\t\t\t\t\t\t//console.log( \"stop na\" )\n\t\t\t\t\t\t\t\t\t\tscope.lastId = 'stop';\n\t\t\t\t\t\t\t\t\t\t//console.log( scope.lastId );\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn responseEach;\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\n\t\t\t\t\tfunction asyncArray( index, array , lastId ){\n\t\t\t\t\t\t$http.post( \"/api/drip_each\" , { \"drip_id\": index } )\n\t\t\t\t\t\t\t\t.success( function ( responseEach ){\n\t\t\t\t\t\t\t\t\t//console.log( responseEach );\n\t\t\t\t\t\t\t\t\tscope.category = $window.localStorage.getItem( \"category\" ) || \"motivation\";\n\t\t\t\t\t\t\t\t\tif( responseEach.drip.state != scope.category ){\n\t\t\t\t\t\t\t\t\t\t\t//console.log( \"dili parehas\" , index-1 );\n\t\t\t\t\t\t\t\t\t\t\t//console.log( \"dili parehas\" , array );\n\t\t\t\t\t\t\t\t\t\t\tasyncArray( index-1 , array );\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif( responseEach.drip != null && responseEach.drip.state == scope.category ){\n\t\t\t\t\t\t\t\t\t\tarray.push( responseEach.drip.id );\n\t\t\t\t\t\t\t\t\t\t//console.log( \"parehas mi YEAH\" )\n\t\t\t\t\t\t\t\t\t\t//console.log( \"pushed\" , responseEach.drip.id )\n\t\t\t\t\t\t\t\t\t\tif( array.length < 3 ){\n\t\t\t\t\t\t\t\t\t\t\tasyncArray( index-1 , array );\n\t\t\t\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\t\t\t\t$rootScope.$broadcast( \"async-yeah\" , array )\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif( lastId == 0 ){\n\t\t\t\t\t\t\t\t\t\t//console.log( \"stop na\" )\n\t\t\t\t\t\t\t\t\t\tscope.lastId = 'stop';\n\t\t\t\t\t\t\t\t\t\t//console.log( scope.lastId );\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\n\n\t\t\t\t\t$rootScope.$on( \"async-yeah\" , function( evt , data ){\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t//console.log( data )\n\t\t\t\t\t\t\t//console.log( \"asynctasks\", scope.asyncTasksArray );\n\t\t\t\t\t\t\tvar asyncTasks = createAsyncTask( data );\n\t\t\t\t\t\t\tasync\n\t\t\t\t\t\t\t\t.parallel( asyncTasks , function ( err , taskResponse ) {\n\t\t\t\t\t\t\t\t\tfor( var index = 0 ; index < taskResponse.length ; index++ ){\n\t\t\t\t\t\t\t\t\t\tif( taskResponse[ index ].drip == null || taskResponse[ index ].drip.state != scope.category ){\n\t\t\t\t\t\t\t\t\t\t\t//console.log( \"***************************deleted\" , taskResponse[ index ].drip );\n\t\t\t\t\t\t\t\t\t\t\ttaskResponse.splice( index , 1 );\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tscope.drips = taskResponse;\n\t\t\t\t\t\t\t\t\t//console.log( taskResponse );\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\n\t\t\t\t\t} )\n\n\t\t\t\t\t$rootScope.$on( \"on-length-finish\" , function( evt , data ){\n\t\t\t\t\t\n\t\t\t\t\t\tscope.index = data;\n\t\t\t\t\t\tscope.drip_length = data;\n\t\t\t\t\t\t//console.log( data );\n\n\t\t\t\t\t\tasyncArray( scope.index , scope.asyncTasksArray );\n\t\t\t\t\t\t\n\t\t\t\t\t\t//console.log( \"ASYNC GAGO\" , scope.asyncTasksArray );\n\t\t\t\t\t} )\n\n\n\t\t\t\t\t$http.get( \"/api/drip_length\" )\n\t\t\t\t\t.success( function ( response ) {\n\n\t\t\t\t\t\t$rootScope.$broadcast( \"on-length-finish\" , response.count );\n\t\t\t\t\t\t\n\t\t\t\t\t} );\n\t\t\t\t\t\n\n\t\t\t\t\tscope.passProfile = function passProfile( profile ){\n\t\t\t\t\t\tlocalStorage.setItem(\"userProfile\", JSON.stringify( profile ) );\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tscope.fbShare = function fbShare( link ){\n\t\t\t\t\t\tFB.ui({\n\t\t\t\t\t\t  method: 'share',\n\t\t\t\t\t\t  href: link,\n\t\t\t\t\t\t  caption: \"www.drip8.com\",\n\t\t\t\t\t\t}, function(response){});\n\t\t\t\t\t\t//console.log( link );\n\t\t\t\t\t};\n\t\t\t\t\tvar createAsyncTask = function createAsyncTask ( taskArray ) {\n\t\t\t\t\t\tvar tasks = [ ];\n\t\t\t\t\t\ttaskArray.forEach( function ( e ) {\n\t\t\t\t\t\t\t//console.log( e )\n\t\t\t\t\t\t\ttasks.push( function ( callback ) {\n\t\t\t\t\t\t\t\t$http.post( \"/api/drip_each\" , { \"drip_id\": e } )\n\t\t\t\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\t\t\t\tcallback( null , response );\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} );\n\t\t\t\t\t\treturn tasks;\n\t\t\t\t\t};\n\t\t\t\t\tscope.seeBucket = function seeBucket( drip ){\n\t\t\t\t\t\t//console.log( \"see Bucket\" );\n\t\t\t\t\t\t$rootScope.$broadcast( 'see-bucket' , drip );\n\t\t\t\t\t};\n\n\t\t\t\t\tscope.loadMore = function loadMore() {\n\t\t\t\t\t\t//console.log( \" ***************  \" )\n\t\t\t\t\t\t//console.log( scope.drips );\n\t\t\t\t\t\t//console.log( scope.drips[scope.drips.length - 1] );\n\t\t\t\t\t    var last = scope.drips[scope.drips.length - 1];\n\t\t\t\t\t    if( last != null ){\n\t\t\t\t\t    \tvar lastId = last.drip.id;\n\t\t\t\t\t\t    var idLoad = lastId - 1;\n\t\t\t\t\t\t    if( lastId >= 0 && scope.lastId != 'stop' ){\n\t\t\t\t\t\t    \t//console.log( scope.lastId );\n\t\t\t\t\t\t    \t//console.log( lastId );\n\t\t\t\t\t\t    \t$http.post( \"/api/drip_each\" , { \"drip_id\": idLoad } )\n\t\t\t\t\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\t\t\t\t\t//callback( null , response );\n\t\t\t\t\t\t\t\t\t\t//console.log( response );\n\t\t\t\t\t\t\t\t\t\tscope.category = $window.localStorage.getItem( \"category\" ) || \"motivation\";\n\t\t\t\t\t\t\t\t\t\tif( response.drip.state != scope.category ){\n\t\t\t\t\t\t\t\t\t\t\tdripEach( response.drip.id-1 , scope.drips , lastId );\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tif( response.drip != null && response.drip.state == scope.category ){\n\t\t\t\t\t\t\t\t\t\t\tscope.drips.push( response );\n\t\t\t\t\t\t\t\t\t\t\t//console.log( \"pushed\" )\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tif( lastId == 0 ){\n\t\t\t\t\t\t\t\t\t\t\t//console.log( \"stop na\" )\n\t\t\t\t\t\t\t\t\t\t\tscope.lastId = 'stop';\n\t\t\t\t\t\t\t\t\t\t\t//console.log( scope.lastId );\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t    }\n\t\t\t\t\t    }\n\t\t\t\t\t};\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );\n\n\n// async\n// \t.parallel( [\n// \t\tfunction ( callback ) {\n\n// \t\t},\n// \t\tfunction ( callback ) {\n\n// \t\t}, \n// \t] , function doSomething ( err , arr ) {\n\n// \t} );","drip8\n\t.service( \"dripListService\" , [\n\t\t\tfunction(){\n\t\t\t\tvar dripList = [];\n\n\t\t\t\treturn {\n\t\t\t\t\t// takes id of dripBucket and sets drips in\n\t\t\t\t\tsetDripList: function setDripList( id , credentials ){\n\t\t\t\t\t\tif( credentials ){\n\t\t\t\t\t\t\tdripList[ id ] = credentials;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\treturn dripList\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t] );\n\ndrip8\n\t.directive( \"dripList\" , [\n\t\t\"$http\",\n\t\t\"Video\",\n\t\t\"$rootScope\",\n\t\t'dripListService',\n\t\tfunction directive ( $http , Video , $rootScope , dripListService ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"A\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"link\": function onLink ( scope , element , attributeSet ) {\n\n\t\t\t\t\tvar ids = attributeSet.dripList.split( \"-\" );\n\t\t\t\t\t//console.log( ids[ 2 ] );\n\t\t\t\t\tscope.drips = [ ];\n\n\t\t\t\t\tvar dripFilter = function dripFilter ( array ){\n\t\t\t\t\t\tvar newDripArray = [];\n\n\t\t\t\t\t\tarray.forEach( function( e ) {\n\t\t\t\t\t\t\tif( e.state != 'deleted' ){\n\t\t\t\t\t\t\t\tnewDripArray.push( e );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} );\n\t\t\t\t\t\treturn newDripArray;\n\t\t\t\t\t};\n\n\t\t\t\t\tscope.dripListing = function dripListing ( ) {\n\t\t\t\t\t\t$http.post( \"/api/read_drips_by_bucket_and_user\" , {\n\t\t\t\t\t\t\t\"dripbucket_id\": ids[0],\n\t\t\t\t\t\t\t\"user_id\": ids[1]\n\t\t\t\t\t\t} )\n\t\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\t\tscope.drips = response.drips;\n\t\t\t\t\t\t\tdripListService.setDripList( ids[ 2 ] , scope.drips );\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tscope.drips = dripFilter( scope.drips );\n\t\t\t\t\t\t\t$(\"#welcome\").modal(\"hide\");\n\t\t\t\t\t\t} );\n\t\t\t\t\t};\n\n\t\t\t\t\tscope.linkUri = function linkUri ( link , service ) {\n\t\t\t\t\t\tvar video_id = link.split( 'v=' )[1];\n\t\t\t\t\t\tvar ampersandPosition = video_id.indexOf( '&' );\n\t\t\t\t\t\tif ( ampersandPosition != -1 ) {\n\t\t\t\t\t\t  video_id = video_id.substring( 0 , ampersandPosition );\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( service == \"thumb\" ) {\n\t\t\t\t\t\t\treturn Video.thumbnail( video_id );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn Video.videoSource( video_id );\n\t\t\t\t\t\t}\t\n\t\t\t\t\t};\n\n\t\t\t\t\tscope.showVideo = function showVideo ( link , drip ) {\n\t\t\t\t\t\t$( \"#videoLink\" ).modal( \"show\" );\n\t\t\t\t\t\t$rootScope.$broadcast( \"video-source\" , link , drip );\n\t\t\t\t\t};\n\n\t\t\t\t\tscope.dripListing( );\n\n\t\t\t\t\tscope.$on( \"drips-reload\" , \n\t\t\t\t\t\tfunction ( ) {\n\t\t\t\t\t\t\tscope.dripListing( );\n\t\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );","drip8\n\t.directive( \"dripModalBucket\" , [\n\t\t\"$http\",\n\t\t\"$rootScope\",\n\t\t'Video',\n\t\t'profileService',\n\t\tfunction directive ( $http , $rootScope , Video , profileService ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"A\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"link\": function onLink ( scope , element , atrributeSet ) {\n\t\t\t\t\t//console.log( \"drip-modal-bucket\" );\n\t\t\t\t\t$rootScope.$on( 'see-bucket' , function( evt , data ){\n\t\t\t\t\t\t//console.log( data )\n\t\t\t\t\t\tscope.directDrip = Video.videoSource( data.drip.link.split( \"v=\" )[1] );\n\t\t\t\t\t\tscope.dripBucketDetails = data;\n\t\t\t\t\t\tscope.comments = scope.dripBucketDetails.drip.comments;\n\t\t\t\t\t\tfor( var index = 0 ; index <= data.drip.dripbucket.drips.length-1 ; index++ ){\n\t\t\t\t\t\t\tvar video_id = scope.dripBucketDetails.drip.dripbucket.drips[ index ].link.split( \"v=\" )[1];\n\t\t\t\t\t\t\t//console.log( video_id );\n\t\t\t\t\t\t\tscope.dripBucketDetails.drip.dripbucket.drips[ index ].thumb = Video.thumbnail( video_id );\n\t\t\t\t\t\t\t//console.log( scope.dripBucketDetails.drip.dripbucket.drips[ index ].thumb );\n\t\t\t\t\t\t\t//console.log( scope.dripBucketDetails.drip.dripbucket.drips[ index ].link );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//console.log( scope.dripBucketDetails );\n\t\t\t\t\t\tscope.drip = scope.dripBucketDetails.drip;\n\t\t\t\t\t} );\n\n\t\t\t\t\tscope.exit = function exit(){\n\t\t\t\t\t\t$(\"#myModal\").modal(\"hide\");\n\t\t\t\t\t};\n\n\t\t\t\t\tscope.fbShare = function fbShare( link ){\n\t\t\t\t\t\tFB.ui({\n\t\t\t\t\t\t  method: 'share',\n\t\t\t\t\t\t  href: link,\n\t\t\t\t\t\t  caption: \"www.drip8.com\",\n\t\t\t\t\t\t}, function(response){});\n\t\t\t\t\t\t//console.log( link );\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tscope.changeVideo = function changeVideo( data ){\n\t\t\t\t\t\tscope.$broadcast( 'change-video' , data )\n\t\t\t\t\t};\n\n\t\t\t\t\tscope.$on( 'change-video' , function( evt , data ){\n\t\t\t\t\t\tscope.directDrip = Video.videoSource( data.link.split( \"v=\" )[1] );\n\t\t\t\t\t\tscope.comments = data.comments;\n\t\t\t\t\t\tscope.drip = data;\n\t\t\t\t\t\t//console.log( data );\n\t\t\t\t\t} );\n\n\t\t\t\t\tscope.passProfile = function passProfile( profile ){\n\t\t\t\t\t\tlocalStorage.setItem(\"userProfile\", JSON.stringify( profile ) );\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tscope.react = function react( comment ){\n\t\t\t\t\t\tvar user = profileService.setProfile();\n\t\t\t\t\t\tvar fbId = user.profile_picture.split( \"/\" )[3];\n\t\t\t\t\t\t//console.log( scope.dripBucketDetails );\n\t\t\t\t\t\t//console.log( user.profile_picture.split( \"/\" ) )\n\t\t\t\t\t\t\n\t\t\t\t\t\t$http.post( \"/api/create_comment\" , {\n\t\t\t\t\t\t\t\t\"comment\":{\n\t\t\t\t\t\t\t\t\t\"user_id\"\t\t: user.id ,\n\t\t\t\t\t\t\t\t\t\"drip_id\"\t\t: scope.drip.id ,\n\t\t\t\t\t\t\t\t\t\"dripbucket_id\"\t: \"\" ,\n\t\t\t\t\t\t\t\t\t\"facebook_id\"\t: fbId ,\n\t\t\t\t\t\t\t\t\t\"body\"\t\t\t: comment\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\t\t\t\tvar comment = response.comment;\n\t\t\t\t\t\t\t\t\tcomment.user = user;\n\t\t\t\t\t\t\t\t\tscope.comments.push( comment );\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\tscope.dripComment = \"\";\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );","drip8\n\t.directive( \"drip\" , [\n\t\t\"$http\",\n\t\t\"$rootScope\",\n\t\tfunction directive ( $http , $rootScope ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"A\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"link\": function onLink ( scope , element , atrributeSet ) {\n\t\t\t\t\tscope.dripDetails = { \n\t\t\t\t\t\t\"state\": \"profile only\"\n\t\t\t\t\t};\n\n\t\t\t\t\tscope.profileData = { };\n\n\t\t\t\t\tscope.addDrip = function addDrip ( ) {\t\t\t\t\t\t\n\t\t\t\t\t\t$( \"#addADrip\" ).modal( \"hide\" );\n\t\t\t\t\t\tscope.dripDetails.user_id = scope.profileData.id;\n\t\t\t\t\t\tvar http = scope.dripDetails.link.slice( 0 , 5 );\n\t\t\t\t\t\tif( http == \"https\" ){\n\t\t\t\t\t\t\tvar link = scope.dripDetails.link.replace( 'https' , 'http' );\n\t\t\t\t\t\t\tscope.dripDetails.link = link;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\n\t\t\t\t\t\t//console.log( scope.dripDetails.link.split( \":\" ) )\n\t\t\t\t\t\t$http.post( \"/api/add_drip\" , {\n\t\t\t\t\t\t\t\"drip\": scope.dripDetails\n\t\t\t\t\t\t} )\n\t\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\t\t$rootScope.$broadcast( \"drips-reload\" );\n\t\t\t\t\t\t\tscope.dripDetails = { \n\t\t\t\t\t\t\t\t\"state\": \"public\"\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t} );\n\t\t\t\t\t\t//console.log( link );\t\t\t\n\t\t\t\t\t};\n\t\t\t\t\t/**\n\t\t\t\t\t\t * JavaScript function to match (and return) the video Id \n\t\t\t\t\t\t * of any valid Youtube Url, given as input string.\n\t\t\t\t\t\t * @author: Stephan Schmitz <eyecatchup@gmail.com>\n\t\t\t\t\t\t * @url: http://stackoverflow.com/a/10315969/624466\n\t\t\t\t\t\t ng-pattern\n\t\t\t\t\t\t /^(?:https?:\\/\\/)?(?:www\\.)?(?:youtu\\.be\\/|youtube\\.com\\/(?:embed\\/|v\\/|watch\\?v=|watch\\?.+&v=))((\\w|-){11})(?:\\S+)?$/;\n\t\t\t\t\t*/\n\t\t\t\t\tscope.dripState = function dripState(){\n\t\t\t\t\t\tif( scope.bucketName == 'who I am' || scope.bucketName == 'what I do' || scope.bucketName == 'what I am proud of' ){\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tscope.$on( \"drip-new\" , \n\t\t\t\t\t\tfunction ( evt , bucketId , bucketName ) {\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tscope.dripDetails.dripbucket_id = bucketId;\n\t\t\t\t\t\t\tscope.bucketName = bucketName;\n\t\t\t\t\t\t\tscope.dripState = function dripState(){\n\t\t\t\t\t\t\t\tif( scope.bucketName == 'who I am' || scope.bucketName == 'what I do' || scope.bucketName == 'what I am proud of' ){\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\t\t\n\t\t\t\t\t\t} );\n\n\t\t\t\t\tscope.$on( \"profile-data\" , \n\t\t\t\t\t\tfunction ( evt , profile ) {\n\t\t\t\t\t\t\tscope.profileData = profile;\n\t\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );","drip8\n\t.directive( \"feature\" , [\n\t\t\"$http\",\n\t\tfunction directive ( $http ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"A\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"link\": function onLink ( scope , element , attributeSet ) {\t\t\t\t\t\n\n\t\t\t\t\tvar ids = attributeSet.feature.split( \"-\" );\n\n\t\t\t\t\telement.bind( \"click\" , \n\t\t\t\t\t\tfunction ( ) {\n\t\t\t\t\t\t\t$http.post( \"/api/new_featured\" , {\n\t\t\t\t\t\t\t\t\"user_id\": ids[0],\n\t\t\t\t\t\t\t\t\"drip_id\": ids[1]\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\t\t\twindow.location.reload( );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );","drip8\n\t.service( 'profileService' , [\n\t\tfunction(){\n\t\t\tvar profile = {};\n\t\t\treturn{\n\t\t\t\tsetProfile: function setProfile( credentials ){\n\t\t\t\t\tif( credentials ){\n\t\t\t\t\t\tprofile = credentials;\n\t\t\t\t\t\t//console.log( profile );\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn profile;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] )","drip8\n\t.directive( \"profile\" , [\n\t\t\"$http\",\n\t\t\"Video\",\n\t\t\"$rootScope\",\n\t\t'profileService',\n\t\tfunction directive ( $http , Video , $rootScope , profileService ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"A\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"compile\": function compile ( element , attributeSet ){\n\t\t\t\t\treturn{\n\n\t\t\t\t\t\tpre: function pre( scope , element , attributeSet ){\n\t\t\t\t\t\t\tscope.count = 0;\n\t\t\t\t\t\t\tscope.profileName = function profileName( name ){\n\t\t\t\t\t\t\t\tif( name != undefined ){\n\t\t\t\t\t\t\t\t\tscope.count += 1;\n\t\t\t\t\t\t\t\t\tif( scope.count == 1 ){\n\t\t\t\t\t\t\t\t\t\tvar name = name.split( \" \" );\n\t\t\t\t\t\t\t\t\t\t//console.log( scope.count );\n\t\t\t\t\t\t\t\t\t\t//console.log( name );\n\t\t\t\t\t\t\t\t\t\treturn name[ 0 ];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t},\n\n\t\t\t\t\t\tpost: function post( scope , element , attributeSet ){\n\t\t\t\t\t\t\t////console.log( \"profile\" );\n\t\t\t\t\t\t\tscope.setCategory = function setCategory( category ){\n\t\t\t\t\t\t\t\tlocalStorage.setItem( \"category\", category );\n\t\t\t\t\t\t\t\tconsole.log( category );\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tscope.logout = function logout(){\n\t\t\t\t\t\t\t\tvar now = new Date();\n\t\t\t\t                now.setMonth( now.getMonth() - 1 );\n\t\t\t\t                cookievalue = escape(document.myform.customer.value) + \";\"\n\t\t\t\t               \n\t\t\t\t                document.cookie=\"_Drip8_session=\" + cookievalue;\n\t\t\t\t                document.cookie = \"expires=\" + now.toUTCString() + \";\"\n\t\t\t\t\t\t\t\t//console.log( \"logout\" );\n\t\t\t\t\t\t\t\t// FB.logout(function(response) {\n\t\t\t\t\t\t\t\t//   // user is now logged out\n\t\t\t\t\t\t\t\t//   //console.log( response );\n\t\t\t\t\t\t\t\t// });\n\t\t\t\t\t\t\t\t//console.log( document.cookie )\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t$( \"#welcomeHere\" ).modal( \"show\" );\n\t\t\t\t\t\t\tscope.profile = { };\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tscope.getUserInfo = function getUserInfo ( ) {\n\t\t\t\t\t\t\t\t$http.get( \"/api/user\" )\n\t\t\t\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\t\t\t\tscope.profile = response.data;\n\t\t\t\t\t\t\t\t\tscope.trustUrl( );\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tscope.passProfile = function passProfile( profile ){\n\t\t\t\t\t\t\t\tlocalStorage.setItem(\"userProfile\", JSON.stringify( profile ) );\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tscope.trustUrl = function trustUrl ( ) {\n\t\t\t\t\t\t\t\tvar video_id = \"\";\n\t\t\t\t\t\t\t\t$http.post( \"/api/video_featured\" , {\n\t\t\t\t\t\t\t\t\t\"user_id\": scope.profile.id\n\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\t\t\t\tif ( response.link ) {\n\t\t\t\t\t\t\t\t\t\tvideo_id = response.link.split( 'v=' )[1];\n\t\t\t\t\t\t\t\t\t\tvar ampersandPosition = video_id.indexOf( '&' );\n\t\t\t\t\t\t\t\t\t\tif ( ampersandPosition != -1 ) {\n\t\t\t\t\t\t\t\t\t\t  video_id = video_id.substring( 0 , ampersandPosition );\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tscope.profile.featured = response.link;\n\t\t\t\t\t\t\t\t\t$rootScope.$broadcast( \"profile-data\" , scope.profile );\n\t\t\t\t\t\t\t\t\tscope.profile.featuredVideo = Video.videoSource( video_id );\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tscope.$watch( 'profile' , function( newValue , oldValue ){\n\t\t\t\t\t\t\t\tif( newValue != oldValue ){\n\t\t\t\t\t\t\t\t\tscope.profile = newValue;\n\t\t\t\t\t\t\t\t\t//console.log( \"Profile****\" , scope.profile );\n\t\t\t\t\t\t\t\t\tprofileService.setProfile( scope.profile );// own profile\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\tscope.getUserInfo( );\t\n\t\t\t\t\t\t\tscope.profileData = JSON.parse( localStorage.userProfile ); //visited profile\n\t\t\t\t\t\t\t//console.log( scope.profileData );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );","drip8\n\t.directive( \"to\" , [\n\t\tfunction directive ( ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"A\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"link\": function onLink ( scope , element , attributeSet ) {\n\n\t\t\t\t\telement.bind( \"click\" , \n\t\t\t\t\t\tfunction ( ) {\n\t\t\t\t\t\t\twindow.location = attributeSet.to;\n\t\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );","drip8\n\t.directive( \"uiTemplate\" , [\n\t\tfunction directive ( ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"E\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"templateUrl\": function onTemplateLoad ( element , attributeSet ) {\n\t\t\t\t\treturn \"/api/template?template=\" + attributeSet.ngTemplate;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );","drip8\n\t.directive( \"videoDashboard\" , [\n\t\t\"$http\",\n\t\t\"Video\",\t\t\n\t\tfunction directive ( $http , Video ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"A\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"link\": function onLink ( scope , element , attributeSet ) {\n\t\t\t\t\tscope.videoSrc = Video.videoSource( attributeSet.videoSource.split( \"v=\" )[1] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );","drip8\n\t.directive( \"videoLink\" , [\n\t\t'$http',\n\t\t'profileService',\n\t\t'Video',\n\t\tfunction  directive ( $http , profileService , Video ) {\n\t\t\treturn {\n\t\t\t\t\"restrict\": \"A\",\n\t\t\t\t\"scope\": true,\n\t\t\t\t\"link\": function onLink ( scope , element , attributeSet ) {\n\t\t\t\t\tscope.videoSource;\n\n\t\t\t\t\t$( \"#videoLink\" ).on( \"hidden.bs.modal\" , \n\t\t\t\t\t\tfunction ( ) {\n\t\t\t\t\t\t\tscope.$apply( function ( ) {\n\t\t\t\t\t\t\t\tscope.videoSource = \"\";\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} );\n\t\t\t\t\tscope.exit = function exit(){\n\t\t\t\t\t\t$(\"#videoLink\").modal(\"hide\");\n\t\t\t\t\t\t//console.log( 'exit' )\n\t\t\t\t\t};\n\t\t\t\t\tscope.$on( \"video-source\" , \n\t\t\t\t\t\tfunction ( evt , src , drip ) {\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tscope.videoSource = src;\n\t\t\t\t\t\t\t//console.log( drip );\n\t\t\t\t\t\t\tscope.directDrip = Video.videoSource( drip.link.split( \"v=\" )[1] );\n\t\t\t\t\t\t\t$http.post( \"/api/drip_each\" , { \"drip_id\": drip.id } )\n\t\t\t\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\t\t\t\t//console.log( response );\n\t\t\t\t\t\t\t\t\tscope.comments = response.drip.comments;\n\t\t\t\t\t\t\t\t\tscope.drip = response.drip;\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} );\n\t\t\t\t\tscope.fbShare = function fbShare( link ){\n\t\t\t\t\t\tFB.ui({\n\t\t\t\t\t\t  method: 'share',\n\t\t\t\t\t\t  href: link,\n\t\t\t\t\t\t  caption: \"www.drip8.com\",\n\t\t\t\t\t\t}, function(response){});\n\t\t\t\t\t\t//console.log( link );\n\t\t\t\t\t};\n\t\t\t\t\tscope.react = function react( comment ){\n\t\t\t\t\t\tvar user = profileService.setProfile();\n\t\t\t\t\t\tvar fbId = user.profile_picture.split( \"/\" )[3];\n\t\t\t\t\t\t//console.log( scope.dripBucketDetails );\n\t\t\t\t\t\t//console.log( user.profile_picture.split( \"/\" ) )\n\t\t\t\t\t\t\n\t\t\t\t\t\t$http.post( \"/api/create_comment\" , {\n\t\t\t\t\t\t\t\t\"comment\":{\n\t\t\t\t\t\t\t\t\t\"user_id\"\t\t: user.id ,\n\t\t\t\t\t\t\t\t\t\"drip_id\"\t\t: scope.drip.id ,\n\t\t\t\t\t\t\t\t\t\"dripbucket_id\"\t: \"\" ,\n\t\t\t\t\t\t\t\t\t\"facebook_id\"\t: fbId ,\n\t\t\t\t\t\t\t\t\t\"body\"\t\t\t: comment\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t\t.success( function ( response ) {\n\t\t\t\t\t\t\t\t\tvar comment = response.comment;\n\t\t\t\t\t\t\t\t\tcomment.user = user;\n\t\t\t\t\t\t\t\t\tscope.comments.push( comment );\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\tscope.dripComment = \"\";\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t] );","drip8\n\t.factory( \"Video\" , [\n\t\t\"$sce\",\n\t\tfunction factory ( $sce ) {\n\t\t\tthis.thumbnail = function thumbnail ( youtubeId ) {\n\t\t\t\treturn $sce.trustAsResourceUrl( \"http://img.youtube.com/vi/\" + youtubeId + \"/0.jpg\" );\n\t\t\t};\n\n\t\t\tthis.videoSource = function videoSource ( youtubeId ) {\n\t\t\t\treturn $sce.trustAsResourceUrl( \"http://www.youtube.com/embed/\" + youtubeId + \"?rel=0&nologo=1&showinfo=0&modestbranding=1&iv_load_policy=3\" );\n\t\t\t};\n\n\t\t\treturn this;\n\t\t}\n\t] );"],"sourceRoot":"/source/"}